

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Oct 10 16:39:25 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4550 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   108                           SPPDATA equ 0F62h ;# 
   109  0000                     # 74 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   110                           SPPCFG equ 0F63h ;# 
   111  0000                     # 151 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   112                           SPPEPS equ 0F64h ;# 
   113  0000                     # 225 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   114                           SPPCON equ 0F65h ;# 
   115  0000                     # 251 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   116                           UFRM equ 0F66h ;# 
   117  0000                     # 258 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   118                           UFRML equ 0F66h ;# 
   119  0000                     # 336 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   120                           UFRMH equ 0F67h ;# 
   121  0000                     # 376 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   122                           UIR equ 0F68h ;# 
   123  0000                     # 432 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   124                           UIE equ 0F69h ;# 
   125  0000                     # 488 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   126                           UEIR equ 0F6Ah ;# 
   127  0000                     # 539 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   128                           UEIE equ 0F6Bh ;# 
   129  0000                     # 590 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   130                           USTAT equ 0F6Ch ;# 
   131  0000                     # 650 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   132                           UCON equ 0F6Dh ;# 
   133  0000                     # 701 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   134                           UADDR equ 0F6Eh ;# 
   135  0000                     # 765 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   136                           UCFG equ 0F6Fh ;# 
   137  0000                     # 844 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   138                           UEP0 equ 0F70h ;# 
   139  0000                     # 952 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   140                           UEP1 equ 0F71h ;# 
   141  0000                     # 1060 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   142                           UEP2 equ 0F72h ;# 
   143  0000                     # 1168 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   144                           UEP3 equ 0F73h ;# 
   145  0000                     # 1276 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   146                           UEP4 equ 0F74h ;# 
   147  0000                     # 1384 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   148                           UEP5 equ 0F75h ;# 
   149  0000                     # 1492 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   150                           UEP6 equ 0F76h ;# 
   151  0000                     # 1600 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   152                           UEP7 equ 0F77h ;# 
   153  0000                     # 1708 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   154                           UEP8 equ 0F78h ;# 
   155  0000                     # 1784 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   156                           UEP9 equ 0F79h ;# 
   157  0000                     # 1860 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   158                           UEP10 equ 0F7Ah ;# 
   159  0000                     # 1936 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   160                           UEP11 equ 0F7Bh ;# 
   161  0000                     # 2012 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   162                           UEP12 equ 0F7Ch ;# 
   163  0000                     # 2088 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   164                           UEP13 equ 0F7Dh ;# 
   165  0000                     # 2164 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   166                           UEP14 equ 0F7Eh ;# 
   167  0000                     # 2240 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   168                           UEP15 equ 0F7Fh ;# 
   169  0000                     # 2316 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   170                           PORTA equ 0F80h ;# 
   171  0000                     # 2455 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   172                           PORTB equ 0F81h ;# 
   173  0000                     # 2565 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   174                           PORTC equ 0F82h ;# 
   175  0000                     # 2707 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   176                           PORTD equ 0F83h ;# 
   177  0000                     # 2828 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   178                           PORTE equ 0F84h ;# 
   179  0000                     # 2975 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   180                           LATA equ 0F89h ;# 
   181  0000                     # 3075 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   182                           LATB equ 0F8Ah ;# 
   183  0000                     # 3187 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   184                           LATC equ 0F8Bh ;# 
   185  0000                     # 3265 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   186                           LATD equ 0F8Ch ;# 
   187  0000                     # 3377 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   188                           LATE equ 0F8Dh ;# 
   189  0000                     # 3429 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   190                           TRISA equ 0F92h ;# 
   191  0000                     # 3434 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   192                           DDRA equ 0F92h ;# 
   193  0000                     # 3627 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   194                           TRISB equ 0F93h ;# 
   195  0000                     # 3632 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   196                           DDRB equ 0F93h ;# 
   197  0000                     # 3849 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   198                           TRISC equ 0F94h ;# 
   199  0000                     # 3854 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   200                           DDRC equ 0F94h ;# 
   201  0000                     # 4003 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   202                           TRISD equ 0F95h ;# 
   203  0000                     # 4008 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   204                           DDRD equ 0F95h ;# 
   205  0000                     # 4225 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   206                           TRISE equ 0F96h ;# 
   207  0000                     # 4230 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   208                           DDRE equ 0F96h ;# 
   209  0000                     # 4327 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   210                           OSCTUNE equ 0F9Bh ;# 
   211  0000                     # 4386 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   212                           PIE1 equ 0F9Dh ;# 
   213  0000                     # 4470 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   214                           PIR1 equ 0F9Eh ;# 
   215  0000                     # 4554 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   216                           IPR1 equ 0F9Fh ;# 
   217  0000                     # 4638 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   218                           PIE2 equ 0FA0h ;# 
   219  0000                     # 4709 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   220                           PIR2 equ 0FA1h ;# 
   221  0000                     # 4780 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   222                           IPR2 equ 0FA2h ;# 
   223  0000                     # 4851 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   224                           EECON1 equ 0FA6h ;# 
   225  0000                     # 4917 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   226                           EECON2 equ 0FA7h ;# 
   227  0000                     # 4924 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   228                           EEDATA equ 0FA8h ;# 
   229  0000                     # 4931 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   230                           EEADR equ 0FA9h ;# 
   231  0000                     # 4938 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   232                           RCSTA equ 0FABh ;# 
   233  0000                     # 4943 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   234                           RCSTA1 equ 0FABh ;# 
   235  0000                     # 5148 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   236                           TXSTA equ 0FACh ;# 
   237  0000                     # 5153 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   238                           TXSTA1 equ 0FACh ;# 
   239  0000                     # 5404 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   240                           TXREG equ 0FADh ;# 
   241  0000                     # 5409 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   242                           TXREG1 equ 0FADh ;# 
   243  0000                     # 5416 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   244                           RCREG equ 0FAEh ;# 
   245  0000                     # 5421 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   246                           RCREG1 equ 0FAEh ;# 
   247  0000                     # 5428 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   248                           SPBRG equ 0FAFh ;# 
   249  0000                     # 5433 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   250                           SPBRG1 equ 0FAFh ;# 
   251  0000                     # 5440 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   252                           SPBRGH equ 0FB0h ;# 
   253  0000                     # 5447 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   254                           T3CON equ 0FB1h ;# 
   255  0000                     # 5568 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   256                           TMR3 equ 0FB2h ;# 
   257  0000                     # 5575 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   258                           TMR3L equ 0FB2h ;# 
   259  0000                     # 5582 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   260                           TMR3H equ 0FB3h ;# 
   261  0000                     # 5589 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   262                           CMCON equ 0FB4h ;# 
   263  0000                     # 5679 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   264                           CVRCON equ 0FB5h ;# 
   265  0000                     # 5764 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   266                           ECCP1AS equ 0FB6h ;# 
   267  0000                     # 5769 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   268                           CCP1AS equ 0FB6h ;# 
   269  0000                     # 5926 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   270                           ECCP1DEL equ 0FB7h ;# 
   271  0000                     # 5931 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   272                           CCP1DEL equ 0FB7h ;# 
   273  0000                     # 6064 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   274                           BAUDCON equ 0FB8h ;# 
   275  0000                     # 6069 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   276                           BAUDCTL equ 0FB8h ;# 
   277  0000                     # 6244 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   278                           CCP2CON equ 0FBAh ;# 
   279  0000                     # 6308 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   280                           CCPR2 equ 0FBBh ;# 
   281  0000                     # 6315 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   282                           CCPR2L equ 0FBBh ;# 
   283  0000                     # 6322 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   284                           CCPR2H equ 0FBCh ;# 
   285  0000                     # 6329 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   286                           CCP1CON equ 0FBDh ;# 
   287  0000                     # 6334 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   288                           ECCP1CON equ 0FBDh ;# 
   289  0000                     # 6491 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   290                           CCPR1 equ 0FBEh ;# 
   291  0000                     # 6498 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   292                           CCPR1L equ 0FBEh ;# 
   293  0000                     # 6505 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   294                           CCPR1H equ 0FBFh ;# 
   295  0000                     # 6512 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   296                           ADCON2 equ 0FC0h ;# 
   297  0000                     # 6583 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   298                           ADCON1 equ 0FC1h ;# 
   299  0000                     # 6668 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   300                           ADCON0 equ 0FC2h ;# 
   301  0000                     # 6787 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   302                           ADRES equ 0FC3h ;# 
   303  0000                     # 6794 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   304                           ADRESL equ 0FC3h ;# 
   305  0000                     # 6801 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   306                           ADRESH equ 0FC4h ;# 
   307  0000                     # 6808 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   308                           SSPCON2 equ 0FC5h ;# 
   309  0000                     # 6870 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   310                           SSPCON1 equ 0FC6h ;# 
   311  0000                     # 6940 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   312                           SSPSTAT equ 0FC7h ;# 
   313  0000                     # 7188 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   314                           SSPADD equ 0FC8h ;# 
   315  0000                     # 7195 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   316                           SSPBUF equ 0FC9h ;# 
   317  0000                     # 7202 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   318                           T2CON equ 0FCAh ;# 
   319  0000                     # 7300 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   320                           PR2 equ 0FCBh ;# 
   321  0000                     # 7305 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   322                           MEMCON equ 0FCBh ;# 
   323  0000                     # 7410 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   324                           TMR2 equ 0FCCh ;# 
   325  0000                     # 7417 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   326                           T1CON equ 0FCDh ;# 
   327  0000                     # 7520 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   328                           TMR1 equ 0FCEh ;# 
   329  0000                     # 7527 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   330                           TMR1L equ 0FCEh ;# 
   331  0000                     # 7534 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   332                           TMR1H equ 0FCFh ;# 
   333  0000                     # 7541 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   334                           RCON equ 0FD0h ;# 
   335  0000                     # 7690 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   336                           WDTCON equ 0FD1h ;# 
   337  0000                     # 7718 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   338                           HLVDCON equ 0FD2h ;# 
   339  0000                     # 7723 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   340                           LVDCON equ 0FD2h ;# 
   341  0000                     # 7988 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   342                           OSCCON equ 0FD3h ;# 
   343  0000                     # 8071 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   344                           T0CON equ 0FD5h ;# 
   345  0000                     # 8141 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   346                           TMR0 equ 0FD6h ;# 
   347  0000                     # 8148 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   348                           TMR0L equ 0FD6h ;# 
   349  0000                     # 8155 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   350                           TMR0H equ 0FD7h ;# 
   351  0000                     # 8162 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   352                           STATUS equ 0FD8h ;# 
   353  0000                     # 8233 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   354                           FSR2 equ 0FD9h ;# 
   355  0000                     # 8240 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   356                           FSR2L equ 0FD9h ;# 
   357  0000                     # 8247 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   358                           FSR2H equ 0FDAh ;# 
   359  0000                     # 8254 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   360                           PLUSW2 equ 0FDBh ;# 
   361  0000                     # 8261 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   362                           PREINC2 equ 0FDCh ;# 
   363  0000                     # 8268 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   364                           POSTDEC2 equ 0FDDh ;# 
   365  0000                     # 8275 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   366                           POSTINC2 equ 0FDEh ;# 
   367  0000                     # 8282 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   368                           INDF2 equ 0FDFh ;# 
   369  0000                     # 8289 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   370                           BSR equ 0FE0h ;# 
   371  0000                     # 8296 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   372                           FSR1 equ 0FE1h ;# 
   373  0000                     # 8303 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   374                           FSR1L equ 0FE1h ;# 
   375  0000                     # 8310 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   376                           FSR1H equ 0FE2h ;# 
   377  0000                     # 8317 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   378                           PLUSW1 equ 0FE3h ;# 
   379  0000                     # 8324 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   380                           PREINC1 equ 0FE4h ;# 
   381  0000                     # 8331 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   382                           POSTDEC1 equ 0FE5h ;# 
   383  0000                     # 8338 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   384                           POSTINC1 equ 0FE6h ;# 
   385  0000                     # 8345 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   386                           INDF1 equ 0FE7h ;# 
   387  0000                     # 8352 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   388                           WREG equ 0FE8h ;# 
   389  0000                     # 8359 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   390                           FSR0 equ 0FE9h ;# 
   391  0000                     # 8366 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   392                           FSR0L equ 0FE9h ;# 
   393  0000                     # 8373 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   394                           FSR0H equ 0FEAh ;# 
   395  0000                     # 8380 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   396                           PLUSW0 equ 0FEBh ;# 
   397  0000                     # 8387 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   398                           PREINC0 equ 0FECh ;# 
   399  0000                     # 8394 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   400                           POSTDEC0 equ 0FEDh ;# 
   401  0000                     # 8401 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   402                           POSTINC0 equ 0FEEh ;# 
   403  0000                     # 8408 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   404                           INDF0 equ 0FEFh ;# 
   405  0000                     # 8415 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   406                           INTCON3 equ 0FF0h ;# 
   407  0000                     # 8507 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   408                           INTCON2 equ 0FF1h ;# 
   409  0000                     # 8584 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   410                           INTCON equ 0FF2h ;# 
   411  0000                     # 8701 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   412                           PROD equ 0FF3h ;# 
   413  0000                     # 8708 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   414                           PRODL equ 0FF3h ;# 
   415  0000                     # 8715 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   416                           PRODH equ 0FF4h ;# 
   417  0000                     # 8722 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   418                           TABLAT equ 0FF5h ;# 
   419  0000                     # 8731 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   420                           TBLPTR equ 0FF6h ;# 
   421  0000                     # 8738 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   422                           TBLPTRL equ 0FF6h ;# 
   423  0000                     # 8745 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   424                           TBLPTRH equ 0FF7h ;# 
   425  0000                     # 8752 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   426                           TBLPTRU equ 0FF8h ;# 
   427  0000                     # 8761 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   428                           PCLAT equ 0FF9h ;# 
   429  0000                     # 8768 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   430                           PC equ 0FF9h ;# 
   431  0000                     # 8775 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   432                           PCL equ 0FF9h ;# 
   433  0000                     # 8782 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   434                           PCLATH equ 0FFAh ;# 
   435  0000                     # 8789 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   436                           PCLATU equ 0FFBh ;# 
   437  0000                     # 8796 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   438                           STKPTR equ 0FFCh ;# 
   439  0000                     # 8872 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   440                           TOS equ 0FFDh ;# 
   441  0000                     # 8879 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   442                           TOSL equ 0FFDh ;# 
   443  0000                     # 8886 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   444                           TOSH equ 0FFEh ;# 
   445  0000                     # 8893 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   446                           TOSU equ 0FFFh ;# 
   447  0000                     # 54 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   448                           SPPDATA equ 0F62h ;# 
   449  0000                     # 74 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   450                           SPPCFG equ 0F63h ;# 
   451  0000                     # 151 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   452                           SPPEPS equ 0F64h ;# 
   453  0000                     # 225 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   454                           SPPCON equ 0F65h ;# 
   455  0000                     # 251 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   456                           UFRM equ 0F66h ;# 
   457  0000                     # 258 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   458                           UFRML equ 0F66h ;# 
   459  0000                     # 336 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   460                           UFRMH equ 0F67h ;# 
   461  0000                     # 376 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   462                           UIR equ 0F68h ;# 
   463  0000                     # 432 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   464                           UIE equ 0F69h ;# 
   465  0000                     # 488 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   466                           UEIR equ 0F6Ah ;# 
   467  0000                     # 539 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   468                           UEIE equ 0F6Bh ;# 
   469  0000                     # 590 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   470                           USTAT equ 0F6Ch ;# 
   471  0000                     # 650 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   472                           UCON equ 0F6Dh ;# 
   473  0000                     # 701 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   474                           UADDR equ 0F6Eh ;# 
   475  0000                     # 765 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   476                           UCFG equ 0F6Fh ;# 
   477  0000                     # 844 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   478                           UEP0 equ 0F70h ;# 
   479  0000                     # 952 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   480                           UEP1 equ 0F71h ;# 
   481  0000                     # 1060 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   482                           UEP2 equ 0F72h ;# 
   483  0000                     # 1168 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   484                           UEP3 equ 0F73h ;# 
   485  0000                     # 1276 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   486                           UEP4 equ 0F74h ;# 
   487  0000                     # 1384 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   488                           UEP5 equ 0F75h ;# 
   489  0000                     # 1492 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   490                           UEP6 equ 0F76h ;# 
   491  0000                     # 1600 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   492                           UEP7 equ 0F77h ;# 
   493  0000                     # 1708 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   494                           UEP8 equ 0F78h ;# 
   495  0000                     # 1784 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   496                           UEP9 equ 0F79h ;# 
   497  0000                     # 1860 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   498                           UEP10 equ 0F7Ah ;# 
   499  0000                     # 1936 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   500                           UEP11 equ 0F7Bh ;# 
   501  0000                     # 2012 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   502                           UEP12 equ 0F7Ch ;# 
   503  0000                     # 2088 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   504                           UEP13 equ 0F7Dh ;# 
   505  0000                     # 2164 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   506                           UEP14 equ 0F7Eh ;# 
   507  0000                     # 2240 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   508                           UEP15 equ 0F7Fh ;# 
   509  0000                     # 2316 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   510                           PORTA equ 0F80h ;# 
   511  0000                     # 2455 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   512                           PORTB equ 0F81h ;# 
   513  0000                     # 2565 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   514                           PORTC equ 0F82h ;# 
   515  0000                     # 2707 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   516                           PORTD equ 0F83h ;# 
   517  0000                     # 2828 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   518                           PORTE equ 0F84h ;# 
   519  0000                     # 2975 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   520                           LATA equ 0F89h ;# 
   521  0000                     # 3075 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   522                           LATB equ 0F8Ah ;# 
   523  0000                     # 3187 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   524                           LATC equ 0F8Bh ;# 
   525  0000                     # 3265 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   526                           LATD equ 0F8Ch ;# 
   527  0000                     # 3377 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   528                           LATE equ 0F8Dh ;# 
   529  0000                     # 3429 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   530                           TRISA equ 0F92h ;# 
   531  0000                     # 3434 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   532                           DDRA equ 0F92h ;# 
   533  0000                     # 3627 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   534                           TRISB equ 0F93h ;# 
   535  0000                     # 3632 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   536                           DDRB equ 0F93h ;# 
   537  0000                     # 3849 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   538                           TRISC equ 0F94h ;# 
   539  0000                     # 3854 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   540                           DDRC equ 0F94h ;# 
   541  0000                     # 4003 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   542                           TRISD equ 0F95h ;# 
   543  0000                     # 4008 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   544                           DDRD equ 0F95h ;# 
   545  0000                     # 4225 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   546                           TRISE equ 0F96h ;# 
   547  0000                     # 4230 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   548                           DDRE equ 0F96h ;# 
   549  0000                     # 4327 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   550                           OSCTUNE equ 0F9Bh ;# 
   551  0000                     # 4386 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   552                           PIE1 equ 0F9Dh ;# 
   553  0000                     # 4470 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   554                           PIR1 equ 0F9Eh ;# 
   555  0000                     # 4554 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   556                           IPR1 equ 0F9Fh ;# 
   557  0000                     # 4638 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   558                           PIE2 equ 0FA0h ;# 
   559  0000                     # 4709 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   560                           PIR2 equ 0FA1h ;# 
   561  0000                     # 4780 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   562                           IPR2 equ 0FA2h ;# 
   563  0000                     # 4851 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   564                           EECON1 equ 0FA6h ;# 
   565  0000                     # 4917 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   566                           EECON2 equ 0FA7h ;# 
   567  0000                     # 4924 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   568                           EEDATA equ 0FA8h ;# 
   569  0000                     # 4931 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   570                           EEADR equ 0FA9h ;# 
   571  0000                     # 4938 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   572                           RCSTA equ 0FABh ;# 
   573  0000                     # 4943 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   574                           RCSTA1 equ 0FABh ;# 
   575  0000                     # 5148 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   576                           TXSTA equ 0FACh ;# 
   577  0000                     # 5153 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   578                           TXSTA1 equ 0FACh ;# 
   579  0000                     # 5404 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   580                           TXREG equ 0FADh ;# 
   581  0000                     # 5409 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   582                           TXREG1 equ 0FADh ;# 
   583  0000                     # 5416 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   584                           RCREG equ 0FAEh ;# 
   585  0000                     # 5421 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   586                           RCREG1 equ 0FAEh ;# 
   587  0000                     # 5428 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   588                           SPBRG equ 0FAFh ;# 
   589  0000                     # 5433 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   590                           SPBRG1 equ 0FAFh ;# 
   591  0000                     # 5440 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   592                           SPBRGH equ 0FB0h ;# 
   593  0000                     # 5447 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   594                           T3CON equ 0FB1h ;# 
   595  0000                     # 5568 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   596                           TMR3 equ 0FB2h ;# 
   597  0000                     # 5575 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   598                           TMR3L equ 0FB2h ;# 
   599  0000                     # 5582 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   600                           TMR3H equ 0FB3h ;# 
   601  0000                     # 5589 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   602                           CMCON equ 0FB4h ;# 
   603  0000                     # 5679 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   604                           CVRCON equ 0FB5h ;# 
   605  0000                     # 5764 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   606                           ECCP1AS equ 0FB6h ;# 
   607  0000                     # 5769 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   608                           CCP1AS equ 0FB6h ;# 
   609  0000                     # 5926 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   610                           ECCP1DEL equ 0FB7h ;# 
   611  0000                     # 5931 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   612                           CCP1DEL equ 0FB7h ;# 
   613  0000                     # 6064 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   614                           BAUDCON equ 0FB8h ;# 
   615  0000                     # 6069 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   616                           BAUDCTL equ 0FB8h ;# 
   617  0000                     # 6244 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   618                           CCP2CON equ 0FBAh ;# 
   619  0000                     # 6308 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   620                           CCPR2 equ 0FBBh ;# 
   621  0000                     # 6315 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   622                           CCPR2L equ 0FBBh ;# 
   623  0000                     # 6322 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   624                           CCPR2H equ 0FBCh ;# 
   625  0000                     # 6329 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   626                           CCP1CON equ 0FBDh ;# 
   627  0000                     # 6334 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   628                           ECCP1CON equ 0FBDh ;# 
   629  0000                     # 6491 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   630                           CCPR1 equ 0FBEh ;# 
   631  0000                     # 6498 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   632                           CCPR1L equ 0FBEh ;# 
   633  0000                     # 6505 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   634                           CCPR1H equ 0FBFh ;# 
   635  0000                     # 6512 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   636                           ADCON2 equ 0FC0h ;# 
   637  0000                     # 6583 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   638                           ADCON1 equ 0FC1h ;# 
   639  0000                     # 6668 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   640                           ADCON0 equ 0FC2h ;# 
   641  0000                     # 6787 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   642                           ADRES equ 0FC3h ;# 
   643  0000                     # 6794 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   644                           ADRESL equ 0FC3h ;# 
   645  0000                     # 6801 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   646                           ADRESH equ 0FC4h ;# 
   647  0000                     # 6808 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   648                           SSPCON2 equ 0FC5h ;# 
   649  0000                     # 6870 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   650                           SSPCON1 equ 0FC6h ;# 
   651  0000                     # 6940 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   652                           SSPSTAT equ 0FC7h ;# 
   653  0000                     # 7188 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   654                           SSPADD equ 0FC8h ;# 
   655  0000                     # 7195 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   656                           SSPBUF equ 0FC9h ;# 
   657  0000                     # 7202 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   658                           T2CON equ 0FCAh ;# 
   659  0000                     # 7300 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   660                           PR2 equ 0FCBh ;# 
   661  0000                     # 7305 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   662                           MEMCON equ 0FCBh ;# 
   663  0000                     # 7410 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   664                           TMR2 equ 0FCCh ;# 
   665  0000                     # 7417 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   666                           T1CON equ 0FCDh ;# 
   667  0000                     # 7520 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   668                           TMR1 equ 0FCEh ;# 
   669  0000                     # 7527 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   670                           TMR1L equ 0FCEh ;# 
   671  0000                     # 7534 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   672                           TMR1H equ 0FCFh ;# 
   673  0000                     # 7541 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   674                           RCON equ 0FD0h ;# 
   675  0000                     # 7690 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   676                           WDTCON equ 0FD1h ;# 
   677  0000                     # 7718 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   678                           HLVDCON equ 0FD2h ;# 
   679  0000                     # 7723 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   680                           LVDCON equ 0FD2h ;# 
   681  0000                     # 7988 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   682                           OSCCON equ 0FD3h ;# 
   683  0000                     # 8071 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   684                           T0CON equ 0FD5h ;# 
   685  0000                     # 8141 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   686                           TMR0 equ 0FD6h ;# 
   687  0000                     # 8148 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   688                           TMR0L equ 0FD6h ;# 
   689  0000                     # 8155 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   690                           TMR0H equ 0FD7h ;# 
   691  0000                     # 8162 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   692                           STATUS equ 0FD8h ;# 
   693  0000                     # 8233 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   694                           FSR2 equ 0FD9h ;# 
   695  0000                     # 8240 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   696                           FSR2L equ 0FD9h ;# 
   697  0000                     # 8247 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   698                           FSR2H equ 0FDAh ;# 
   699  0000                     # 8254 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   700                           PLUSW2 equ 0FDBh ;# 
   701  0000                     # 8261 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   702                           PREINC2 equ 0FDCh ;# 
   703  0000                     # 8268 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   704                           POSTDEC2 equ 0FDDh ;# 
   705  0000                     # 8275 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   706                           POSTINC2 equ 0FDEh ;# 
   707  0000                     # 8282 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   708                           INDF2 equ 0FDFh ;# 
   709  0000                     # 8289 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   710                           BSR equ 0FE0h ;# 
   711  0000                     # 8296 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   712                           FSR1 equ 0FE1h ;# 
   713  0000                     # 8303 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   714                           FSR1L equ 0FE1h ;# 
   715  0000                     # 8310 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   716                           FSR1H equ 0FE2h ;# 
   717  0000                     # 8317 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   718                           PLUSW1 equ 0FE3h ;# 
   719  0000                     # 8324 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   720                           PREINC1 equ 0FE4h ;# 
   721  0000                     # 8331 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   722                           POSTDEC1 equ 0FE5h ;# 
   723  0000                     # 8338 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   724                           POSTINC1 equ 0FE6h ;# 
   725  0000                     # 8345 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   726                           INDF1 equ 0FE7h ;# 
   727  0000                     # 8352 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   728                           WREG equ 0FE8h ;# 
   729  0000                     # 8359 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   730                           FSR0 equ 0FE9h ;# 
   731  0000                     # 8366 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   732                           FSR0L equ 0FE9h ;# 
   733  0000                     # 8373 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   734                           FSR0H equ 0FEAh ;# 
   735  0000                     # 8380 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   736                           PLUSW0 equ 0FEBh ;# 
   737  0000                     # 8387 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   738                           PREINC0 equ 0FECh ;# 
   739  0000                     # 8394 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   740                           POSTDEC0 equ 0FEDh ;# 
   741  0000                     # 8401 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   742                           POSTINC0 equ 0FEEh ;# 
   743  0000                     # 8408 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   744                           INDF0 equ 0FEFh ;# 
   745  0000                     # 8415 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   746                           INTCON3 equ 0FF0h ;# 
   747  0000                     # 8507 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   748                           INTCON2 equ 0FF1h ;# 
   749  0000                     # 8584 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   750                           INTCON equ 0FF2h ;# 
   751  0000                     # 8701 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   752                           PROD equ 0FF3h ;# 
   753  0000                     # 8708 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   754                           PRODL equ 0FF3h ;# 
   755  0000                     # 8715 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   756                           PRODH equ 0FF4h ;# 
   757  0000                     # 8722 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   758                           TABLAT equ 0FF5h ;# 
   759  0000                     # 8731 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   760                           TBLPTR equ 0FF6h ;# 
   761  0000                     # 8738 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   762                           TBLPTRL equ 0FF6h ;# 
   763  0000                     # 8745 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   764                           TBLPTRH equ 0FF7h ;# 
   765  0000                     # 8752 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   766                           TBLPTRU equ 0FF8h ;# 
   767  0000                     # 8761 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   768                           PCLAT equ 0FF9h ;# 
   769  0000                     # 8768 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   770                           PC equ 0FF9h ;# 
   771  0000                     # 8775 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   772                           PCL equ 0FF9h ;# 
   773  0000                     # 8782 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   774                           PCLATH equ 0FFAh ;# 
   775  0000                     # 8789 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   776                           PCLATU equ 0FFBh ;# 
   777  0000                     # 8796 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   778                           STKPTR equ 0FFCh ;# 
   779  0000                     # 8872 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   780                           TOS equ 0FFDh ;# 
   781  0000                     # 8879 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   782                           TOSL equ 0FFDh ;# 
   783  0000                     # 8886 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   784                           TOSH equ 0FFEh ;# 
   785  0000                     # 8893 "D:/Microchip/xc8/v2.00/pic/include\pic18f4550.h"
   786                           TOSU equ 0FFFh ;# 
   787  0000                     	FNCALL	_main,_CG_char
   788                           	FNCALL	_main,_GenChar
   789                           	FNCALL	_main,___lbmod
   790                           	FNCALL	_main,_game_over_seq
   791                           	FNCALL	_main,_iniLCD
   792                           	FNCALL	_main,_level_up
   793                           	FNCALL	_main,_lock_sprite_switch
   794                           	FNCALL	_main,_move_lock
   795                           	FNCALL	_main,_move_stage
   796                           	FNCALL	_main,_out_of_screen
   797                           	FNCALL	_out_of_screen,_CG_char
   798                           	FNCALL	_out_of_screen,_LCDString
   799                           	FNCALL	_out_of_screen,_LCDcommand
   800                           	FNCALL	_out_of_screen,_MoveCursor
   801                           	FNCALL	_move_stage,_MoveLCD
   802                           	FNCALL	_move_stage,_rand_key
   803                           	FNCALL	_rand_key,_CG_char
   804                           	FNCALL	_rand_key,_rand
   805                           	FNCALL	_rand,___omul
   806                           	FNCALL	_MoveLCD,_LCDcommand
   807                           	FNCALL	_move_lock,_LCDchar
   808                           	FNCALL	_move_lock,_MoveCursor
   809                           	FNCALL	_level_up,_CG_char
   810                           	FNCALL	_level_up,_LCDString
   811                           	FNCALL	_level_up,_LCDcommand
   812                           	FNCALL	_level_up,_MoveCursor
   813                           	FNCALL	_iniLCD,_LCDcommand
   814                           	FNCALL	_game_over_seq,_CG_char
   815                           	FNCALL	_game_over_seq,_LCDString
   816                           	FNCALL	_game_over_seq,_LCDcommand
   817                           	FNCALL	_game_over_seq,_MoveCursor
   818                           	FNCALL	_MoveCursor,_LCDcommand
   819                           	FNCALL	_LCDString,_LCDchar
   820                           	FNCALL	_CG_char,_LCDchar
   821                           	FNCALL	_CG_char,_LCDcommand
   822                           	FNCALL	_GenChar,_LCDchar
   823                           	FNCALL	_GenChar,_LCDcommand
   824                           	FNROOT	_main
   825                           	global	_key_line
   826                           	global	_key_pos
   827                           	global	_level
   828                           	global	_key_
   829                           	global	_line
   830                           	global	_pos
   831                           	global	_lock_R
   832                           	global	_lock_F
   833                           	global	level_up@F3529
   834                           	global	level_up@F3527
   835                           	global	_smiley
   836                           	global	_lock_broken
   837                           	global	_lock_end
   838                           	global	_key
   839                           	global	_lock_L
   840                           	global	_lock_B
   841                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   842                           global __pidataCOMRAM
   843                           __pidataCOMRAM:
   844  00136E                     	file	"main_LCD_Disp_Chars.c"
   845                           	line	99
   846                           
   847                           ;initializer for _key_line
   848                           	db	low(0FFh)
   849  00136E  FF                 	db	low(0FFh)
   850  00136F  FF                 	db	low(0FFh)
   851  001370  FF                 	db	low(0FFh)
   852  001371  FF                 	db	low(0FFh)
   853  001372  FF                 	db	low(0FFh)
   854  001373  FF                 	db	low(0FFh)
   855  001374  FF                 	db	low(0FFh)
   856  001375  FF                 	line	98
   857                           
   858                           ;initializer for _key_pos
   859                           	db	low(0FFh)
   860  001376  FF                 	db	low(0FFh)
   861  001377  FF                 	db	low(0FFh)
   862  001378  FF                 	db	low(0FFh)
   863  001379  FF                 	db	low(0FFh)
   864  00137A  FF                 	db	low(0FFh)
   865  00137B  FF                 	db	low(0FFh)
   866  00137C  FF                 	db	low(0FFh)
   867  00137D  FF                 	line	97
   868                           
   869                           ;initializer for _level
   870                           	db	low(04h)
   871  00137E  04                 
   872                           ;initializer for _key_
   873                           	db	low(0Fh)
   874  00137F  0F                 	line	96
   875                           
   876                           ;initializer for _line
   877                           	db	low(01h)
   878  001380  01                 
   879                           ;initializer for _pos
   880                           	db	low(01h)
   881  001381  01                 	line	32
   882                           
   883                           ;initializer for _lock_R
   884                           	db	low(0Eh)
   885  001382  0E                 	db	low(0Ah)
   886  001383  0A                 	db	low(0Ah)
   887  001384  0A                 	db	low(0Eh)
   888  001385  0E                 	db	low(0Ch)
   889  001386  0C                 	db	low(0Ch)
   890  001387  0C                 	db	low(0Eh)
   891  001388  0E                 	db	low(0)
   892  001389  00                 	line	23
   893                           
   894                           ;initializer for _lock_F
   895                           	db	low(0Eh)
   896  00138A  0E                 	db	low(011h)
   897  00138B  11                 	db	low(011h)
   898  00138C  11                 	db	low(01Fh)
   899  00138D  1F                 	db	low(01Bh)
   900  00138E  1B                 	db	low(01Bh)
   901  00138F  1B                 	db	low(01Fh)
   902  001390  1F                 	db	low(0)
   903  001391  00                 psect	idataBANK0,class=CODE,space=0,delta=1,noexec
   904                           global __pidataBANK0
   905                           __pidataBANK0:
   906  001236                     	line	219
   907                           
   908                           ;initializer for level_up@F3529
   909                           	dw	(-1)&0ffffh
   910  001236  FFFF               	dw	(-1)&0ffffh
   911  001238  FFFF               	dw	(-1)&0ffffh
   912  00123A  FFFF               	dw	(-1)&0ffffh
   913  00123C  FFFF               	dw	(-1)&0ffffh
   914  00123E  FFFF               	dw	(-1)&0ffffh
   915  001240  FFFF               	dw	(-1)&0ffffh
   916  001242  FFFF               	dw	(-1)&0ffffh
   917  001244  FFFF               	line	218
   918                           
   919                           ;initializer for level_up@F3527
   920                           	dw	(-1)&0ffffh
   921  001246  FFFF               	dw	(-1)&0ffffh
   922  001248  FFFF               	dw	(-1)&0ffffh
   923  00124A  FFFF               	dw	(-1)&0ffffh
   924  00124C  FFFF               	dw	(-1)&0ffffh
   925  00124E  FFFF               	dw	(-1)&0ffffh
   926  001250  FFFF               	dw	(-1)&0ffffh
   927  001252  FFFF               	dw	(-1)&0ffffh
   928  001254  FFFF               	line	86
   929                           
   930                           ;initializer for _smiley
   931                           	db	low(0)
   932  001256  00                 	db	low(0)
   933  001257  00                 	db	low(0Ah)
   934  001258  0A                 	db	low(0)
   935  001259  00                 	db	low(011h)
   936  00125A  11                 	db	low(0Eh)
   937  00125B  0E                 	db	low(0)
   938  00125C  00                 	db	low(0)
   939  00125D  00                 	line	77
   940                           
   941                           ;initializer for _lock_broken
   942                           	db	low(0Eh)
   943  00125E  0E                 	db	low(01h)
   944  00125F  01                 	db	low(011h)
   945  001260  11                 	db	low(01Dh)
   946  001261  1D                 	db	low(01Bh)
   947  001262  1B                 	db	low(01Ah)
   948  001263  1A                 	db	low(0Fh)
   949  001264  0F                 	db	low(0)
   950  001265  00                 	line	68
   951                           
   952                           ;initializer for _lock_end
   953                           	db	low(0Eh)
   954  001266  0E                 	db	low(010h)
   955  001267  10                 	db	low(010h)
   956  001268  10                 	db	low(01Fh)
   957  001269  1F                 	db	low(01Bh)
   958  00126A  1B                 	db	low(01Bh)
   959  00126B  1B                 	db	low(01Fh)
   960  00126C  1F                 	db	low(0)
   961  00126D  00                 	line	59
   962                           
   963                           ;initializer for _key
   964                           	db	low(06h)
   965  00126E  06                 	db	low(04h)
   966  00126F  04                 	db	low(06h)
   967  001270  06                 	db	low(04h)
   968  001271  04                 	db	low(0Eh)
   969  001272  0E                 	db	low(0Ah)
   970  001273  0A                 	db	low(0Eh)
   971  001274  0E                 	db	low(0)
   972  001275  00                 	line	50
   973                           
   974                           ;initializer for _lock_L
   975                           	db	low(0Eh)
   976  001276  0E                 	db	low(0Ah)
   977  001277  0A                 	db	low(0Ah)
   978  001278  0A                 	db	low(0Eh)
   979  001279  0E                 	db	low(06h)
   980  00127A  06                 	db	low(06h)
   981  00127B  06                 	db	low(0Eh)
   982  00127C  0E                 	db	low(0)
   983  00127D  00                 	line	41
   984                           
   985                           ;initializer for _lock_B
   986                           	db	low(0Eh)
   987  00127E  0E                 	db	low(011h)
   988  00127F  11                 	db	low(011h)
   989  001280  11                 	db	low(01Fh)
   990  001281  1F                 	db	low(01Fh)
   991  001282  1F                 	db	low(01Fh)
   992  001283  1F                 	db	low(01Fh)
   993  001284  1F                 	db	low(0)
   994  001285  00                 	global	_key_pointer
   995                           	global	_shift
   996                           	global	_icon
   997                           	global	_seed
   998                           	global	_PORTD
   999                           _PORTD	set	0xF83
  1000  0000                     	global	_PORTEbits
  1001                           _PORTEbits	set	0xF84
  1002  0000                     	global	_PORTAbits
  1003                           _PORTAbits	set	0xF80
  1004  0000                     	global	_TRISE
  1005                           _TRISE	set	0xF96
  1006  0000                     	global	_TRISD
  1007                           _TRISD	set	0xF95
  1008  0000                     	global	_TRISA
  1009                           _TRISA	set	0xF92
  1010  0000                     	global	_ADCON1bits
  1011                           _ADCON1bits	set	0xFC1
  1012  0000                     	global	_OSCCON
  1013                           _OSCCON	set	0xFD3
  1014  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
  1015                           global __psmallconst
  1016                           __psmallconst:
  1017  000800                     	db	0
  1018  000800  00                 	
  1019                           STR_2:
  1020  000801                     	db	71	;'G'
  1021  000801  47                 	db	65	;'A'
  1022  000802  41                 	db	77	;'M'
  1023  000803  4D                 	db	69	;'E'
  1024  000804  45                 	db	32
  1025  000805  20                 	db	79	;'O'
  1026  000806  4F                 	db	86	;'V'
  1027  000807  56                 	db	69	;'E'
  1028  000808  45                 	db	82	;'R'
  1029  000809  52                 	db	0
  1030  00080A  00                 	
  1031                           STR_1:
  1032  00080B                     	db	76	;'L'
  1033  00080B  4C                 	db	101	;'e'
  1034  00080C  65                 	db	118	;'v'
  1035  00080D  76                 	db	101	;'e'
  1036  00080E  65                 	db	108	;'l'
  1037  00080F  6C                 	db	32
  1038  000810  20                 	db	85	;'U'
  1039  000811  55                 	db	112	;'p'
  1040  000812  70                 	db	0
  1041  000813  00                 STR_3	equ	STR_2+0
  1042  0000                     ; #config settings
  1043                           global __CFG_PLLDIV$1
  1044                           __CFG_PLLDIV$1 equ 0x0
  1045  0000                     global __CFG_CPUDIV$OSC1_PLL2
  1046                           __CFG_CPUDIV$OSC1_PLL2 equ 0x0
  1047  0000                     global __CFG_USBDIV$1
  1048                           __CFG_USBDIV$1 equ 0x0
  1049  0000                     global __CFG_FOSC$INTOSC_EC
  1050                           __CFG_FOSC$INTOSC_EC equ 0x0
  1051  0000                     global __CFG_FCMEN$OFF
  1052                           __CFG_FCMEN$OFF equ 0x0
  1053  0000                     global __CFG_IESO$OFF
  1054                           __CFG_IESO$OFF equ 0x0
  1055  0000                     global __CFG_PWRT$OFF
  1056                           __CFG_PWRT$OFF equ 0x0
  1057  0000                     global __CFG_BOR$ON
  1058                           __CFG_BOR$ON equ 0x0
  1059  0000                     global __CFG_BORV$3
  1060                           __CFG_BORV$3 equ 0x0
  1061  0000                     global __CFG_VREGEN$OFF
  1062                           __CFG_VREGEN$OFF equ 0x0
  1063  0000                     global __CFG_WDT$OFF
  1064                           __CFG_WDT$OFF equ 0x0
  1065  0000                     global __CFG_WDTPS$32768
  1066                           __CFG_WDTPS$32768 equ 0x0
  1067  0000                     global __CFG_CCP2MX$ON
  1068                           __CFG_CCP2MX$ON equ 0x0
  1069  0000                     global __CFG_PBADEN$OFF
  1070                           __CFG_PBADEN$OFF equ 0x0
  1071  0000                     global __CFG_LPT1OSC$OFF
  1072                           __CFG_LPT1OSC$OFF equ 0x0
  1073  0000                     global __CFG_MCLRE$ON
  1074                           __CFG_MCLRE$ON equ 0x0
  1075  0000                     global __CFG_STVREN$ON
  1076                           __CFG_STVREN$ON equ 0x0
  1077  0000                     global __CFG_LVP$ON
  1078                           __CFG_LVP$ON equ 0x0
  1079  0000                     global __CFG_ICPRT$OFF
  1080                           __CFG_ICPRT$OFF equ 0x0
  1081  0000                     global __CFG_XINST$OFF
  1082                           __CFG_XINST$OFF equ 0x0
  1083  0000                     global __CFG_CP0$OFF
  1084                           __CFG_CP0$OFF equ 0x0
  1085  0000                     global __CFG_CP1$OFF
  1086                           __CFG_CP1$OFF equ 0x0
  1087  0000                     global __CFG_CP2$OFF
  1088                           __CFG_CP2$OFF equ 0x0
  1089  0000                     global __CFG_CP3$OFF
  1090                           __CFG_CP3$OFF equ 0x0
  1091  0000                     global __CFG_CPB$OFF
  1092                           __CFG_CPB$OFF equ 0x0
  1093  0000                     global __CFG_CPD$OFF
  1094                           __CFG_CPD$OFF equ 0x0
  1095  0000                     global __CFG_WRT0$OFF
  1096                           __CFG_WRT0$OFF equ 0x0
  1097  0000                     global __CFG_WRT1$OFF
  1098                           __CFG_WRT1$OFF equ 0x0
  1099  0000                     global __CFG_WRT2$OFF
  1100                           __CFG_WRT2$OFF equ 0x0
  1101  0000                     global __CFG_WRT3$OFF
  1102                           __CFG_WRT3$OFF equ 0x0
  1103  0000                     global __CFG_WRTC$OFF
  1104                           __CFG_WRTC$OFF equ 0x0
  1105  0000                     global __CFG_WRTB$OFF
  1106                           __CFG_WRTB$OFF equ 0x0
  1107  0000                     global __CFG_WRTD$OFF
  1108                           __CFG_WRTD$OFF equ 0x0
  1109  0000                     global __CFG_EBTR0$OFF
  1110                           __CFG_EBTR0$OFF equ 0x0
  1111  0000                     global __CFG_EBTR1$OFF
  1112                           __CFG_EBTR1$OFF equ 0x0
  1113  0000                     global __CFG_EBTR2$OFF
  1114                           __CFG_EBTR2$OFF equ 0x0
  1115  0000                     global __CFG_EBTR3$OFF
  1116                           __CFG_EBTR3$OFF equ 0x0
  1117  0000                     global __CFG_EBTRB$OFF
  1118                           __CFG_EBTRB$OFF equ 0x0
  1119  0000                     	file	"C:\Users\ebo-9\AppData\Local\Temp\sufc."
  1120                           	line	#
  1121                           psect	cinit,class=CODE,delta=1,reloc=2
  1122                           global __pcinit
  1123                           __pcinit:
  1124  0011E0                     global start_initialization
  1125                           start_initialization:
  1126  0011E0                     
  1127                           global __initialization
  1128                           __initialization:
  1129  0011E0                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
  1130                           global __pbssCOMRAM
  1131                           __pbssCOMRAM:
  1132  000055                     	global	_key_pointer
  1133                           _key_pointer:
  1134  000055                            ds      1
  1135  000055                     	global	_shift
  1136                           _shift:
  1137  000056                            ds      1
  1138  000056                     	global	_icon
  1139                           _icon:
  1140  000057                            ds      1
  1141  000057                     _seed:
  1142  000058                            ds      8
  1143  000058                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
  1144                           global __pdataCOMRAM
  1145                           __pdataCOMRAM:
  1146  000031                     	file	"main_LCD_Disp_Chars.c"
  1147                           	line	99
  1148                           	global	_key_line
  1149                           _key_line:
  1150  000031                            ds      8
  1151  000031                     psect	dataCOMRAM
  1152                           	file	"main_LCD_Disp_Chars.c"
  1153                           	line	98
  1154                           	global	_key_pos
  1155                           _key_pos:
  1156  000039                            ds      8
  1157  000039                     psect	dataCOMRAM
  1158                           	file	"main_LCD_Disp_Chars.c"
  1159                           	line	97
  1160                           	global	_level
  1161                           _level:
  1162  000041                            ds      1
  1163  000041                     psect	dataCOMRAM
  1164                           	file	"main_LCD_Disp_Chars.c"
  1165                           	line	97
  1166                           	global	_key_
  1167                           _key_:
  1168  000042                            ds      1
  1169  000042                     psect	dataCOMRAM
  1170                           	file	"main_LCD_Disp_Chars.c"
  1171                           	line	96
  1172                           	global	_line
  1173                           _line:
  1174  000043                            ds      1
  1175  000043                     psect	dataCOMRAM
  1176                           	file	"main_LCD_Disp_Chars.c"
  1177                           	line	96
  1178                           	global	_pos
  1179                           _pos:
  1180  000044                            ds      1
  1181  000044                     psect	dataCOMRAM
  1182                           	file	"main_LCD_Disp_Chars.c"
  1183                           	line	32
  1184                           	global	_lock_R
  1185                           _lock_R:
  1186  000045                            ds      8
  1187  000045                     psect	dataCOMRAM
  1188                           	file	"main_LCD_Disp_Chars.c"
  1189                           	line	23
  1190                           	global	_lock_F
  1191                           _lock_F:
  1192  00004D                            ds      8
  1193  00004D                     psect	dataBANK0,class=BANK0,space=1,noexec,lowdata
  1194                           global __pdataBANK0
  1195                           __pdataBANK0:
  1196  000060                     	file	"main_LCD_Disp_Chars.c"
  1197                           	line	219
  1198                           level_up@F3529:
  1199  000060                            ds      16
  1200  000060                     psect	dataBANK0
  1201                           	file	"main_LCD_Disp_Chars.c"
  1202                           	line	218
  1203                           level_up@F3527:
  1204  000070                            ds      16
  1205  000070                     psect	dataBANK0
  1206                           	file	"main_LCD_Disp_Chars.c"
  1207                           	line	86
  1208                           	global	_smiley
  1209                           _smiley:
  1210  000080                            ds      8
  1211  000080                     psect	dataBANK0
  1212                           	file	"main_LCD_Disp_Chars.c"
  1213                           	line	77
  1214                           	global	_lock_broken
  1215                           _lock_broken:
  1216  000088                            ds      8
  1217  000088                     psect	dataBANK0
  1218                           	file	"main_LCD_Disp_Chars.c"
  1219                           	line	68
  1220                           	global	_lock_end
  1221                           _lock_end:
  1222  000090                            ds      8
  1223  000090                     psect	dataBANK0
  1224                           	file	"main_LCD_Disp_Chars.c"
  1225                           	line	59
  1226                           	global	_key
  1227                           _key:
  1228  000098                            ds      8
  1229  000098                     psect	dataBANK0
  1230                           	file	"main_LCD_Disp_Chars.c"
  1231                           	line	50
  1232                           	global	_lock_L
  1233                           _lock_L:
  1234  0000A0                            ds      8
  1235  0000A0                     psect	dataBANK0
  1236                           	file	"main_LCD_Disp_Chars.c"
  1237                           	line	41
  1238                           	global	_lock_B
  1239                           _lock_B:
  1240  0000A8                            ds      8
  1241  0000A8                     	file	"C:\Users\ebo-9\AppData\Local\Temp\sufc."
  1242                           	line	#
  1243                           psect	cinit
  1244                           ; Initialize objects allocated to BANK0 (80 bytes)
  1245                           	global __pidataBANK0
  1246                           	; load TBLPTR registers with __pidataBANK0
  1247                           	movlw	low (__pidataBANK0)
  1248  0011E0  0E36               	movwf	tblptrl
  1249  0011E2  6EF6               	movlw	high(__pidataBANK0)
  1250  0011E4  0E12               	movwf	tblptrh
  1251  0011E6  6EF7               	movlw	low highword(__pidataBANK0)
  1252  0011E8  0E00               	movwf	tblptru
  1253  0011EA  6EF8               	lfsr	0,__pdataBANK0
  1254  0011EC  EE00  F060         	lfsr	1,80
  1255  0011F0  EE10 F050          	copy_data0:
  1256  0011F4                     	tblrd	*+
  1257  0011F4  0009               	movff	tablat, postinc0
  1258  0011F6  CFF5 FFEE          	movf	postdec1,w
  1259  0011FA  50E5               	movf	fsr1l,w
  1260  0011FC  50E1               	bnz	copy_data0
  1261  0011FE  E1FA               ; Initialize objects allocated to COMRAM (36 bytes)
  1262                           	global __pidataCOMRAM
  1263                           	; load TBLPTR registers with __pidataCOMRAM
  1264                           	movlw	low (__pidataCOMRAM)
  1265  001200  0E6E               	movwf	tblptrl
  1266  001202  6EF6               	movlw	high(__pidataCOMRAM)
  1267  001204  0E13               	movwf	tblptrh
  1268  001206  6EF7               	movlw	low highword(__pidataCOMRAM)
  1269  001208  0E00               	movwf	tblptru
  1270  00120A  6EF8               	lfsr	0,__pdataCOMRAM
  1271  00120C  EE00  F031         	lfsr	1,36
  1272  001210  EE10 F024          	copy_data1:
  1273  001214                     	tblrd	*+
  1274  001214  0009               	movff	tablat, postinc0
  1275  001216  CFF5 FFEE          	movf	postdec1,w
  1276  00121A  50E5               	movf	fsr1l,w
  1277  00121C  50E1               	bnz	copy_data1
  1278  00121E  E1FA               	line	#
  1279                           ; Clear objects allocated to COMRAM (11 bytes)
  1280                           	global __pbssCOMRAM
  1281                           lfsr	0,__pbssCOMRAM
  1282  001220  EE00  F055         movlw	11
  1283  001224  0E0B               clear_0:
  1284  001226                     clrf	postinc0,c
  1285  001226  6AEE               decf	wreg
  1286  001228  06E8               bnz	clear_0
  1287  00122A  E1FD               psect cinit,class=CODE,delta=1
  1288                           global end_of_initialization,__end_of__initialization
  1289                           
  1290                           ;End of C runtime variable initialization code
  1291                           
  1292                           end_of_initialization:
  1293  00122C                     __end_of__initialization:
  1294  00122C                     	GLOBAL	__Lmediumconst
  1295                           	movlw	low highword(__Lmediumconst)
  1296  00122C  0E00               	movwf	tblptru
  1297  00122E  6EF8               movlb 0
  1298  001230  0100               goto _main	;jump to C main() function
  1299  001232  EF0B  F004         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  1300                           global __pcstackCOMRAM
  1301                           __pcstackCOMRAM:
  1302  000001                     ?_iniLCD:	; 1 bytes @ 0x0
  1303  000001                     ?_move_lock:	; 1 bytes @ 0x0
  1304  000001                     ?_lock_sprite_switch:	; 1 bytes @ 0x0
  1305  000001                     ??_lock_sprite_switch:	; 1 bytes @ 0x0
  1306  000001                     ?_game_over_seq:	; 1 bytes @ 0x0
  1307  000001                     ?_out_of_screen:	; 1 bytes @ 0x0
  1308  000001                     ?_move_stage:	; 1 bytes @ 0x0
  1309  000001                     ?_level_up:	; 1 bytes @ 0x0
  1310  000001                     ?_LCDchar:	; 1 bytes @ 0x0
  1311  000001                     ??_LCDchar:	; 1 bytes @ 0x0
  1312  000001                     ?_LCDcommand:	; 1 bytes @ 0x0
  1313  000001                     ??_LCDcommand:	; 1 bytes @ 0x0
  1314  000001                     ?_main:	; 1 bytes @ 0x0
  1315  000001                     ?___lbmod:	; 1 bytes @ 0x0
  1316  000001                     	global	?___omul
  1317                           ?___omul:	; 8 bytes @ 0x0
  1318  000001                     	global	LCDchar@a
  1319                           LCDchar@a:	; 1 bytes @ 0x0
  1320  000001                     	global	___lbmod@divisor
  1321                           ___lbmod@divisor:	; 1 bytes @ 0x0
  1322  000001                     	global	___omul@multiplier
  1323                           ___omul@multiplier:	; 8 bytes @ 0x0
  1324  000001                     	ds   1
  1325  000001                     ?_LCDString:	; 1 bytes @ 0x1
  1326  000002                     ??___lbmod:	; 1 bytes @ 0x1
  1327  000002                     	global	LCDcommand@a
  1328                           LCDcommand@a:	; 1 bytes @ 0x1
  1329  000002                     	global	___lbmod@dividend
  1330                           ___lbmod@dividend:	; 1 bytes @ 0x1
  1331  000002                     	global	LCDString@msg
  1332                           LCDString@msg:	; 2 bytes @ 0x1
  1333  000002                     	ds   1
  1334  000002                     ??_iniLCD:	; 1 bytes @ 0x2
  1335  000003                     ?_GenChar:	; 1 bytes @ 0x2
  1336  000003                     ?_CG_char:	; 1 bytes @ 0x2
  1337  000003                     ?_MoveCursor:	; 1 bytes @ 0x2
  1338  000003                     ?_MoveLCD:	; 1 bytes @ 0x2
  1339  000003                     	global	CG_char@line
  1340                           CG_char@line:	; 1 bytes @ 0x2
  1341  000003                     	global	MoveCursor@y
  1342                           MoveCursor@y:	; 1 bytes @ 0x2
  1343  000003                     	global	MoveLCD@inc
  1344                           MoveLCD@inc:	; 1 bytes @ 0x2
  1345  000003                     	global	___lbmod@counter
  1346                           ___lbmod@counter:	; 1 bytes @ 0x2
  1347  000003                     	global	GenChar@msg
  1348                           GenChar@msg:	; 2 bytes @ 0x2
  1349  000003                     	ds   1
  1350  000003                     ??_MoveCursor:	; 1 bytes @ 0x3
  1351  000004                     ??_MoveLCD:	; 1 bytes @ 0x3
  1352  000004                     ??_LCDString:	; 1 bytes @ 0x3
  1353  000004                     	global	CG_char@row
  1354                           CG_char@row:	; 1 bytes @ 0x3
  1355  000004                     	global	___lbmod@rem
  1356                           ___lbmod@rem:	; 1 bytes @ 0x3
  1357  000004                     	global	MoveCursor@cmd
  1358                           MoveCursor@cmd:	; 2 bytes @ 0x3
  1359  000004                     	ds   1
  1360  000004                     ??_GenChar:	; 1 bytes @ 0x4
  1361  000005                     ??_CG_char:	; 1 bytes @ 0x4
  1362  000005                     	global	CG_char@a
  1363                           CG_char@a:	; 1 bytes @ 0x4
  1364  000005                     	global	GenChar@loc
  1365                           GenChar@loc:	; 1 bytes @ 0x4
  1366  000005                     	ds   1
  1367  000005                     	global	MoveCursor@x
  1368                           MoveCursor@x:	; 1 bytes @ 0x5
  1369  000006                     	global	GenChar@i
  1370                           GenChar@i:	; 1 bytes @ 0x5
  1371  000006                     	global	CG_char@cmd
  1372                           CG_char@cmd:	; 2 bytes @ 0x5
  1373  000006                     	ds   1
  1374  000006                     ??_move_lock:	; 1 bytes @ 0x6
  1375  000007                     	global	MoveLCD@dir
  1376                           MoveLCD@dir:	; 1 bytes @ 0x6
  1377  000007                     	ds   1
  1378  000007                     ??_game_over_seq:	; 1 bytes @ 0x7
  1379  000008                     ??_out_of_screen:	; 1 bytes @ 0x7
  1380  000008                     ??_level_up:	; 1 bytes @ 0x7
  1381  000008                     	global	MoveLCD@i
  1382                           MoveLCD@i:	; 2 bytes @ 0x7
  1383  000008                     	ds   1
  1384  000008                     	global	___omul@multiplicand
  1385                           ___omul@multiplicand:	; 8 bytes @ 0x8
  1386  000009                     	ds   1
  1387  000009                     	global	MoveLCD@i_351
  1388                           MoveLCD@i_351:	; 2 bytes @ 0x9
  1389  00000A                     	global	level_up@key_pos
  1390                           level_up@key_pos:	; 16 bytes @ 0x9
  1391  00000A                     	ds   7
  1392  00000A                     ??___omul:	; 1 bytes @ 0x10
  1393  000011                     	global	___omul@product
  1394                           ___omul@product:	; 8 bytes @ 0x10
  1395  000011                     	ds   8
  1396  000011                     	global	?_rand
  1397                           ?_rand:	; 2 bytes @ 0x18
  1398  000019                     	ds   1
  1399  000019                     	global	level_up@key_line
  1400                           level_up@key_line:	; 16 bytes @ 0x19
  1401  00001A                     	ds   1
  1402  00001A                     ??_rand:	; 1 bytes @ 0x1A
  1403  00001B                     	ds   8
  1404  00001B                     	global	?_rand_key
  1405                           ?_rand_key:	; 2 bytes @ 0x22
  1406  000023                     	ds   2
  1407  000023                     ??_rand_key:	; 1 bytes @ 0x24
  1408  000025                     	global	rand_key@k_pos
  1409                           rand_key@k_pos:	; 1 bytes @ 0x24
  1410  000025                     	ds   1
  1411  000025                     	global	rand_key@ene_line
  1412                           rand_key@ene_line:	; 2 bytes @ 0x25
  1413  000026                     	ds   2
  1414  000026                     ??_move_stage:	; 1 bytes @ 0x27
  1415  000028                     	ds   2
  1416  000028                     ??_main:	; 1 bytes @ 0x29
  1417  00002A                     	ds   5
  1418  00002A                     	global	main@i
  1419                           main@i:	; 2 bytes @ 0x2E
  1420  00002F                     	ds   2
  1421  00002F                     ;!
  1422                           ;!Data Sizes:
  1423                           ;!    Strings     19
  1424                           ;!    Constant    0
  1425                           ;!    Data        116
  1426                           ;!    BSS         11
  1427                           ;!    Persistent  0
  1428                           ;!    Stack       0
  1429                           ;!
  1430                           ;!Auto Spaces:
  1431                           ;!    Space          Size  Autos    Used
  1432                           ;!    COMRAM           95     48      95
  1433                           ;!    BANK0           160      0      80
  1434                           ;!    BANK1           256      0       0
  1435                           ;!    BANK2           256      0       0
  1436                           ;!    BANK3           256      0       0
  1437                           ;!    BANK4           256      0       0
  1438                           ;!    BANK5           256      0       0
  1439                           ;!    BANK6           256      0       0
  1440                           ;!    BANK7           256      0       0
  1441                           
  1442                           ;!
  1443                           ;!Pointer List with Targets:
  1444                           ;!
  1445                           ;!    LCDString@msg	PTR unsigned char  size(2) Largest target is 10
  1446                           ;!		 -> STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[9]), 
  1447                           ;!
  1448                           ;!    GenChar@msg	PTR unsigned char  size(2) Largest target is 8
  1449                           ;!		 -> smiley(BANK0[8]), lock_broken(BANK0[8]), key(BANK0[8]), lock_end(BANK0[8]), 
  1450                           ;!		 -> lock_L(BANK0[8]), lock_B(BANK0[8]), lock_R(COMRAM[8]), lock_F(COMRAM[8]), 
  1451                           ;!
  1452                           
  1453                           
  1454                           ;!
  1455                           ;!Critical Paths under _main in COMRAM
  1456                           ;!
  1457                           ;!    _main->_level_up
  1458                           ;!    _out_of_screen->_CG_char
  1459                           ;!    _move_stage->_rand_key
  1460                           ;!    _rand_key->_rand
  1461                           ;!    _rand->___omul
  1462                           ;!    _MoveLCD->_LCDcommand
  1463                           ;!    _move_lock->_MoveCursor
  1464                           ;!    _level_up->_CG_char
  1465                           ;!    _iniLCD->_LCDcommand
  1466                           ;!    _game_over_seq->_CG_char
  1467                           ;!    _MoveCursor->_LCDcommand
  1468                           ;!    _LCDString->_LCDchar
  1469                           ;!    _CG_char->_LCDcommand
  1470                           ;!    _GenChar->_LCDcommand
  1471                           ;!
  1472                           ;!Critical Paths under _main in BANK0
  1473                           ;!
  1474                           ;!    None.
  1475                           ;!
  1476                           ;!Critical Paths under _main in BANK1
  1477                           ;!
  1478                           ;!    None.
  1479                           ;!
  1480                           ;!Critical Paths under _main in BANK2
  1481                           ;!
  1482                           ;!    None.
  1483                           ;!
  1484                           ;!Critical Paths under _main in BANK3
  1485                           ;!
  1486                           ;!    None.
  1487                           ;!
  1488                           ;!Critical Paths under _main in BANK4
  1489                           ;!
  1490                           ;!    None.
  1491                           ;!
  1492                           ;!Critical Paths under _main in BANK5
  1493                           ;!
  1494                           ;!    None.
  1495                           ;!
  1496                           ;!Critical Paths under _main in BANK6
  1497                           ;!
  1498                           ;!    None.
  1499                           ;!
  1500                           ;!Critical Paths under _main in BANK7
  1501                           ;!
  1502                           ;!    None.
  1503                           
  1504 ;;
  1505 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1506 ;;
  1507                           
  1508                           ;!
  1509                           ;!Call Graph Tables:
  1510                           ;!
  1511                           ;! ---------------------------------------------------------------------------------
  1512                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1513                           ;! ---------------------------------------------------------------------------------
  1514                           ;! (0) _main                                                 7     7      0   13565
  1515                           ;!                                             41 COMRAM     7     7      0
  1516                           ;!                            _CG_char
  1517                           ;!                            _GenChar
  1518                           ;!                            ___lbmod
  1519                           ;!                      _game_over_seq
  1520                           ;!                             _iniLCD
  1521                           ;!                           _level_up
  1522                           ;!                 _lock_sprite_switch
  1523                           ;!                          _move_lock
  1524                           ;!                         _move_stage
  1525                           ;!                      _out_of_screen
  1526                           ;! ---------------------------------------------------------------------------------
  1527                           ;! (1) _out_of_screen                                        2     2      0    2621
  1528                           ;!                                              7 COMRAM     2     2      0
  1529                           ;!                            _CG_char
  1530                           ;!                          _LCDString
  1531                           ;!                         _LCDcommand
  1532                           ;!                         _MoveCursor
  1533                           ;! ---------------------------------------------------------------------------------
  1534                           ;! (1) _move_stage                                           0     0      0    2241
  1535                           ;!                            _MoveLCD
  1536                           ;!                           _rand_key
  1537                           ;! ---------------------------------------------------------------------------------
  1538                           ;! (2) _rand_key                                             5     3      2    2029
  1539                           ;!                                             34 COMRAM     5     3      2
  1540                           ;!                            _CG_char
  1541                           ;!                               _rand
  1542                           ;! ---------------------------------------------------------------------------------
  1543                           ;! (3) _rand                                                10     8      2     370
  1544                           ;!                                             24 COMRAM    10     8      2
  1545                           ;!                             ___omul
  1546                           ;! ---------------------------------------------------------------------------------
  1547                           ;! (4) ___omul                                              24     8     16     370
  1548                           ;!                                              0 COMRAM    24     8     16
  1549                           ;! ---------------------------------------------------------------------------------
  1550                           ;! (2) _MoveLCD                                              9     8      1     212
  1551                           ;!                                              2 COMRAM     9     8      1
  1552                           ;!                         _LCDcommand
  1553                           ;! ---------------------------------------------------------------------------------
  1554                           ;! (1) _move_lock                                            7     7      0     734
  1555                           ;!                                              6 COMRAM     7     7      0
  1556                           ;!                            _LCDchar
  1557                           ;!                         _MoveCursor
  1558                           ;! ---------------------------------------------------------------------------------
  1559                           ;! (1) _lock_sprite_switch                                   2     2      0       0
  1560                           ;!                                              0 COMRAM     2     2      0
  1561                           ;! ---------------------------------------------------------------------------------
  1562                           ;! (1) _level_up                                            34    34      0    2623
  1563                           ;!                                              7 COMRAM    34    34      0
  1564                           ;!                            _CG_char
  1565                           ;!                          _LCDString
  1566                           ;!                         _LCDcommand
  1567                           ;!                         _MoveCursor
  1568                           ;! ---------------------------------------------------------------------------------
  1569                           ;! (1) _iniLCD                                               1     1      0      22
  1570                           ;!                                              2 COMRAM     1     1      0
  1571                           ;!                         _LCDcommand
  1572                           ;! ---------------------------------------------------------------------------------
  1573                           ;! (1) _game_over_seq                                        2     2      0    2621
  1574                           ;!                                              7 COMRAM     2     2      0
  1575                           ;!                            _CG_char
  1576                           ;!                          _LCDString
  1577                           ;!                         _LCDcommand
  1578                           ;!                         _MoveCursor
  1579                           ;! ---------------------------------------------------------------------------------
  1580                           ;! (2) _MoveCursor                                           4     3      1     712
  1581                           ;!                                              2 COMRAM     4     3      1
  1582                           ;!                         _LCDcommand
  1583                           ;! ---------------------------------------------------------------------------------
  1584                           ;! (2) _LCDString                                            2     0      2     295
  1585                           ;!                                              1 COMRAM     2     0      2
  1586                           ;!                            _LCDchar
  1587                           ;! ---------------------------------------------------------------------------------
  1588                           ;! (2) _CG_char                                              5     3      2    1592
  1589                           ;!                                              2 COMRAM     5     3      2
  1590                           ;!                            _LCDchar
  1591                           ;!                         _LCDcommand
  1592                           ;! ---------------------------------------------------------------------------------
  1593                           ;! (1) ___lbmod                                              4     3      1     235
  1594                           ;!                                              0 COMRAM     4     3      1
  1595                           ;! ---------------------------------------------------------------------------------
  1596                           ;! (1) _GenChar                                              4     2      2     786
  1597                           ;!                                              2 COMRAM     4     2      2
  1598                           ;!                            _LCDchar
  1599                           ;!                         _LCDcommand
  1600                           ;! ---------------------------------------------------------------------------------
  1601                           ;! (3) _LCDcommand                                           2     2      0      22
  1602                           ;!                                              0 COMRAM     2     2      0
  1603                           ;! ---------------------------------------------------------------------------------
  1604                           ;! (3) _LCDchar                                              1     1      0      22
  1605                           ;!                                              0 COMRAM     1     1      0
  1606                           ;! ---------------------------------------------------------------------------------
  1607                           ;! Estimated maximum stack depth 4
  1608                           ;! ---------------------------------------------------------------------------------
  1609                           ;!
  1610                           ;! Call Graph Graphs:
  1611                           ;!
  1612                           ;! _main (ROOT)
  1613                           ;!   _CG_char
  1614                           ;!     _LCDchar
  1615                           ;!     _LCDcommand
  1616                           ;!   _GenChar
  1617                           ;!     _LCDchar
  1618                           ;!     _LCDcommand
  1619                           ;!   ___lbmod
  1620                           ;!   _game_over_seq
  1621                           ;!     _CG_char
  1622                           ;!       _LCDchar
  1623                           ;!       _LCDcommand
  1624                           ;!     _LCDString
  1625                           ;!       _LCDchar
  1626                           ;!     _LCDcommand
  1627                           ;!     _MoveCursor
  1628                           ;!       _LCDcommand
  1629                           ;!   _iniLCD
  1630                           ;!     _LCDcommand
  1631                           ;!   _level_up
  1632                           ;!     _CG_char
  1633                           ;!       _LCDchar
  1634                           ;!       _LCDcommand
  1635                           ;!     _LCDString
  1636                           ;!       _LCDchar
  1637                           ;!     _LCDcommand
  1638                           ;!     _MoveCursor
  1639                           ;!       _LCDcommand
  1640                           ;!   _lock_sprite_switch
  1641                           ;!   _move_lock
  1642                           ;!     _LCDchar
  1643                           ;!     _MoveCursor
  1644                           ;!       _LCDcommand
  1645                           ;!   _move_stage
  1646                           ;!     _MoveLCD
  1647                           ;!       _LCDcommand
  1648                           ;!     _rand_key
  1649                           ;!       _CG_char
  1650                           ;!         _LCDchar
  1651                           ;!         _LCDcommand
  1652                           ;!       _rand
  1653                           ;!         ___omul
  1654                           ;!   _out_of_screen
  1655                           ;!     _CG_char
  1656                           ;!       _LCDchar
  1657                           ;!       _LCDcommand
  1658                           ;!     _LCDString
  1659                           ;!       _LCDchar
  1660                           ;!     _LCDcommand
  1661                           ;!     _MoveCursor
  1662                           ;!       _LCDcommand
  1663                           ;!
  1664                           
  1665                           ;! Address spaces:
  1666                           
  1667                           ;!Name               Size   Autos  Total    Cost      Usage
  1668                           ;!BIGRAM             7FF      0       0      21        0.0%
  1669                           ;!EEDATA             100      0       0       0        0.0%
  1670                           ;!BITBANK7           100      0       0      18        0.0%
  1671                           ;!BANK7              100      0       0      19        0.0%
  1672                           ;!BITBANK6           100      0       0      16        0.0%
  1673                           ;!BANK6              100      0       0      17        0.0%
  1674                           ;!BITBANK5           100      0       0      14        0.0%
  1675                           ;!BANK5              100      0       0      15        0.0%
  1676                           ;!BITBANK4           100      0       0      12        0.0%
  1677                           ;!BANK4              100      0       0      13        0.0%
  1678                           ;!BITBANK3           100      0       0      10        0.0%
  1679                           ;!BANK3              100      0       0      11        0.0%
  1680                           ;!BITBANK2           100      0       0       8        0.0%
  1681                           ;!BANK2              100      0       0       9        0.0%
  1682                           ;!BITBANK1           100      0       0       6        0.0%
  1683                           ;!BANK1              100      0       0       7        0.0%
  1684                           ;!BITBANK0            A0      0       0       4        0.0%
  1685                           ;!BANK0               A0      0      50       5       50.0%
  1686                           ;!BITCOMRAM           5F      0       0       0        0.0%
  1687                           ;!COMRAM              5F     30      5F       1      100.0%
  1688                           ;!BITSFR               0      0       0     200        0.0%
  1689                           ;!SFR                  0      0       0     200        0.0%
  1690                           ;!STACK                0      0       0       2        0.0%
  1691                           ;!NULL                 0      0       0       0        0.0%
  1692                           ;!ABS                  0      0      AF      20        0.0%
  1693                           ;!DATA                 0      0      AF       3        0.0%
  1694                           ;!CODE                 0      0       0       0        0.0%
  1695                           
  1696                           	global	_main
  1697                           
  1698 ;; *************** function _main *****************
  1699 ;; Defined at:
  1700 ;;		line 101 in file "main_LCD_Disp_Chars.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  i               2   46[COMRAM] int 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1714 ;;      Params:         0       0       0       0       0       0       0       0       0
  1715 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1716 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1717 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1718 ;;Total ram usage:        7 bytes
  1719 ;; Hardware stack levels required when called:    4
  1720 ;; This function calls:
  1721 ;;		_CG_char
  1722 ;;		_GenChar
  1723 ;;		___lbmod
  1724 ;;		_game_over_seq
  1725 ;;		_iniLCD
  1726 ;;		_level_up
  1727 ;;		_lock_sprite_switch
  1728 ;;		_move_lock
  1729 ;;		_move_stage
  1730 ;;		_out_of_screen
  1731 ;; This function is called by:
  1732 ;;		Startup code after reset
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1736                           	file	"main_LCD_Disp_Chars.c"
  1737                           	line	101
  1738                           global __ptext0
  1739                           __ptext0:
  1740  000816                     psect	text0
  1741                           	file	"main_LCD_Disp_Chars.c"
  1742                           	line	101
  1743                           	global	__size_of_main
  1744                           	__size_of_main	equ	__end_of_main-_main
  1745  0000                     	
  1746                           _main:
  1747  000816                     ;incstack = 0
  1748                           	opt	stack 27
  1749                           	line	102
  1750                           	
  1751                           l1575:
  1752  000816                     ;main_LCD_Disp_Chars.c: 102:     OSCCON=0x72;
  1753                           	movlw	low(072h)
  1754  000816  0E72               	movwf	((c:4051)),c	;volatile
  1755  000818  6ED3               	line	105
  1756                           	
  1757                           l1577:
  1758  00081A                     ;main_LCD_Disp_Chars.c: 105:     ADCON1bits.PCFG0 = 1;
  1759                           	bsf	((c:4033)),c,0	;volatile
  1760  00081A  80C1               	line	106
  1761                           	
  1762                           l1579:
  1763  00081C                     ;main_LCD_Disp_Chars.c: 106:     ADCON1bits.PCFG1 = 1;
  1764                           	bsf	((c:4033)),c,1	;volatile
  1765  00081C  82C1               	line	107
  1766                           	
  1767                           l1581:
  1768  00081E                     ;main_LCD_Disp_Chars.c: 107:     ADCON1bits.PCFG2 = 1;
  1769                           	bsf	((c:4033)),c,2	;volatile
  1770  00081E  84C1               	line	108
  1771                           	
  1772                           l1583:
  1773  000820                     ;main_LCD_Disp_Chars.c: 108:     ADCON1bits.PCFG3 = 1;
  1774                           	bsf	((c:4033)),c,3	;volatile
  1775  000820  86C1               	line	110
  1776                           ;main_LCD_Disp_Chars.c: 110:     TRISA = 1;;
  1777                           	movlw	low(01h)
  1778  000822  0E01               	movwf	((c:3986)),c	;volatile
  1779  000824  6E92               	line	111
  1780                           ;main_LCD_Disp_Chars.c: 111:     TRISD = 0;;
  1781                           	movlw	low(0)
  1782  000826  0E00               	movwf	((c:3989)),c	;volatile
  1783  000828  6E95               	line	112
  1784                           ;main_LCD_Disp_Chars.c: 112:     TRISE = 0;;
  1785                           	movlw	low(0)
  1786  00082A  0E00               	movwf	((c:3990)),c	;volatile
  1787  00082C  6E96               	line	114
  1788                           	
  1789                           l1585:
  1790  00082E                     ;main_LCD_Disp_Chars.c: 114:     iniLCD();
  1791                           	call	_iniLCD	;wreg free
  1792  00082E  EC6A  F008         	line	115
  1793                           	
  1794                           l1587:
  1795  000832                     ;main_LCD_Disp_Chars.c: 115:     GenChar(0,lock_F);
  1796                           		movlw	low(_lock_F)
  1797  000832  0E4D               	movwf	((c:GenChar@msg)),c
  1798  000834  6E03               	movlw	high(_lock_F)
  1799  000836  0E00               	movwf	((c:GenChar@msg+1)),c
  1800  000838  6E04               
  1801                           	movlw	(0)&0ffh
  1802  00083A  0E00               	
  1803                           	call	_GenChar
  1804  00083C  ECCB  F007         	line	116
  1805                           	
  1806                           l1589:
  1807  000840                     ;main_LCD_Disp_Chars.c: 116:     GenChar(1,lock_R);
  1808                           		movlw	low(_lock_R)
  1809  000840  0E45               	movwf	((c:GenChar@msg)),c
  1810  000842  6E03               	movlw	high(_lock_R)
  1811  000844  0E00               	movwf	((c:GenChar@msg+1)),c
  1812  000846  6E04               
  1813                           	movlw	(01h)&0ffh
  1814  000848  0E01               	
  1815                           	call	_GenChar
  1816  00084A  ECCB  F007         	line	117
  1817                           	
  1818                           l1591:
  1819  00084E                     ;main_LCD_Disp_Chars.c: 117:     GenChar(2,lock_B);
  1820                           		movlw	low(_lock_B)
  1821  00084E  0EA8               	movwf	((c:GenChar@msg)),c
  1822  000850  6E03               	movlw	high(_lock_B)
  1823  000852  0E00               	movwf	((c:GenChar@msg+1)),c
  1824  000854  6E04               
  1825                           	movlw	(02h)&0ffh
  1826  000856  0E02               	
  1827                           	call	_GenChar
  1828  000858  ECCB  F007         	line	118
  1829                           	
  1830                           l1593:
  1831  00085C                     ;main_LCD_Disp_Chars.c: 118:     GenChar(3,lock_L);
  1832                           		movlw	low(_lock_L)
  1833  00085C  0EA0               	movwf	((c:GenChar@msg)),c
  1834  00085E  6E03               	movlw	high(_lock_L)
  1835  000860  0E00               	movwf	((c:GenChar@msg+1)),c
  1836  000862  6E04               
  1837                           	movlw	(03h)&0ffh
  1838  000864  0E03               	
  1839                           	call	_GenChar
  1840  000866  ECCB  F007         	line	119
  1841                           	
  1842                           l1595:
  1843  00086A                     ;main_LCD_Disp_Chars.c: 119:     GenChar(4,lock_end);
  1844                           		movlw	low(_lock_end)
  1845  00086A  0E90               	movwf	((c:GenChar@msg)),c
  1846  00086C  6E03               	movlw	high(_lock_end)
  1847  00086E  0E00               	movwf	((c:GenChar@msg+1)),c
  1848  000870  6E04               
  1849                           	movlw	(04h)&0ffh
  1850  000872  0E04               	
  1851                           	call	_GenChar
  1852  000874  ECCB  F007         	line	120
  1853                           	
  1854                           l1597:
  1855  000878                     ;main_LCD_Disp_Chars.c: 120:     GenChar(5,key);
  1856                           		movlw	low(_key)
  1857  000878  0E98               	movwf	((c:GenChar@msg)),c
  1858  00087A  6E03               	movlw	high(_key)
  1859  00087C  0E00               	movwf	((c:GenChar@msg+1)),c
  1860  00087E  6E04               
  1861                           	movlw	(05h)&0ffh
  1862  000880  0E05               	
  1863                           	call	_GenChar
  1864  000882  ECCB  F007         	line	121
  1865                           	
  1866                           l1599:
  1867  000886                     ;main_LCD_Disp_Chars.c: 121:     GenChar(6,lock_broken);
  1868                           		movlw	low(_lock_broken)
  1869  000886  0E88               	movwf	((c:GenChar@msg)),c
  1870  000888  6E03               	movlw	high(_lock_broken)
  1871  00088A  0E00               	movwf	((c:GenChar@msg+1)),c
  1872  00088C  6E04               
  1873                           	movlw	(06h)&0ffh
  1874  00088E  0E06               	
  1875                           	call	_GenChar
  1876  000890  ECCB  F007         	line	122
  1877                           	
  1878                           l1601:
  1879  000894                     ;main_LCD_Disp_Chars.c: 122:     GenChar(7,smiley);
  1880                           		movlw	low(_smiley)
  1881  000894  0E80               	movwf	((c:GenChar@msg)),c
  1882  000896  6E03               	movlw	high(_smiley)
  1883  000898  0E00               	movwf	((c:GenChar@msg+1)),c
  1884  00089A  6E04               
  1885                           	movlw	(07h)&0ffh
  1886  00089C  0E07               	
  1887                           	call	_GenChar
  1888  00089E  ECCB  F007         	line	123
  1889                           	
  1890                           l1603:
  1891  0008A2                     ;main_LCD_Disp_Chars.c: 123:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1892                           	opt asmopt_push
  1893                           opt asmopt_off
  1894                           movlw  2
  1895  0008A2  0E02               movwf	(??_main+0+0+1)&0ffh,c,f
  1896  0008A4  6E2B               movlw	4
  1897  0008A6  0E04               movwf	(??_main+0+0)&0ffh,c,f
  1898  0008A8  6E2A               	movlw	186
  1899  0008AA  0EBA               u737:
  1900  0008AC                     decfsz	wreg,f
  1901  0008AC  2EE8               	bra	u737
  1902  0008AE  D7FE               	decfsz	(??_main+0+0)&0ffh,c,f
  1903  0008B0  2E2A               	bra	u737
  1904  0008B2  D7FC               	decfsz	(??_main+0+0+1)&0ffh,c,f
  1905  0008B4  2E2B               	bra	u737
  1906  0008B6  D7FA               	nop2
  1907  0008B8  D000               opt asmopt_pop
  1908                           
  1909                           	goto	l1605
  1910  0008BA  EF5F  F004         	line	125
  1911                           ;main_LCD_Disp_Chars.c: 125:     while(1){
  1912                           	
  1913                           l83:
  1914  0008BE                     	line	126
  1915                           	
  1916                           l1605:
  1917  0008BE                     ;main_LCD_Disp_Chars.c: 126:         move_lock();
  1918                           	call	_move_lock	;wreg free
  1919  0008BE  EC87  F005         	line	127
  1920                           	
  1921                           l1607:
  1922  0008C2                     ;main_LCD_Disp_Chars.c: 127:         lock_sprite_switch();
  1923                           	call	_lock_sprite_switch	;wreg free
  1924  0008C2  EC36  F008         	line	129
  1925                           	
  1926                           l1609:
  1927  0008C6                     ;main_LCD_Disp_Chars.c: 129:         CG_char(icon,line,pos);
  1928                           	movff	(c:_line),(c:CG_char@line)
  1929  0008C6  C043  F003         	movff	(c:_pos),(c:CG_char@row)
  1930  0008CA  C044  F004         	movf	((c:_icon)),c,w
  1931  0008CE  5057               	
  1932                           	call	_CG_char
  1933  0008D0  EC97  F008         	line	130
  1934                           	
  1935                           l1611:
  1936  0008D4                     ;main_LCD_Disp_Chars.c: 130:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1937                           	opt asmopt_push
  1938                           opt asmopt_off
  1939                           movlw  3
  1940  0008D4  0E03               movwf	(??_main+0+0+1)&0ffh,c,f
  1941  0008D6  6E2B               movlw	8
  1942  0008D8  0E08               movwf	(??_main+0+0)&0ffh,c,f
  1943  0008DA  6E2A               	movlw	119
  1944  0008DC  0E77               u747:
  1945  0008DE                     decfsz	wreg,f
  1946  0008DE  2EE8               	bra	u747
  1947  0008E0  D7FE               	decfsz	(??_main+0+0)&0ffh,c,f
  1948  0008E2  2E2A               	bra	u747
  1949  0008E4  D7FC               	decfsz	(??_main+0+0+1)&0ffh,c,f
  1950  0008E6  2E2B               	bra	u747
  1951  0008E8  D7FA               	nop
  1952  0008EA  F000               opt asmopt_pop
  1953                           
  1954                           	line	131
  1955                           	
  1956                           l1613:
  1957  0008EC                     ;main_LCD_Disp_Chars.c: 131:         shift++;
  1958                           	incf	((c:_shift)),c
  1959  0008EC  2A56               	line	133
  1960                           ;main_LCD_Disp_Chars.c: 133:         for(int i = 0; i < 8; i++){
  1961                           	movlw	high(0)
  1962  0008EE  0E00               	movwf	((c:main@i+1)),c
  1963  0008F0  6E30               	movlw	low(0)
  1964  0008F2  0E00               	movwf	((c:main@i)),c
  1965  0008F4  6E2F               	
  1966                           l1615:
  1967  0008F6                     	btfsc	((c:main@i+1)),c,7
  1968  0008F6  BE30               	goto	u661
  1969  0008F8  EF87  F004         	movf	((c:main@i+1)),c,w
  1970  0008FC  5030               	bnz	u660
  1971  0008FE  E109               	movlw	8
  1972  000900  0E08               	subwf	 ((c:main@i)),c,w
  1973  000902  5C2F               	btfss	status,0
  1974  000904  A0D8               	goto	u661
  1975  000906  EF87  F004         	goto	u660
  1976  00090A  EF89  F004         
  1977                           u661:
  1978  00090E                     	goto	l1619
  1979  00090E  EF8D  F004         u660:
  1980  000912                     	goto	l1631
  1981  000912  EFC3  F004         	
  1982                           l1617:
  1983  000916                     	goto	l1631
  1984  000916  EFC3  F004         	
  1985                           l84:
  1986  00091A                     	line	134
  1987                           	
  1988                           l1619:
  1989  00091A                     ;main_LCD_Disp_Chars.c: 134:             if(key_pos[i] == pos & key_line[i] == line){
  1990                           	movlw	low(_key_pos)
  1991  00091A  0E39               	addwf	((c:main@i)),c,w
  1992  00091C  242F               	movwf	c:fsr2l
  1993  00091E  6ED9               	movlw	high(_key_pos)
  1994  000920  0E00               	addwfc	((c:main@i+1)),c,w
  1995  000922  2030               	movwf	1+c:fsr2l
  1996  000924  6EDA               	movf	((c:_pos)),c,w
  1997  000926  5044               xorwf	postinc2,w
  1998  000928  18DE               	btfss	status,2
  1999  00092A  A4D8               	goto	u671
  2000  00092C  EF9A  F004         	goto	u670
  2001  000930  EF9C  F004         
  2002                           u671:
  2003  000934                     	goto	l1627
  2004  000934  EFB1  F004         u670:
  2005  000938                     	
  2006                           l1621:
  2007  000938                     	movlw	low(_key_line)
  2008  000938  0E31               	addwf	((c:main@i)),c,w
  2009  00093A  242F               	movwf	c:fsr2l
  2010  00093C  6ED9               	movlw	high(_key_line)
  2011  00093E  0E00               	addwfc	((c:main@i+1)),c,w
  2012  000940  2030               	movwf	1+c:fsr2l
  2013  000942  6EDA               	movf	((c:_line)),c,w
  2014  000944  5043               xorwf	postinc2,w
  2015  000946  18DE               	btfss	status,2
  2016  000948  A4D8               	goto	u681
  2017  00094A  EFA9  F004         	goto	u680
  2018  00094E  EFAB  F004         
  2019                           u681:
  2020  000952                     	goto	l1627
  2021  000952  EFB1  F004         u680:
  2022  000956                     	line	135
  2023                           	
  2024                           l1623:
  2025  000956                     ;main_LCD_Disp_Chars.c: 135:                 game_over_seq();
  2026                           	call	_game_over_seq	;wreg free
  2027  000956  EC06  F005         	goto	l87
  2028  00095A  EF04  F005         	line	136
  2029                           	
  2030                           l1625:
  2031  00095E                     ;main_LCD_Disp_Chars.c: 136:                 return;
  2032                           	goto	l87
  2033  00095E  EF04  F005         	line	137
  2034                           ;main_LCD_Disp_Chars.c: 137:             }
  2035                           	
  2036                           l86:
  2037  000962                     	line	138
  2038                           	
  2039                           l1627:
  2040  000962                     ;main_LCD_Disp_Chars.c: 138:         }
  2041                           	infsnz	((c:main@i)),c
  2042  000962  4A2F               	incf	((c:main@i+1)),c
  2043  000964  2A30               	
  2044                           l1629:
  2045  000966                     	btfsc	((c:main@i+1)),c,7
  2046  000966  BE30               	goto	u691
  2047  000968  EFBF  F004         	movf	((c:main@i+1)),c,w
  2048  00096C  5030               	bnz	u690
  2049  00096E  E109               	movlw	8
  2050  000970  0E08               	subwf	 ((c:main@i)),c,w
  2051  000972  5C2F               	btfss	status,0
  2052  000974  A0D8               	goto	u691
  2053  000976  EFBF  F004         	goto	u690
  2054  00097A  EFC1  F004         
  2055                           u691:
  2056  00097E                     	goto	l1619
  2057  00097E  EF8D  F004         u690:
  2058  000982                     	goto	l1631
  2059  000982  EFC3  F004         	
  2060                           l85:
  2061  000986                     	line	140
  2062                           	
  2063                           l1631:
  2064  000986                     ;main_LCD_Disp_Chars.c: 140:         if(key_ > (pos+14)){
  2065                           	movf	((c:_key_)),c,w
  2066  000986  5042               	movwf	(??_main+0+0)&0ffh,c
  2067  000988  6E2A               	clrf	(??_main+0+0+1)&0ffh,c
  2068  00098A  6A2B               
  2069                           	movf	((c:_pos)),c,w
  2070  00098C  5044               	movwf	(??_main+2+0)&0ffh,c
  2071  00098E  6E2C               	clrf	(??_main+2+0+1)&0ffh,c
  2072  000990  6A2D               
  2073                           	movlw	0Eh
  2074  000992  0E0E               	addwf	(??_main+2+0),c
  2075  000994  262C               	movlw	0
  2076  000996  0E00               	addwfc	(??_main+2+1),c
  2077  000998  222D               		movf	(??_main+0+0),c,w
  2078  00099A  502A               	subwf	(??_main+2+0),c,w
  2079  00099C  5C2C               	movf	(??_main+2+1),c,w
  2080  00099E  502D               	xorlw	80h
  2081  0009A0  0A80               	movwf	(??_main+4+0)&0ffh,c
  2082  0009A2  6E2E               	movf	(??_main+0+1),c,w
  2083  0009A4  502B               	xorlw	80h
  2084  0009A6  0A80               	subwfb	(??_main+4+0)&0ffh,c,w
  2085  0009A8  582E               	btfsc	status,0
  2086  0009AA  B0D8               	goto	u701
  2087  0009AC  EFDA  F004         	goto	u700
  2088  0009B0  EFDC  F004         
  2089                           u701:
  2090  0009B4                     	goto	l1637
  2091  0009B4  EFE2  F004         u700:
  2092  0009B8                     	line	141
  2093                           	
  2094                           l1633:
  2095  0009B8                     ;main_LCD_Disp_Chars.c: 141:             out_of_screen();
  2096                           	call	_out_of_screen	;wreg free
  2097  0009B8  EC92  F007         	goto	l87
  2098  0009BC  EF04  F005         	line	142
  2099                           	
  2100                           l1635:
  2101  0009C0                     ;main_LCD_Disp_Chars.c: 142:             return;
  2102                           	goto	l87
  2103  0009C0  EF04  F005         	line	143
  2104                           ;main_LCD_Disp_Chars.c: 143:         }
  2105                           	
  2106                           l88:
  2107  0009C4                     	line	145
  2108                           	
  2109                           l1637:
  2110  0009C4                     ;main_LCD_Disp_Chars.c: 145:         if((shift % level) == 0){
  2111                           	movff	(c:_level),(c:___lbmod@divisor)
  2112  0009C4  C041  F001         	movf	((c:_shift)),c,w
  2113  0009C8  5056               	
  2114                           	call	___lbmod
  2115  0009CA  EC43  F009         	iorlw	0
  2116  0009CE  0900               	btfss	status,2
  2117  0009D0  A4D8               	goto	u711
  2118  0009D2  EFED  F004         	goto	u710
  2119  0009D6  EFEF  F004         u711:
  2120  0009DA                     	goto	l1641
  2121  0009DA  EFF3  F004         u710:
  2122  0009DE                     	line	146
  2123                           	
  2124                           l1639:
  2125  0009DE                     ;main_LCD_Disp_Chars.c: 146:             move_stage();
  2126                           	call	_move_stage	;wreg free
  2127  0009DE  EC01  F008         	goto	l1641
  2128  0009E2  EFF3  F004         	line	147
  2129                           ;main_LCD_Disp_Chars.c: 147:         }
  2130                           	
  2131                           l89:
  2132  0009E6                     	line	149
  2133                           	
  2134                           l1641:
  2135  0009E6                     ;main_LCD_Disp_Chars.c: 149:         if (pos == 39){
  2136                           		movlw	39
  2137  0009E6  0E27               	xorwf	((c:_pos)),c,w
  2138  0009E8  1844               	btfss	status,2
  2139  0009EA  A4D8               	goto	u721
  2140  0009EC  EFFA  F004         	goto	u720
  2141  0009F0  EFFC  F004         
  2142                           u721:
  2143  0009F4                     	goto	l1605
  2144  0009F4  EF5F  F004         u720:
  2145  0009F8                     	line	150
  2146                           	
  2147                           l1643:
  2148  0009F8                     ;main_LCD_Disp_Chars.c: 150:             level_up();
  2149                           	call	_level_up	;wreg free
  2150  0009F8  ECE4  F006         	goto	l1605
  2151  0009FC  EF5F  F004         	line	151
  2152                           ;main_LCD_Disp_Chars.c: 151:         }
  2153                           	
  2154                           l90:
  2155  000A00                     	goto	l1605
  2156  000A00  EF5F  F004         	line	152
  2157                           ;main_LCD_Disp_Chars.c: 152:     }
  2158                           	
  2159                           l91:
  2160  000A04                     	goto	l1605
  2161  000A04  EF5F  F004         	
  2162                           l92:
  2163  000A08                     	line	153
  2164                           	
  2165                           l87:
  2166  000A08                     	global	start
  2167                           	goto	start
  2168  000A08  EF00  F000         	opt stack 0
  2169                           GLOBAL	__end_of_main
  2170                           	__end_of_main:
  2171  000A0C                     	signat	_main,89
  2172                           	global	_out_of_screen
  2173                           
  2174 ;; *************** function _out_of_screen *****************
  2175 ;; Defined at:
  2176 ;;		line 248 in file "main_LCD_Disp_Chars.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2190 ;;      Params:         0       0       0       0       0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2192 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2193 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2194 ;;Total ram usage:        2 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    2
  2197 ;; This function calls:
  2198 ;;		_CG_char
  2199 ;;		_LCDString
  2200 ;;		_LCDcommand
  2201 ;;		_MoveCursor
  2202 ;; This function is called by:
  2203 ;;		_main
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           psect	text1,class=CODE,space=0,reloc=2,group=0
  2207                           	line	248
  2208                           global __ptext1
  2209                           __ptext1:
  2210  000F24                     psect	text1
  2211                           	file	"main_LCD_Disp_Chars.c"
  2212                           	line	248
  2213                           	global	__size_of_out_of_screen
  2214                           	__size_of_out_of_screen	equ	__end_of_out_of_screen-_out_of_screen
  2215  0000                     	
  2216                           _out_of_screen:
  2217  000F24                     ;incstack = 0
  2218                           	opt	stack 28
  2219                           	line	249
  2220                           	
  2221                           l1497:
  2222  000F24                     ;main_LCD_Disp_Chars.c: 249:     LCDcommand(0b00000001);
  2223                           	movlw	(01h)&0ffh
  2224  000F24  0E01               	
  2225                           	call	_LCDcommand
  2226  000F26  ECA0  F009         	line	250
  2227                           	
  2228                           l1499:
  2229  000F2A                     ;main_LCD_Disp_Chars.c: 250:     _delay((unsigned long)((100)*(8000000/4000.0)));
  2230                           	opt asmopt_push
  2231                           opt asmopt_off
  2232                           movlw  2
  2233  000F2A  0E02               movwf	(??_out_of_screen+0+0+1)&0ffh,c,f
  2234  000F2C  6E09               movlw	4
  2235  000F2E  0E04               movwf	(??_out_of_screen+0+0)&0ffh,c,f
  2236  000F30  6E08               	movlw	186
  2237  000F32  0EBA               u757:
  2238  000F34                     decfsz	wreg,f
  2239  000F34  2EE8               	bra	u757
  2240  000F36  D7FE               	decfsz	(??_out_of_screen+0+0)&0ffh,c,f
  2241  000F38  2E08               	bra	u757
  2242  000F3A  D7FC               	decfsz	(??_out_of_screen+0+0+1)&0ffh,c,f
  2243  000F3C  2E09               	bra	u757
  2244  000F3E  D7FA               	nop2
  2245  000F40  D000               opt asmopt_pop
  2246                           
  2247                           	line	251
  2248                           	
  2249                           l1501:
  2250  000F42                     ;main_LCD_Disp_Chars.c: 251:     MoveCursor(4, 1);
  2251                           	movlw	low(01h)
  2252  000F42  0E01               	movwf	((c:MoveCursor@y)),c
  2253  000F44  6E03               	movlw	(04h)&0ffh
  2254  000F46  0E04               	
  2255                           	call	_MoveCursor
  2256  000F48  ECC4  F008         	line	252
  2257                           	
  2258                           l1503:
  2259  000F4C                     ;main_LCD_Disp_Chars.c: 252:     LCDString("GAME OVER");
  2260                           		movlw	low(STR_3)
  2261  000F4C  0E01               	movwf	((c:LCDString@msg)),c
  2262  000F4E  6E02               	movlw	high(STR_3)
  2263  000F50  0E08               	movwf	((c:LCDString@msg+1)),c
  2264  000F52  6E03               
  2265                           	call	_LCDString	;wreg free
  2266  000F54  EC66  F009         	line	253
  2267                           	
  2268                           l1505:
  2269  000F58                     ;main_LCD_Disp_Chars.c: 253:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2270                           	opt asmopt_push
  2271                           opt asmopt_off
  2272                           movlw  6
  2273  000F58  0E06               movwf	(??_out_of_screen+0+0+1)&0ffh,c,f
  2274  000F5A  6E09               movlw	19
  2275  000F5C  0E13               movwf	(??_out_of_screen+0+0)&0ffh,c,f
  2276  000F5E  6E08               	movlw	174
  2277  000F60  0EAE               u767:
  2278  000F62                     decfsz	wreg,f
  2279  000F62  2EE8               	bra	u767
  2280  000F64  D7FE               	decfsz	(??_out_of_screen+0+0)&0ffh,c,f
  2281  000F66  2E08               	bra	u767
  2282  000F68  D7FC               	decfsz	(??_out_of_screen+0+0+1)&0ffh,c,f
  2283  000F6A  2E09               	bra	u767
  2284  000F6C  D7FA               opt asmopt_pop
  2285                           
  2286                           	line	254
  2287                           	
  2288                           l1507:
  2289  000F6E                     ;main_LCD_Disp_Chars.c: 254:     CG_char(6,2,8);
  2290                           	movlw	low(02h)
  2291  000F6E  0E02               	movwf	((c:CG_char@line)),c
  2292  000F70  6E03               	movlw	low(08h)
  2293  000F72  0E08               	movwf	((c:CG_char@row)),c
  2294  000F74  6E04               	movlw	(06h)&0ffh
  2295  000F76  0E06               	
  2296                           	call	_CG_char
  2297  000F78  EC97  F008         	line	255
  2298                           	
  2299                           l1509:
  2300  000F7C                     ;main_LCD_Disp_Chars.c: 255:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  2301                           	opt asmopt_push
  2302                           opt asmopt_off
  2303                           movlw  31
  2304  000F7C  0E1F               movwf	(??_out_of_screen+0+0+1)&0ffh,c,f
  2305  000F7E  6E09               movlw	113
  2306  000F80  0E71               movwf	(??_out_of_screen+0+0)&0ffh,c,f
  2307  000F82  6E08               	movlw	30
  2308  000F84  0E1E               u777:
  2309  000F86                     decfsz	wreg,f
  2310  000F86  2EE8               	bra	u777
  2311  000F88  D7FE               	decfsz	(??_out_of_screen+0+0)&0ffh,c,f
  2312  000F8A  2E08               	bra	u777
  2313  000F8C  D7FC               	decfsz	(??_out_of_screen+0+0+1)&0ffh,c,f
  2314  000F8E  2E09               	bra	u777
  2315  000F90  D7FA               	nop2
  2316  000F92  D000               opt asmopt_pop
  2317                           
  2318                           	line	256
  2319                           	
  2320                           l128:
  2321  000F94                     	return	;funcret
  2322  000F94  0012               	opt stack 0
  2323                           GLOBAL	__end_of_out_of_screen
  2324                           	__end_of_out_of_screen:
  2325  000F96                     	signat	_out_of_screen,89
  2326                           	global	_move_stage
  2327                           
  2328 ;; *************** function _move_stage *****************
  2329 ;; Defined at:
  2330 ;;		line 178 in file "main_LCD_Disp_Chars.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2347 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    3
  2351 ;; This function calls:
  2352 ;;		_MoveLCD
  2353 ;;		_rand_key
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           psect	text2,class=CODE,space=0,reloc=2,group=0
  2359                           	line	178
  2360                           global __ptext2
  2361                           __ptext2:
  2362  001002                     psect	text2
  2363                           	file	"main_LCD_Disp_Chars.c"
  2364                           	line	178
  2365                           	global	__size_of_move_stage
  2366                           	__size_of_move_stage	equ	__end_of_move_stage-_move_stage
  2367  0000                     	
  2368                           _move_stage:
  2369  001002                     ;incstack = 0
  2370                           	opt	stack 27
  2371                           	line	179
  2372                           	
  2373                           l1511:
  2374  001002                     ;main_LCD_Disp_Chars.c: 179:     MoveLCD(0,1);
  2375                           	movlw	low(01h)
  2376  001002  0E01               	movwf	((c:MoveLCD@inc)),c
  2377  001004  6E03               	movlw	(0)&0ffh
  2378  001006  0E00               	
  2379                           	call	_MoveLCD
  2380  001008  EC76  F006         	line	180
  2381                           	
  2382                           l1513:
  2383  00100C                     ;main_LCD_Disp_Chars.c: 180:     key_++;
  2384                           	incf	((c:_key_)),c
  2385  00100C  2A42               	line	181
  2386                           	
  2387                           l1515:
  2388  00100E                     ;main_LCD_Disp_Chars.c: 181:     if((key_ % 2) == 0){
  2389                           	
  2390                           	btfsc	((c:_key_)),c,(0)&7
  2391  00100E  B042               	goto	u601
  2392  001010  EF0C  F008         	goto	u600
  2393  001014  EF0E  F008         u601:
  2394  001018                     	goto	l104
  2395  001018  EF35  F008         u600:
  2396  00101C                     	line	182
  2397                           	
  2398                           l1517:
  2399  00101C                     ;main_LCD_Disp_Chars.c: 182:         if(key_pointer == 8){
  2400                           		movlw	8
  2401  00101C  0E08               	xorwf	((c:_key_pointer)),c,w
  2402  00101E  1855               	btfss	status,2
  2403  001020  A4D8               	goto	u611
  2404  001022  EF15  F008         	goto	u610
  2405  001026  EF17  F008         
  2406                           u611:
  2407  00102A                     	goto	l1521
  2408  00102A  EF1B  F008         u610:
  2409  00102E                     	line	183
  2410                           	
  2411                           l1519:
  2412  00102E                     ;main_LCD_Disp_Chars.c: 183:             key_pointer = 0;
  2413                           	movlw	low(0)
  2414  00102E  0E00               	movwf	((c:_key_pointer)),c
  2415  001030  6E55               	goto	l1521
  2416  001032  EF1B  F008         	line	184
  2417                           ;main_LCD_Disp_Chars.c: 184:         }
  2418                           	
  2419                           l103:
  2420  001036                     	line	185
  2421                           	
  2422                           l1521:
  2423  001036                     ;main_LCD_Disp_Chars.c: 185:         key_line[key_pointer] = rand_key(key_);
  2424                           	movf	((c:_key_)),c,w
  2425  001036  5042               	
  2426                           	call	_rand_key
  2427  001038  EC85  F009         	movf	((c:_key_pointer)),c,w
  2428  00103C  5055               	mullw	01h
  2429  00103E  0D01               	movlw	low(_key_line)
  2430  001040  0E31               	addwf	(prodl),c,w
  2431  001042  24F3               	movwf	c:fsr2l
  2432  001044  6ED9               	movlw	high(_key_line)
  2433  001046  0E00               	addwfc	prod+1,w
  2434  001048  20F4               	movwf	1+c:fsr2l
  2435  00104A  6EDA               	movff	0+?_rand_key,indf2
  2436  00104C  C023  FFDF         
  2437                           	line	186
  2438                           	
  2439                           l1523:
  2440  001050                     ;main_LCD_Disp_Chars.c: 186:         key_pos[key_pointer] = key_;
  2441                           	movf	((c:_key_pointer)),c,w
  2442  001050  5055               	mullw	01h
  2443  001052  0D01               	movlw	low(_key_pos)
  2444  001054  0E39               	addwf	(prodl),c,w
  2445  001056  24F3               	movwf	c:fsr2l
  2446  001058  6ED9               	movlw	high(_key_pos)
  2447  00105A  0E00               	addwfc	prod+1,w
  2448  00105C  20F4               	movwf	1+c:fsr2l
  2449  00105E  6EDA               	movff	(c:_key_),indf2
  2450  001060  C042  FFDF         
  2451                           	line	187
  2452                           	
  2453                           l1525:
  2454  001064                     ;main_LCD_Disp_Chars.c: 187:         key_pointer++;
  2455                           	incf	((c:_key_pointer)),c
  2456  001064  2A55               	goto	l104
  2457  001066  EF35  F008         	line	188
  2458                           ;main_LCD_Disp_Chars.c: 188:     }
  2459                           	
  2460                           l102:
  2461  00106A                     	line	189
  2462                           	
  2463                           l104:
  2464  00106A                     	return	;funcret
  2465  00106A  0012               	opt stack 0
  2466                           GLOBAL	__end_of_move_stage
  2467                           	__end_of_move_stage:
  2468  00106C                     	signat	_move_stage,89
  2469                           	global	_rand_key
  2470                           
  2471 ;; *************** function _rand_key *****************
  2472 ;; Defined at:
  2473 ;;		line 95 in file "lcd_utils.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  k_pos           1    wreg     unsigned char 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  k_pos           1   36[COMRAM] unsigned char 
  2478 ;;  ene_line        2   37[COMRAM] int 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  2   34[COMRAM] int 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2488 ;;      Params:         2       0       0       0       0       0       0       0       0
  2489 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2491 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2492 ;;Total ram usage:        5 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    2
  2495 ;; This function calls:
  2496 ;;		_CG_char
  2497 ;;		_rand
  2498 ;; This function is called by:
  2499 ;;		_move_stage
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           psect	text3,class=CODE,space=0,reloc=2,group=0
  2503                           	file	"lcd_utils.c"
  2504                           	line	95
  2505                           global __ptext3
  2506                           __ptext3:
  2507  00130A                     psect	text3
  2508                           	file	"lcd_utils.c"
  2509                           	line	95
  2510                           	global	__size_of_rand_key
  2511                           	__size_of_rand_key	equ	__end_of_rand_key-_rand_key
  2512  0000                     	
  2513                           _rand_key:
  2514  00130A                     ;incstack = 0
  2515                           	opt	stack 27
  2516                           ;rand_key@k_pos stored from wreg
  2517                           	movwf	((c:rand_key@k_pos)),c
  2518  00130A  6E25               	line	96
  2519                           	
  2520                           l1357:
  2521  00130C                     ;lcd_utils.c: 96:     int ene_line = rand() % 2 + 1;
  2522                           	call	_rand	;wreg free
  2523  00130C  EC06  F006         	movlw	01h
  2524  001310  0E01               	andwf	(0+?_rand),c
  2525  001312  1619               	movlw	0
  2526  001314  0E00               	andwf	(1+?_rand),c
  2527  001316  161A               	movlw	low(01h)
  2528  001318  0E01               	addwf	(0+?_rand),c,w
  2529  00131A  2419               	movwf	((c:rand_key@ene_line)),c
  2530  00131C  6E26               	movlw	high(01h)
  2531  00131E  0E00               	addwfc	(1+?_rand),c,w
  2532  001320  201A               	movwf	1+((c:rand_key@ene_line)),c
  2533  001322  6E27               	line	97
  2534                           	
  2535                           l1359:
  2536  001324                     ;lcd_utils.c: 97:     CG_char(5,ene_line,k_pos);
  2537                           	movff	(c:rand_key@ene_line),(c:CG_char@line)
  2538  001324  C026  F003         	movff	(c:rand_key@k_pos),(c:CG_char@row)
  2539  001328  C025  F004         	movlw	(05h)&0ffh
  2540  00132C  0E05               	
  2541                           	call	_CG_char
  2542  00132E  EC97  F008         	line	98
  2543                           	
  2544                           l1361:
  2545  001332                     ;lcd_utils.c: 98:     return ene_line;
  2546                           	movff	(c:rand_key@ene_line),(c:?_rand_key)
  2547  001332  C026  F023         	movff	(c:rand_key@ene_line+1),(c:?_rand_key+1)
  2548  001336  C027  F024         	goto	l179
  2549  00133A  EF9F  F009         	
  2550                           l1363:
  2551  00133E                     	line	99
  2552                           	
  2553                           l179:
  2554  00133E                     	return	;funcret
  2555  00133E  0012               	opt stack 0
  2556                           GLOBAL	__end_of_rand_key
  2557                           	__end_of_rand_key:
  2558  001340                     	signat	_rand_key,4218
  2559                           	global	_rand
  2560                           
  2561 ;; *************** function _rand *****************
  2562 ;; Defined at:
  2563 ;;		line 15 in file "D:\Microchip\xc8\v2.00\pic\sources\c99\common\rand.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  2   24[COMRAM] int 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2577 ;;      Params:         2       0       0       0       0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2579 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2580 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2581 ;;Total ram usage:       10 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    1
  2584 ;; This function calls:
  2585 ;;		___omul
  2586 ;; This function is called by:
  2587 ;;		_rand_key
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           psect	text4,class=CODE,space=0,reloc=2,group=2
  2591                           	file	"D:\Microchip\xc8\v2.00\pic\sources\c99\common\rand.c"
  2592                           	line	15
  2593                           global __ptext4
  2594                           __ptext4:
  2595  000C0C                     psect	text4
  2596                           	file	"D:\Microchip\xc8\v2.00\pic\sources\c99\common\rand.c"
  2597                           	line	15
  2598                           	global	__size_of_rand
  2599                           	__size_of_rand	equ	__end_of_rand-_rand
  2600  0000                     	
  2601                           _rand:
  2602  000C0C                     ;incstack = 0
  2603                           	opt	stack 27
  2604                           	line	20
  2605                           	
  2606                           l1309:
  2607  000C0C                     	movff	(c:_seed),(c:___omul@multiplier)
  2608  000C0C  C058  F001         	movff	(c:_seed+1),(c:___omul@multiplier+1)
  2609  000C10  C059  F002         	movff	(c:_seed+2),(c:___omul@multiplier+2)
  2610  000C14  C05A  F003         	movff	(c:_seed+3),(c:___omul@multiplier+3)
  2611  000C18  C05B  F004         	movff	(c:_seed+4),(c:___omul@multiplier+4)
  2612  000C1C  C05C  F005         	movff	(c:_seed+5),(c:___omul@multiplier+5)
  2613  000C20  C05D  F006         	movff	(c:_seed+6),(c:___omul@multiplier+6)
  2614  000C24  C05E  F007         	movff	(c:_seed+7),(c:___omul@multiplier+7)
  2615  000C28  C05F  F008         	movlw	byte0(05851F42D4C957F2Dh)
  2616  000C2C  0E2D               	movwf	((c:___omul@multiplicand)),c
  2617  000C2E  6E09               	movlw	byte1(05851F42D4C957F2Dh)
  2618  000C30  0E7F               	movwf	((c:___omul@multiplicand+1)),c
  2619  000C32  6E0A               	movlw	byte2(05851F42D4C957F2Dh)
  2620  000C34  0E95               	movwf	((c:___omul@multiplicand+2)),c
  2621  000C36  6E0B               	movlw	byte3(05851F42D4C957F2Dh)
  2622  000C38  0E4C               	movwf	((c:___omul@multiplicand+3)),c
  2623  000C3A  6E0C               	movlw	byte4(05851F42D4C957F2Dh)
  2624  000C3C  0E2D               	movwf	((c:___omul@multiplicand+4)),c
  2625  000C3E  6E0D               	movlw	byte5(05851F42D4C957F2Dh)
  2626  000C40  0EF4               	movwf	((c:___omul@multiplicand+5)),c
  2627  000C42  6E0E               	movlw	byte6(05851F42D4C957F2Dh)
  2628  000C44  0E51               	movwf	((c:___omul@multiplicand+6)),c
  2629  000C46  6E0F               	movlw	byte7(05851F42D4C957F2Dh)
  2630  000C48  0E58               	movwf	((c:___omul@multiplicand+7)),c
  2631  000C4A  6E10               	call	___omul	;wreg free
  2632  000C4C  EC3F  F007         	movff	0+?___omul,??_rand+0+0
  2633  000C50  C001  F01B         	movff	1+?___omul,??_rand+0+0+1
  2634  000C54  C002  F01C         	movff	2+?___omul,??_rand+0+0+2
  2635  000C58  C003  F01D         	movff	3+?___omul,??_rand+0+0+3
  2636  000C5C  C004  F01E         	movff	4+?___omul,??_rand+0+0+4
  2637  000C60  C005  F01F         	movff	5+?___omul,??_rand+0+0+5
  2638  000C64  C006  F020         	movff	6+?___omul,??_rand+0+0+6
  2639  000C68  C007  F021         	movff	7+?___omul,??_rand+0+0+7
  2640  000C6C  C008  F022         	
  2641                           	movlw	01h
  2642  000C70  0E01               	addwf	(??_rand+0+0),c,w
  2643  000C72  241B               	movwf	((c:_seed)),c
  2644  000C74  6E58               	movlw	0
  2645  000C76  0E00               	addwfc	(??_rand+0+1),c,w
  2646  000C78  201C               	movwf	1+((c:_seed)),c
  2647  000C7A  6E59               	
  2648                           	movlw	0
  2649  000C7C  0E00               	addwfc	(??_rand+0+2),c,w
  2650  000C7E  201D               	movwf	2+((c:_seed)),c
  2651  000C80  6E5A               	
  2652                           	movlw	0
  2653  000C82  0E00               	addwfc	(??_rand+0+3),c,w
  2654  000C84  201E               	movwf	3+((c:_seed)),c
  2655  000C86  6E5B               	
  2656                           	movlw	0
  2657  000C88  0E00               	addwfc	(??_rand+0+4),c,w
  2658  000C8A  201F               	movwf	4+((c:_seed)),c
  2659  000C8C  6E5C               	
  2660                           	movlw	0
  2661  000C8E  0E00               	addwfc	(??_rand+0+5),c,w
  2662  000C90  2020               	movwf	5+((c:_seed)),c
  2663  000C92  6E5D               	
  2664                           	movlw	0
  2665  000C94  0E00               	addwfc	(??_rand+0+6),c,w
  2666  000C96  2021               	movwf	6+((c:_seed)),c
  2667  000C98  6E5E               	
  2668                           	movlw	0
  2669  000C9A  0E00               	addwfc	(??_rand+0+7),c,w
  2670  000C9C  2022               	movwf	7+((c:_seed)),c
  2671  000C9E  6E5F               	line	23
  2672                           	
  2673                           l1311:
  2674  000CA0                     	movff	(c:_seed),??_rand+0+0
  2675  000CA0  C058  F01B         	movff	(c:_seed+1),??_rand+0+0+1
  2676  000CA4  C059  F01C         	movff	(c:_seed+2),??_rand+0+0+2
  2677  000CA8  C05A  F01D         	movff	(c:_seed+3),??_rand+0+0+3
  2678  000CAC  C05B  F01E         	movff	(c:_seed+4),??_rand+0+0+4
  2679  000CB0  C05C  F01F         	movff	(c:_seed+5),??_rand+0+0+5
  2680  000CB4  C05D  F020         	movff	(c:_seed+6),??_rand+0+0+6
  2681  000CB8  C05E  F021         	movff	(c:_seed+7),??_rand+0+0+7
  2682  000CBC  C05F  F022         	movlw	07h+1
  2683  000CC0  0E08               	goto	u420
  2684  000CC2  EF6C  F006         u425:
  2685  000CC6                     	bcf	status,0
  2686  000CC6  90D8               	rrcf	(??_rand+0+7),c
  2687  000CC8  3222               	rrcf	(??_rand+0+6),c
  2688  000CCA  3221               	rrcf	(??_rand+0+5),c
  2689  000CCC  3220               	rrcf	(??_rand+0+4),c
  2690  000CCE  321F               	rrcf	(??_rand+0+3),c
  2691  000CD0  321E               	rrcf	(??_rand+0+2),c
  2692  000CD2  321D               	rrcf	(??_rand+0+1),c
  2693  000CD4  321C               	rrcf	(??_rand+0+0),c
  2694  000CD6  321B               u420:
  2695  000CD8                     	decfsz	wreg
  2696  000CD8  2EE8               	goto	u425
  2697  000CDA  EF63  F006         	movff	??_rand+0+0,(c:?_rand)
  2698  000CDE  C01B  F019         	movff	??_rand+0+2,(c:?_rand+1)
  2699  000CE2  C01D  F01A         	goto	l867
  2700  000CE6  EF75  F006         	
  2701                           l1313:
  2702  000CEA                     	line	27
  2703                           	
  2704                           l867:
  2705  000CEA                     	return	;funcret
  2706  000CEA  0012               	opt stack 0
  2707                           GLOBAL	__end_of_rand
  2708                           	__end_of_rand:
  2709  000CEC                     	signat	_rand,90
  2710                           	global	___omul
  2711                           
  2712 ;; *************** function ___omul *****************
  2713 ;; Defined at:
  2714 ;;		line 91 in file "D:\Microchip\xc8\v2.00\pic\sources\c99\common\Umul64.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  multiplier      8    0[COMRAM] unsigned long long 
  2717 ;;  multiplicand    8    8[COMRAM] unsigned long long 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  product         8   16[COMRAM] unsigned long long 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  8    0[COMRAM] unsigned long long 
  2722 ;; Registers used:
  2723 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2729 ;;      Params:        16       0       0       0       0       0       0       0       0
  2730 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2732 ;;      Totals:        24       0       0       0       0       0       0       0       0
  2733 ;;Total ram usage:       24 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; This function calls:
  2736 ;;		Nothing
  2737 ;; This function is called by:
  2738 ;;		_rand
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           psect	text5,class=CODE,space=0,reloc=2,group=1
  2742                           	file	"D:\Microchip\xc8\v2.00\pic\sources\c99\common\Umul64.c"
  2743                           	line	91
  2744                           global __ptext5
  2745                           __ptext5:
  2746  000E7E                     psect	text5
  2747                           	file	"D:\Microchip\xc8\v2.00\pic\sources\c99\common\Umul64.c"
  2748                           	line	91
  2749                           	global	__size_of___omul
  2750                           	__size_of___omul	equ	__end_of___omul-___omul
  2751  0000                     	
  2752                           ___omul:
  2753  000E7E                     ;incstack = 0
  2754                           	opt	stack 27
  2755                           	line	333
  2756                           	
  2757                           l1283:
  2758  000E7E                     	lfsr	2,(___omul@product)
  2759  000E7E  EE20  F011         	movlw	8-1
  2760  000E82  0E07               u371:
  2761  000E84                     	clrf	postinc2
  2762  000E84  6ADE               	decf	wreg
  2763  000E86  06E8               	bc	u371
  2764  000E88  E2FD               	goto	l1285
  2765  000E8A  EF47  F007         	line	334
  2766                           	
  2767                           l203:
  2768  000E8E                     	line	335
  2769                           	
  2770                           l1285:
  2771  000E8E                     	
  2772                           	btfss	((c:___omul@multiplier)),c,(0)&7
  2773  000E8E  A001               	goto	u381
  2774  000E90  EF4C  F007         	goto	u380
  2775  000E94  EF4E  F007         u381:
  2776  000E98                     	goto	l1289
  2777  000E98  EF60  F007         u380:
  2778  000E9C                     	line	336
  2779                           	
  2780                           l1287:
  2781  000E9C                     	movf	((c:___omul@multiplicand)),c,w
  2782  000E9C  5009               	addwf	((c:___omul@product)),c
  2783  000E9E  2611               	movf	((c:___omul@multiplicand+1)),c,w
  2784  000EA0  500A               	addwfc	((c:___omul@product+1)),c
  2785  000EA2  2212               	movf	((c:___omul@multiplicand+2)),c,w
  2786  000EA4  500B               	addwfc	((c:___omul@product+2)),c
  2787  000EA6  2213               	movf	((c:___omul@multiplicand+3)),c,w
  2788  000EA8  500C               	addwfc	((c:___omul@product+3)),c
  2789  000EAA  2214               	movf	((c:___omul@multiplicand+4)),c,w
  2790  000EAC  500D               	addwfc	((c:___omul@product+4)),c
  2791  000EAE  2215               	movf	((c:___omul@multiplicand+5)),c,w
  2792  000EB0  500E               	addwfc	((c:___omul@product+5)),c
  2793  000EB2  2216               	movf	((c:___omul@multiplicand+6)),c,w
  2794  000EB4  500F               	addwfc	((c:___omul@product+6)),c
  2795  000EB6  2217               	movf	((c:___omul@multiplicand+7)),c,w
  2796  000EB8  5010               	addwfc	((c:___omul@product+7)),c
  2797  000EBA  2218               	goto	l1289
  2798  000EBC  EF60  F007         	
  2799                           l204:
  2800  000EC0                     	line	337
  2801                           	
  2802                           l1289:
  2803  000EC0                     	bcf	status,0
  2804  000EC0  90D8               	rlcf	((c:___omul@multiplicand)),c
  2805  000EC2  3609               	rlcf	((c:___omul@multiplicand+1)),c
  2806  000EC4  360A               	rlcf	((c:___omul@multiplicand+2)),c
  2807  000EC6  360B               	rlcf	((c:___omul@multiplicand+3)),c
  2808  000EC8  360C               	rlcf	((c:___omul@multiplicand+4)),c
  2809  000ECA  360D               	rlcf	((c:___omul@multiplicand+5)),c
  2810  000ECC  360E               	rlcf	((c:___omul@multiplicand+6)),c
  2811  000ECE  360F               	rlcf	((c:___omul@multiplicand+7)),c
  2812  000ED0  3610               	line	338
  2813                           	
  2814                           l1291:
  2815  000ED2                     	bcf	status,0
  2816  000ED2  90D8               	rrcf	((c:___omul@multiplier+7)),c
  2817  000ED4  3208               	rrcf	((c:___omul@multiplier+6)),c
  2818  000ED6  3207               	rrcf	((c:___omul@multiplier+5)),c
  2819  000ED8  3206               	rrcf	((c:___omul@multiplier+4)),c
  2820  000EDA  3205               	rrcf	((c:___omul@multiplier+3)),c
  2821  000EDC  3204               	rrcf	((c:___omul@multiplier+2)),c
  2822  000EDE  3203               	rrcf	((c:___omul@multiplier+1)),c
  2823  000EE0  3202               	rrcf	((c:___omul@multiplier)),c
  2824  000EE2  3201               	line	339
  2825                           	movf	((c:___omul@multiplier)),c,w
  2826  000EE4  5001               iorwf	((c:___omul@multiplier+1)),c,w
  2827  000EE6  1002               iorwf	((c:___omul@multiplier+2)),c,w
  2828  000EE8  1003               iorwf	((c:___omul@multiplier+3)),c,w
  2829  000EEA  1004               iorwf	((c:___omul@multiplier+4)),c,w
  2830  000EEC  1005               iorwf	((c:___omul@multiplier+5)),c,w
  2831  000EEE  1006               iorwf	((c:___omul@multiplier+6)),c,w
  2832  000EF0  1007               iorwf	((c:___omul@multiplier+7)),c,w
  2833  000EF2  1008               	btfss	status,2
  2834  000EF4  A4D8               	goto	u391
  2835  000EF6  EF7F  F007         	goto	u390
  2836  000EFA  EF81  F007         
  2837                           u391:
  2838  000EFE                     	goto	l1285
  2839  000EFE  EF47  F007         u390:
  2840  000F02                     	
  2841                           l205:
  2842  000F02                     	line	353
  2843                           	movff	(c:___omul@product),(c:?___omul)
  2844  000F02  C011  F001         	movff	(c:___omul@product+1),(c:?___omul+1)
  2845  000F06  C012  F002         	movff	(c:___omul@product+2),(c:?___omul+2)
  2846  000F0A  C013  F003         	movff	(c:___omul@product+3),(c:?___omul+3)
  2847  000F0E  C014  F004         	movff	(c:___omul@product+4),(c:?___omul+4)
  2848  000F12  C015  F005         	movff	(c:___omul@product+5),(c:?___omul+5)
  2849  000F16  C016  F006         	movff	(c:___omul@product+6),(c:?___omul+6)
  2850  000F1A  C017  F007         	movff	(c:___omul@product+7),(c:?___omul+7)
  2851  000F1E  C018  F008         	line	354
  2852                           	
  2853                           l206:
  2854  000F22                     	return	;funcret
  2855  000F22  0012               	opt stack 0
  2856                           GLOBAL	__end_of___omul
  2857                           	__end_of___omul:
  2858  000F24                     	signat	___omul,8319
  2859                           	global	_MoveLCD
  2860                           
  2861 ;; *************** function _MoveLCD *****************
  2862 ;; Defined at:
  2863 ;;		line 68 in file "lcd_utils.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  dir             1    wreg     unsigned char 
  2866 ;;  inc             1    2[COMRAM] unsigned char 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  dir             1    6[COMRAM] unsigned char 
  2869 ;;  i               2    9[COMRAM] int 
  2870 ;;  i               2    7[COMRAM] int 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2880 ;;      Params:         1       0       0       0       0       0       0       0       0
  2881 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2882 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2883 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2884 ;;Total ram usage:        9 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    1
  2887 ;; This function calls:
  2888 ;;		_LCDcommand
  2889 ;; This function is called by:
  2890 ;;		_move_stage
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           psect	text6,class=CODE,space=0,reloc=2,group=0
  2894                           	file	"lcd_utils.c"
  2895                           	line	68
  2896                           global __ptext6
  2897                           __ptext6:
  2898  000CEC                     psect	text6
  2899                           	file	"lcd_utils.c"
  2900                           	line	68
  2901                           	global	__size_of_MoveLCD
  2902                           	__size_of_MoveLCD	equ	__end_of_MoveLCD-_MoveLCD
  2903  0000                     	
  2904                           _MoveLCD:
  2905  000CEC                     ;incstack = 0
  2906                           	opt	stack 28
  2907                           ;MoveLCD@dir stored from wreg
  2908                           	movwf	((c:MoveLCD@dir)),c
  2909  000CEC  6E07               	line	69
  2910                           	
  2911                           l1331:
  2912  000CEE                     ;lcd_utils.c: 69:     LCDcommand(0b00000111);
  2913                           	movlw	(07h)&0ffh
  2914  000CEE  0E07               	
  2915                           	call	_LCDcommand
  2916  000CF0  ECA0  F009         	line	70
  2917                           	
  2918                           l1333:
  2919  000CF4                     ;lcd_utils.c: 70:     if(dir==0){
  2920                           	movf	((c:MoveLCD@dir)),c,w
  2921  000CF4  5007               	btfss	status,2
  2922  000CF6  A4D8               	goto	u451
  2923  000CF8  EF80  F006         	goto	u450
  2924  000CFC  EF82  F006         u451:
  2925  000D00                     	goto	l1345
  2926  000D00  EFB1  F006         u450:
  2927  000D04                     	line	71
  2928                           	
  2929                           l1335:
  2930  000D04                     ;lcd_utils.c: 71:         for(int i = 0; i < inc; i++){
  2931                           	movlw	high(0)
  2932  000D04  0E00               	movwf	((c:MoveLCD@i+1)),c
  2933  000D06  6E09               	movlw	low(0)
  2934  000D08  0E00               	movwf	((c:MoveLCD@i)),c
  2935  000D0A  6E08               	goto	l1343
  2936  000D0C  EF9B  F006         	
  2937                           l164:
  2938  000D10                     	line	72
  2939                           	
  2940                           l1337:
  2941  000D10                     ;lcd_utils.c: 72:         LCDcommand(0b00011000);
  2942                           	movlw	(018h)&0ffh
  2943  000D10  0E18               	
  2944                           	call	_LCDcommand
  2945  000D12  ECA0  F009         	line	73
  2946                           	
  2947                           l1339:
  2948  000D16                     ;lcd_utils.c: 73:         _delay((unsigned long)((200)*(8000000/4000.0)));
  2949                           	opt asmopt_push
  2950                           opt asmopt_off
  2951                           movlw  3
  2952  000D16  0E03               movwf	(??_MoveLCD+0+0+1)&0ffh,c,f
  2953  000D18  6E05               movlw	8
  2954  000D1A  0E08               movwf	(??_MoveLCD+0+0)&0ffh,c,f
  2955  000D1C  6E04               	movlw	119
  2956  000D1E  0E77               u787:
  2957  000D20                     decfsz	wreg,f
  2958  000D20  2EE8               	bra	u787
  2959  000D22  D7FE               	decfsz	(??_MoveLCD+0+0)&0ffh,c,f
  2960  000D24  2E04               	bra	u787
  2961  000D26  D7FC               	decfsz	(??_MoveLCD+0+0+1)&0ffh,c,f
  2962  000D28  2E05               	bra	u787
  2963  000D2A  D7FA               	nop
  2964  000D2C  F000               opt asmopt_pop
  2965                           
  2966                           	line	74
  2967                           	
  2968                           l1341:
  2969  000D2E                     ;lcd_utils.c: 74:         }
  2970                           	infsnz	((c:MoveLCD@i)),c
  2971  000D2E  4A08               	incf	((c:MoveLCD@i+1)),c
  2972  000D30  2A09               	goto	l1343
  2973  000D32  EF9B  F006         	
  2974                           l163:
  2975  000D36                     	
  2976                           l1343:
  2977  000D36                     	movf	((c:MoveLCD@inc)),c,w
  2978  000D36  5003               	movwf	(??_MoveLCD+0+0)&0ffh,c
  2979  000D38  6E04               	clrf	(??_MoveLCD+0+0+1)&0ffh,c
  2980  000D3A  6A05               
  2981                           		movf	(??_MoveLCD+0+0),c,w
  2982  000D3C  5004               	subwf	((c:MoveLCD@i)),c,w
  2983  000D3E  5C08               	movf	((c:MoveLCD@i+1)),c,w
  2984  000D40  5009               	xorlw	80h
  2985  000D42  0A80               	movwf	(??_MoveLCD+2+0)&0ffh,c
  2986  000D44  6E06               	movf	(??_MoveLCD+0+1),c,w
  2987  000D46  5005               	xorlw	80h
  2988  000D48  0A80               	subwfb	(??_MoveLCD+2+0)&0ffh,c,w
  2989  000D4A  5806               	btfss	status,0
  2990  000D4C  A0D8               	goto	u461
  2991  000D4E  EFAB  F006         	goto	u460
  2992  000D52  EFAD  F006         
  2993                           u461:
  2994  000D56                     	goto	l1337
  2995  000D56  EF88  F006         u460:
  2996  000D5A                     	goto	l1355
  2997  000D5A  EFE0  F006         	
  2998                           l165:
  2999  000D5E                     	line	75
  3000                           ;lcd_utils.c: 75:     }
  3001                           	goto	l1355
  3002  000D5E  EFE0  F006         	line	76
  3003                           ;lcd_utils.c: 76:     else{
  3004                           	
  3005                           l162:
  3006  000D62                     	line	77
  3007                           	
  3008                           l1345:
  3009  000D62                     ;lcd_utils.c: 77:         for(int i = 0; i < inc; i++){
  3010                           	movlw	high(0)
  3011  000D62  0E00               	movwf	((c:MoveLCD@i_351+1)),c
  3012  000D64  6E0B               	movlw	low(0)
  3013  000D66  0E00               	movwf	((c:MoveLCD@i_351)),c
  3014  000D68  6E0A               	goto	l1353
  3015  000D6A  EFCA  F006         	
  3016                           l168:
  3017  000D6E                     	line	78
  3018                           	
  3019                           l1347:
  3020  000D6E                     ;lcd_utils.c: 78:             LCDcommand(0b00011100);
  3021                           	movlw	(01Ch)&0ffh
  3022  000D6E  0E1C               	
  3023                           	call	_LCDcommand
  3024  000D70  ECA0  F009         	line	79
  3025                           	
  3026                           l1349:
  3027  000D74                     ;lcd_utils.c: 79:             _delay((unsigned long)((200)*(8000000/4000.0)));
  3028                           	opt asmopt_push
  3029                           opt asmopt_off
  3030                           movlw  3
  3031  000D74  0E03               movwf	(??_MoveLCD+0+0+1)&0ffh,c,f
  3032  000D76  6E05               movlw	8
  3033  000D78  0E08               movwf	(??_MoveLCD+0+0)&0ffh,c,f
  3034  000D7A  6E04               	movlw	119
  3035  000D7C  0E77               u797:
  3036  000D7E                     decfsz	wreg,f
  3037  000D7E  2EE8               	bra	u797
  3038  000D80  D7FE               	decfsz	(??_MoveLCD+0+0)&0ffh,c,f
  3039  000D82  2E04               	bra	u797
  3040  000D84  D7FC               	decfsz	(??_MoveLCD+0+0+1)&0ffh,c,f
  3041  000D86  2E05               	bra	u797
  3042  000D88  D7FA               	nop
  3043  000D8A  F000               opt asmopt_pop
  3044                           
  3045                           	line	80
  3046                           	
  3047                           l1351:
  3048  000D8C                     ;lcd_utils.c: 80:         }
  3049                           	infsnz	((c:MoveLCD@i_351)),c
  3050  000D8C  4A0A               	incf	((c:MoveLCD@i_351+1)),c
  3051  000D8E  2A0B               	goto	l1353
  3052  000D90  EFCA  F006         	
  3053                           l167:
  3054  000D94                     	
  3055                           l1353:
  3056  000D94                     	movf	((c:MoveLCD@inc)),c,w
  3057  000D94  5003               	movwf	(??_MoveLCD+0+0)&0ffh,c
  3058  000D96  6E04               	clrf	(??_MoveLCD+0+0+1)&0ffh,c
  3059  000D98  6A05               
  3060                           		movf	(??_MoveLCD+0+0),c,w
  3061  000D9A  5004               	subwf	((c:MoveLCD@i_351)),c,w
  3062  000D9C  5C0A               	movf	((c:MoveLCD@i_351+1)),c,w
  3063  000D9E  500B               	xorlw	80h
  3064  000DA0  0A80               	movwf	(??_MoveLCD+2+0)&0ffh,c
  3065  000DA2  6E06               	movf	(??_MoveLCD+0+1),c,w
  3066  000DA4  5005               	xorlw	80h
  3067  000DA6  0A80               	subwfb	(??_MoveLCD+2+0)&0ffh,c,w
  3068  000DA8  5806               	btfss	status,0
  3069  000DAA  A0D8               	goto	u471
  3070  000DAC  EFDA  F006         	goto	u470
  3071  000DB0  EFDC  F006         
  3072                           u471:
  3073  000DB4                     	goto	l1347
  3074  000DB4  EFB7  F006         u470:
  3075  000DB8                     	goto	l1355
  3076  000DB8  EFE0  F006         	
  3077                           l169:
  3078  000DBC                     	goto	l1355
  3079  000DBC  EFE0  F006         	line	81
  3080                           ;lcd_utils.c: 81:     }
  3081                           	
  3082                           l166:
  3083  000DC0                     	line	82
  3084                           	
  3085                           l1355:
  3086  000DC0                     ;lcd_utils.c: 82:     LCDcommand(0b00000110);
  3087                           	movlw	(06h)&0ffh
  3088  000DC0  0E06               	
  3089                           	call	_LCDcommand
  3090  000DC2  ECA0  F009         	line	83
  3091                           	
  3092                           l170:
  3093  000DC6                     	return	;funcret
  3094  000DC6  0012               	opt stack 0
  3095                           GLOBAL	__end_of_MoveLCD
  3096                           	__end_of_MoveLCD:
  3097  000DC8                     	signat	_MoveLCD,8313
  3098                           	global	_move_lock
  3099                           
  3100 ;; *************** function _move_lock *****************
  3101 ;; Defined at:
  3102 ;;		line 155 in file "main_LCD_Disp_Chars.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;		None
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;		None
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, status,0, cstack
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3116 ;;      Params:         0       0       0       0       0       0       0       0       0
  3117 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3118 ;;      Temps:          7       0       0       0       0       0       0       0       0
  3119 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3120 ;;Total ram usage:        7 bytes
  3121 ;; Hardware stack levels used:    1
  3122 ;; Hardware stack levels required when called:    2
  3123 ;; This function calls:
  3124 ;;		_LCDchar
  3125 ;;		_MoveCursor
  3126 ;; This function is called by:
  3127 ;;		_main
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           psect	text7,class=CODE,space=0,reloc=2,group=0
  3131                           	file	"main_LCD_Disp_Chars.c"
  3132                           	line	155
  3133                           global __ptext7
  3134                           __ptext7:
  3135  000B0E                     psect	text7
  3136                           	file	"main_LCD_Disp_Chars.c"
  3137                           	line	155
  3138                           	global	__size_of_move_lock
  3139                           	__size_of_move_lock	equ	__end_of_move_lock-_move_lock
  3140  0000                     	
  3141                           _move_lock:
  3142  000B0E                     ;incstack = 0
  3143                           	opt	stack 28
  3144                           	line	156
  3145                           	
  3146                           l1409:
  3147  000B0E                     ;main_LCD_Disp_Chars.c: 156:     if(PORTAbits.RA0 == 1 & line == 2){
  3148                           	btfss	((c:3968)),c,0	;volatile
  3149  000B0E  A080               	goto	u521
  3150  000B10  EF8C  F005         	goto	u520
  3151  000B14  EF8E  F005         u521:
  3152  000B18                     	goto	l1419
  3153  000B18  EFA2  F005         u520:
  3154  000B1C                     	
  3155                           l1411:
  3156  000B1C                     		movlw	2
  3157  000B1C  0E02               	xorwf	((c:_line)),c,w
  3158  000B1E  1843               	btfss	status,2
  3159  000B20  A4D8               	goto	u531
  3160  000B22  EF95  F005         	goto	u530
  3161  000B26  EF97  F005         
  3162                           u531:
  3163  000B2A                     	goto	l1419
  3164  000B2A  EFA2  F005         u530:
  3165  000B2E                     	line	157
  3166                           	
  3167                           l1413:
  3168  000B2E                     ;main_LCD_Disp_Chars.c: 157:         MoveCursor(pos, 2);
  3169                           	movlw	low(02h)
  3170  000B2E  0E02               	movwf	((c:MoveCursor@y)),c
  3171  000B30  6E03               	movf	((c:_pos)),c,w
  3172  000B32  5044               	
  3173                           	call	_MoveCursor
  3174  000B34  ECC4  F008         	line	158
  3175                           	
  3176                           l1415:
  3177  000B38                     ;main_LCD_Disp_Chars.c: 158:         LCDchar(' ');
  3178                           	movlw	(020h)&0ffh
  3179  000B38  0E20               	
  3180                           	call	_LCDchar
  3181  000B3A  ECC9  F009         	line	159
  3182                           	
  3183                           l1417:
  3184  000B3E                     ;main_LCD_Disp_Chars.c: 159:         line--;
  3185                           	decf	((c:_line)),c
  3186  000B3E  0643               	goto	l1419
  3187  000B40  EFA2  F005         	line	160
  3188                           ;main_LCD_Disp_Chars.c: 160:     }
  3189                           	
  3190                           l95:
  3191  000B44                     	line	161
  3192                           	
  3193                           l1419:
  3194  000B44                     ;main_LCD_Disp_Chars.c: 161:     if(PORTAbits.RA1 == 1 & line == 1){
  3195                           	btfss	((c:3968)),c,1	;volatile
  3196  000B44  A280               	goto	u541
  3197  000B46  EFA7  F005         	goto	u540
  3198  000B4A  EFA9  F005         u541:
  3199  000B4E                     	goto	l1429
  3200  000B4E  EFBC  F005         u540:
  3201  000B52                     	
  3202                           l1421:
  3203  000B52                     		decf	((c:_line)),c,w
  3204  000B52  0443               	btfss	status,2
  3205  000B54  A4D8               	goto	u551
  3206  000B56  EFAF  F005         	goto	u550
  3207  000B5A  EFB1  F005         
  3208                           u551:
  3209  000B5E                     	goto	l1429
  3210  000B5E  EFBC  F005         u550:
  3211  000B62                     	line	162
  3212                           	
  3213                           l1423:
  3214  000B62                     ;main_LCD_Disp_Chars.c: 162:         MoveCursor(pos, 1);
  3215                           	movlw	low(01h)
  3216  000B62  0E01               	movwf	((c:MoveCursor@y)),c
  3217  000B64  6E03               	movf	((c:_pos)),c,w
  3218  000B66  5044               	
  3219                           	call	_MoveCursor
  3220  000B68  ECC4  F008         	line	163
  3221                           	
  3222                           l1425:
  3223  000B6C                     ;main_LCD_Disp_Chars.c: 163:         LCDchar(' ');
  3224                           	movlw	(020h)&0ffh
  3225  000B6C  0E20               	
  3226                           	call	_LCDchar
  3227  000B6E  ECC9  F009         	line	164
  3228                           	
  3229                           l1427:
  3230  000B72                     ;main_LCD_Disp_Chars.c: 164:         line++;
  3231                           	incf	((c:_line)),c
  3232  000B72  2A43               	goto	l1429
  3233  000B74  EFBC  F005         	line	165
  3234                           ;main_LCD_Disp_Chars.c: 165:     }
  3235                           	
  3236                           l96:
  3237  000B78                     	line	166
  3238                           	
  3239                           l1429:
  3240  000B78                     ;main_LCD_Disp_Chars.c: 166:     if(PORTAbits.RA2 == 1 & pos < (key_ - 1)){
  3241                           	btfss	((c:3968)),c,2	;volatile
  3242  000B78  A480               	goto	u561
  3243  000B7A  EFC1  F005         	goto	u560
  3244  000B7E  EFC3  F005         u561:
  3245  000B82                     	goto	l1439
  3246  000B82  EFEB  F005         u560:
  3247  000B86                     	
  3248                           l1431:
  3249  000B86                     	movlw	low(-1)
  3250  000B86  0EFF               	movwf	(??_move_lock+0+0)&0ffh,c
  3251  000B88  6E07               	movlw	high(-1)
  3252  000B8A  0EFF               	movwf	1+(??_move_lock+0+0)&0ffh,c
  3253  000B8C  6E08               	movf	((c:_key_)),c,w
  3254  000B8E  5042               	movwf	(??_move_lock+2+0)&0ffh,c
  3255  000B90  6E09               	clrf	(??_move_lock+2+0+1)&0ffh,c
  3256  000B92  6A0A               
  3257                           	movf	(??_move_lock+0+0),c,w
  3258  000B94  5007               	addwf	(??_move_lock+2+0),c
  3259  000B96  2609               	movf	(??_move_lock+0+1),c,w
  3260  000B98  5008               	addwfc	(??_move_lock+2+1),c
  3261  000B9A  220A               	movf	((c:_pos)),c,w
  3262  000B9C  5044               	movwf	(??_move_lock+4+0)&0ffh,c
  3263  000B9E  6E0B               	clrf	(??_move_lock+4+0+1)&0ffh,c
  3264  000BA0  6A0C               
  3265                           		movf	(??_move_lock+2+0),c,w
  3266  000BA2  5009               	subwf	(??_move_lock+4+0),c,w
  3267  000BA4  5C0B               	movf	(??_move_lock+4+1),c,w
  3268  000BA6  500C               	xorlw	80h
  3269  000BA8  0A80               	movwf	(??_move_lock+6+0)&0ffh,c
  3270  000BAA  6E0D               	movf	(??_move_lock+2+1),c,w
  3271  000BAC  500A               	xorlw	80h
  3272  000BAE  0A80               	subwfb	(??_move_lock+6+0)&0ffh,c,w
  3273  000BB0  580D               	btfsc	status,0
  3274  000BB2  B0D8               	goto	u571
  3275  000BB4  EFDE  F005         	goto	u570
  3276  000BB8  EFE0  F005         
  3277                           u571:
  3278  000BBC                     	goto	l1439
  3279  000BBC  EFEB  F005         u570:
  3280  000BC0                     	line	167
  3281                           	
  3282                           l1433:
  3283  000BC0                     ;main_LCD_Disp_Chars.c: 167:         MoveCursor(pos, line);
  3284                           	movff	(c:_line),(c:MoveCursor@y)
  3285  000BC0  C043  F003         	movf	((c:_pos)),c,w
  3286  000BC4  5044               	
  3287                           	call	_MoveCursor
  3288  000BC6  ECC4  F008         	line	168
  3289                           	
  3290                           l1435:
  3291  000BCA                     ;main_LCD_Disp_Chars.c: 168:         LCDchar(' ');
  3292                           	movlw	(020h)&0ffh
  3293  000BCA  0E20               	
  3294                           	call	_LCDchar
  3295  000BCC  ECC9  F009         	line	169
  3296                           	
  3297                           l1437:
  3298  000BD0                     ;main_LCD_Disp_Chars.c: 169:         pos++;
  3299                           	incf	((c:_pos)),c
  3300  000BD0  2A44               	goto	l1439
  3301  000BD2  EFEB  F005         	line	170
  3302                           ;main_LCD_Disp_Chars.c: 170:     }
  3303                           	
  3304                           l97:
  3305  000BD6                     	line	171
  3306                           	
  3307                           l1439:
  3308  000BD6                     ;main_LCD_Disp_Chars.c: 171:     if(PORTAbits.RA3 == 1 & pos > 1){
  3309                           	btfss	((c:3968)),c,3	;volatile
  3310  000BD6  A680               	goto	u581
  3311  000BD8  EFF0  F005         	goto	u580
  3312  000BDC  EFF2  F005         u581:
  3313  000BE0                     	goto	l99
  3314  000BE0  EF05  F006         u580:
  3315  000BE4                     	
  3316                           l1441:
  3317  000BE4                     		movlw	02h-1
  3318  000BE4  0E01               	cpfsgt	((c:_pos)),c
  3319  000BE6  6444               	goto	u591
  3320  000BE8  EFF8  F005         	goto	u590
  3321  000BEC  EFFA  F005         
  3322                           u591:
  3323  000BF0                     	goto	l99
  3324  000BF0  EF05  F006         u590:
  3325  000BF4                     	line	172
  3326                           	
  3327                           l1443:
  3328  000BF4                     ;main_LCD_Disp_Chars.c: 172:         MoveCursor(pos, line);
  3329                           	movff	(c:_line),(c:MoveCursor@y)
  3330  000BF4  C043  F003         	movf	((c:_pos)),c,w
  3331  000BF8  5044               	
  3332                           	call	_MoveCursor
  3333  000BFA  ECC4  F008         	line	173
  3334                           	
  3335                           l1445:
  3336  000BFE                     ;main_LCD_Disp_Chars.c: 173:         LCDchar(' ');
  3337                           	movlw	(020h)&0ffh
  3338  000BFE  0E20               	
  3339                           	call	_LCDchar
  3340  000C00  ECC9  F009         	line	174
  3341                           	
  3342                           l1447:
  3343  000C04                     ;main_LCD_Disp_Chars.c: 174:         pos--;
  3344                           	decf	((c:_pos)),c
  3345  000C04  0644               	goto	l99
  3346  000C06  EF05  F006         	line	175
  3347                           ;main_LCD_Disp_Chars.c: 175:     }
  3348                           	
  3349                           l98:
  3350  000C0A                     	line	176
  3351                           	
  3352                           l99:
  3353  000C0A                     	return	;funcret
  3354  000C0A  0012               	opt stack 0
  3355                           GLOBAL	__end_of_move_lock
  3356                           	__end_of_move_lock:
  3357  000C0C                     	signat	_move_lock,89
  3358                           	global	_lock_sprite_switch
  3359                           
  3360 ;; *************** function _lock_sprite_switch *****************
  3361 ;; Defined at:
  3362 ;;		line 191 in file "main_LCD_Disp_Chars.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;		None
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, status,0
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0
  3377 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3378 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3379 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3380 ;;Total ram usage:        2 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_main
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           psect	text8,class=CODE,space=0,reloc=2,group=0
  3389                           	line	191
  3390                           global __ptext8
  3391                           __ptext8:
  3392  00106C                     psect	text8
  3393                           	file	"main_LCD_Disp_Chars.c"
  3394                           	line	191
  3395                           	global	__size_of_lock_sprite_switch
  3396                           	__size_of_lock_sprite_switch	equ	__end_of_lock_sprite_switch-_lock_sprite_switch
  3397  0000                     	
  3398                           _lock_sprite_switch:
  3399  00106C                     ;incstack = 0
  3400                           	opt	stack 30
  3401                           	line	192
  3402                           	
  3403                           l1449:
  3404  00106C                     ;main_LCD_Disp_Chars.c: 192:     switch (icon){
  3405                           	goto	l1461
  3406  00106C  EF4C  F008         	line	193
  3407                           ;main_LCD_Disp_Chars.c: 193:         case 0 :
  3408                           	
  3409                           l108:
  3410  001070                     	line	194
  3411                           	
  3412                           l1451:
  3413  001070                     ;main_LCD_Disp_Chars.c: 194:             icon = 1;
  3414                           	movlw	low(01h)
  3415  001070  0E01               	movwf	((c:_icon)),c
  3416  001072  6E57               	line	195
  3417                           ;main_LCD_Disp_Chars.c: 195:             break;
  3418                           	goto	l114
  3419  001074  EF69  F008         	line	196
  3420                           ;main_LCD_Disp_Chars.c: 196:         case 1 :
  3421                           	
  3422                           l110:
  3423  001078                     	line	197
  3424                           	
  3425                           l1453:
  3426  001078                     ;main_LCD_Disp_Chars.c: 197:             icon = 2;
  3427                           	movlw	low(02h)
  3428  001078  0E02               	movwf	((c:_icon)),c
  3429  00107A  6E57               	line	198
  3430                           ;main_LCD_Disp_Chars.c: 198:             break;
  3431                           	goto	l114
  3432  00107C  EF69  F008         	line	199
  3433                           ;main_LCD_Disp_Chars.c: 199:         case 2 :
  3434                           	
  3435                           l111:
  3436  001080                     	line	200
  3437                           	
  3438                           l1455:
  3439  001080                     ;main_LCD_Disp_Chars.c: 200:             icon = 3;
  3440                           	movlw	low(03h)
  3441  001080  0E03               	movwf	((c:_icon)),c
  3442  001082  6E57               	line	201
  3443                           ;main_LCD_Disp_Chars.c: 201:             break;
  3444                           	goto	l114
  3445  001084  EF69  F008         	line	202
  3446                           ;main_LCD_Disp_Chars.c: 202:         case 3 :
  3447                           	
  3448                           l112:
  3449  001088                     	line	203
  3450                           	
  3451                           l1457:
  3452  001088                     ;main_LCD_Disp_Chars.c: 203:             icon = 0;
  3453                           	movlw	low(0)
  3454  001088  0E00               	movwf	((c:_icon)),c
  3455  00108A  6E57               	line	204
  3456                           ;main_LCD_Disp_Chars.c: 204:             break;
  3457                           	goto	l114
  3458  00108C  EF69  F008         	line	205
  3459                           ;main_LCD_Disp_Chars.c: 205:         default:
  3460                           	
  3461                           l113:
  3462  001090                     	line	206
  3463                           ;main_LCD_Disp_Chars.c: 206:             break;
  3464                           	goto	l114
  3465  001090  EF69  F008         	line	207
  3466                           	
  3467                           l1459:
  3468  001094                     ;main_LCD_Disp_Chars.c: 207:     }
  3469                           	goto	l114
  3470  001094  EF69  F008         	
  3471                           l107:
  3472  001098                     	
  3473                           l1461:
  3474  001098                     	movf	((c:_icon)),c,w
  3475  001098  5057               	movwf	(??_lock_sprite_switch+0+0)&0ffh,c
  3476  00109A  6E01               	clrf	(??_lock_sprite_switch+0+0+1)&0ffh,c
  3477  00109C  6A02               
  3478                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3479                           ; Switch size 1, requested type "space"
  3480                           ; Number of cases is 1, Range of values is 0 to 0
  3481                           ; switch strategies available:
  3482                           ; Name         Instructions Cycles
  3483                           ; simple_byte            4     3 (average)
  3484                           ;	Chosen strategy is simple_byte
  3485                           
  3486                           	movf ??_lock_sprite_switch+0+1,c,w
  3487  00109E  5002               	xorlw	0^0	; case 0
  3488  0010A0  0A00               	skipnz
  3489  0010A2  B4D8               	goto	l1649
  3490  0010A4  EF56  F008         	goto	l114
  3491  0010A8  EF69  F008         	
  3492                           l1649:
  3493  0010AC                     ; Switch size 1, requested type "space"
  3494                           ; Number of cases is 4, Range of values is 0 to 3
  3495                           ; switch strategies available:
  3496                           ; Name         Instructions Cycles
  3497                           ; simple_byte           13     7 (average)
  3498                           ;	Chosen strategy is simple_byte
  3499                           
  3500                           	movf ??_lock_sprite_switch+0+0,c,w
  3501  0010AC  5001               	xorlw	0^0	; case 0
  3502  0010AE  0A00               	skipnz
  3503  0010B0  B4D8               	goto	l1451
  3504  0010B2  EF38  F008         	xorlw	1^0	; case 1
  3505  0010B6  0A01               	skipnz
  3506  0010B8  B4D8               	goto	l1453
  3507  0010BA  EF3C  F008         	xorlw	2^1	; case 2
  3508  0010BE  0A03               	skipnz
  3509  0010C0  B4D8               	goto	l1455
  3510  0010C2  EF40  F008         	xorlw	3^2	; case 3
  3511  0010C6  0A01               	skipnz
  3512  0010C8  B4D8               	goto	l1457
  3513  0010CA  EF44  F008         	goto	l114
  3514  0010CE  EF69  F008         
  3515                           	
  3516                           l109:
  3517  0010D2                     	line	208
  3518                           	
  3519                           l114:
  3520  0010D2                     	return	;funcret
  3521  0010D2  0012               	opt stack 0
  3522                           GLOBAL	__end_of_lock_sprite_switch
  3523                           	__end_of_lock_sprite_switch:
  3524  0010D4                     	signat	_lock_sprite_switch,89
  3525                           	global	_level_up
  3526                           
  3527 ;; *************** function _level_up *****************
  3528 ;; Defined at:
  3529 ;;		line 210 in file "main_LCD_Disp_Chars.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  key_line       16   25[COMRAM] int [8]
  3534 ;;  key_pos        16    9[COMRAM] int [8]
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0
  3545 ;;      Locals:        32       0       0       0       0       0       0       0       0
  3546 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3547 ;;      Totals:        34       0       0       0       0       0       0       0       0
  3548 ;;Total ram usage:       34 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    2
  3551 ;; This function calls:
  3552 ;;		_CG_char
  3553 ;;		_LCDString
  3554 ;;		_LCDcommand
  3555 ;;		_MoveCursor
  3556 ;; This function is called by:
  3557 ;;		_main
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           psect	text9,class=CODE,space=0,reloc=2,group=0
  3561                           	line	210
  3562                           global __ptext9
  3563                           __ptext9:
  3564  000DC8                     psect	text9
  3565                           	file	"main_LCD_Disp_Chars.c"
  3566                           	line	210
  3567                           	global	__size_of_level_up
  3568                           	__size_of_level_up	equ	__end_of_level_up-_level_up
  3569  0000                     	
  3570                           _level_up:
  3571  000DC8                     ;incstack = 0
  3572                           	opt	stack 28
  3573                           	line	211
  3574                           	
  3575                           l1527:
  3576  000DC8                     ;main_LCD_Disp_Chars.c: 211:     LCDcommand(0b00000001);
  3577                           	movlw	(01h)&0ffh
  3578  000DC8  0E01               	
  3579                           	call	_LCDcommand
  3580  000DCA  ECA0  F009         	line	212
  3581                           	
  3582                           l1529:
  3583  000DCE                     ;main_LCD_Disp_Chars.c: 212:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3584                           	opt asmopt_push
  3585                           opt asmopt_off
  3586                           movlw  2
  3587  000DCE  0E02               movwf	(??_level_up+0+0+1)&0ffh,c,f
  3588  000DD0  6E09               movlw	4
  3589  000DD2  0E04               movwf	(??_level_up+0+0)&0ffh,c,f
  3590  000DD4  6E08               	movlw	186
  3591  000DD6  0EBA               u807:
  3592  000DD8                     decfsz	wreg,f
  3593  000DD8  2EE8               	bra	u807
  3594  000DDA  D7FE               	decfsz	(??_level_up+0+0)&0ffh,c,f
  3595  000DDC  2E08               	bra	u807
  3596  000DDE  D7FC               	decfsz	(??_level_up+0+0+1)&0ffh,c,f
  3597  000DE0  2E09               	bra	u807
  3598  000DE2  D7FA               	nop2
  3599  000DE4  D000               opt asmopt_pop
  3600                           
  3601                           	line	213
  3602                           	
  3603                           l1531:
  3604  000DE6                     ;main_LCD_Disp_Chars.c: 213:     MoveCursor(4, 1);
  3605                           	movlw	low(01h)
  3606  000DE6  0E01               	movwf	((c:MoveCursor@y)),c
  3607  000DE8  6E03               	movlw	(04h)&0ffh
  3608  000DEA  0E04               	
  3609                           	call	_MoveCursor
  3610  000DEC  ECC4  F008         	line	214
  3611                           	
  3612                           l1533:
  3613  000DF0                     ;main_LCD_Disp_Chars.c: 214:     LCDString("Level Up");
  3614                           		movlw	low(STR_1)
  3615  000DF0  0E0B               	movwf	((c:LCDString@msg)),c
  3616  000DF2  6E02               	movlw	high(STR_1)
  3617  000DF4  0E08               	movwf	((c:LCDString@msg+1)),c
  3618  000DF6  6E03               
  3619                           	call	_LCDString	;wreg free
  3620  000DF8  EC66  F009         	line	215
  3621                           	
  3622                           l1535:
  3623  000DFC                     ;main_LCD_Disp_Chars.c: 215:     CG_char(7,2,8);
  3624                           	movlw	low(02h)
  3625  000DFC  0E02               	movwf	((c:CG_char@line)),c
  3626  000DFE  6E03               	movlw	low(08h)
  3627  000E00  0E08               	movwf	((c:CG_char@row)),c
  3628  000E02  6E04               	movlw	(07h)&0ffh
  3629  000E04  0E07               	
  3630                           	call	_CG_char
  3631  000E06  EC97  F008         	line	216
  3632                           	
  3633                           l1537:
  3634  000E0A                     ;main_LCD_Disp_Chars.c: 216:     _delay((unsigned long)((2500)*(8000000/4000.0)));
  3635                           	opt asmopt_push
  3636                           opt asmopt_off
  3637                           movlw  26
  3638  000E0A  0E1A               movwf	(??_level_up+0+0+1)&0ffh,c,f
  3639  000E0C  6E09               movlw	94
  3640  000E0E  0E5E               movwf	(??_level_up+0+0)&0ffh,c,f
  3641  000E10  6E08               	movlw	110
  3642  000E12  0E6E               u817:
  3643  000E14                     decfsz	wreg,f
  3644  000E14  2EE8               	bra	u817
  3645  000E16  D7FE               	decfsz	(??_level_up+0+0)&0ffh,c,f
  3646  000E18  2E08               	bra	u817
  3647  000E1A  D7FC               	decfsz	(??_level_up+0+0+1)&0ffh,c,f
  3648  000E1C  2E09               	bra	u817
  3649  000E1E  D7FA               	nop2
  3650  000E20  D000               opt asmopt_pop
  3651                           
  3652                           	line	217
  3653                           	
  3654                           l1539:
  3655  000E22                     ;main_LCD_Disp_Chars.c: 217:     pos = pos - key_ + 14;
  3656                           	movf	((c:_key_)),c,w
  3657  000E22  5042               	sublw	0
  3658  000E24  0800               	addwf	((c:_pos)),c,w
  3659  000E26  2444               	addlw	low(0Eh)
  3660  000E28  0F0E               	movwf	((c:_pos)),c
  3661  000E2A  6E44               	line	218
  3662                           	
  3663                           l1541:
  3664  000E2C                     ;main_LCD_Disp_Chars.c: 218:     key_pointer = 0;
  3665                           	movlw	low(0)
  3666  000E2C  0E00               	movwf	((c:_key_pointer)),c
  3667  000E2E  6E55               	line	219
  3668                           	
  3669                           l1543:
  3670  000E30                     ;main_LCD_Disp_Chars.c: 219:     int key_pos[8] = {-1, -1, -1, -1, -1, -1, -1, -1};
  3671                           	lfsr	2,(level_up@F3527)
  3672  000E30  EE20  F070         	lfsr	1,(level_up@key_pos)
  3673  000E34  EE10  F00A         	movlw	16-1
  3674  000E38  0E0F               u621:
  3675  000E3A                     	movff	plusw2,plusw1
  3676  000E3A  CFDB FFE3          	decf	wreg
  3677  000E3E  06E8               	bc	u621
  3678  000E40  E2FC               
  3679                           	line	220
  3680                           	
  3681                           l1545:
  3682  000E42                     ;main_LCD_Disp_Chars.c: 220:     int key_line[8] = {-1, -1, -1, -1, -1, -1, -1, -1};
  3683                           	lfsr	2,(level_up@F3529)
  3684  000E42  EE20  F060         	lfsr	1,(level_up@key_line)
  3685  000E46  EE10  F01A         	movlw	16-1
  3686  000E4A  0E0F               u631:
  3687  000E4C                     	movff	plusw2,plusw1
  3688  000E4C  CFDB FFE3          	decf	wreg
  3689  000E50  06E8               	bc	u631
  3690  000E52  E2FC               
  3691                           	line	221
  3692                           	
  3693                           l1547:
  3694  000E54                     ;main_LCD_Disp_Chars.c: 221:     shift = 0;
  3695                           	movlw	low(0)
  3696  000E54  0E00               	movwf	((c:_shift)),c
  3697  000E56  6E56               	line	222
  3698                           	
  3699                           l1549:
  3700  000E58                     ;main_LCD_Disp_Chars.c: 222:     key_ = 14;
  3701                           	movlw	low(0Eh)
  3702  000E58  0E0E               	movwf	((c:_key_)),c
  3703  000E5A  6E42               	line	223
  3704                           	
  3705                           l1551:
  3706  000E5C                     ;main_LCD_Disp_Chars.c: 223:     level--;
  3707                           	decf	((c:_level)),c
  3708  000E5C  0641               	line	224
  3709                           	
  3710                           l1553:
  3711  000E5E                     ;main_LCD_Disp_Chars.c: 224:     if (level==1){
  3712                           		decf	((c:_level)),c,w
  3713  000E5E  0441               	btfss	status,2
  3714  000E60  A4D8               	goto	u641
  3715  000E62  EF35  F007         	goto	u640
  3716  000E66  EF37  F007         
  3717                           u641:
  3718  000E6A                     	goto	l1557
  3719  000E6A  EF3B  F007         u640:
  3720  000E6E                     	line	225
  3721                           	
  3722                           l1555:
  3723  000E6E                     ;main_LCD_Disp_Chars.c: 225:         level = 2;
  3724                           	movlw	low(02h)
  3725  000E6E  0E02               	movwf	((c:_level)),c
  3726  000E70  6E41               	goto	l1557
  3727  000E72  EF3B  F007         	line	226
  3728                           ;main_LCD_Disp_Chars.c: 226:     }
  3729                           	
  3730                           l121:
  3731  000E76                     	line	227
  3732                           	
  3733                           l1557:
  3734  000E76                     ;main_LCD_Disp_Chars.c: 227:     LCDcommand(0b00000001);
  3735                           	movlw	(01h)&0ffh
  3736  000E76  0E01               	
  3737                           	call	_LCDcommand
  3738  000E78  ECA0  F009         	line	228
  3739                           	
  3740                           l122:
  3741  000E7C                     	return	;funcret
  3742  000E7C  0012               	opt stack 0
  3743                           GLOBAL	__end_of_level_up
  3744                           	__end_of_level_up:
  3745  000E7E                     	signat	_level_up,89
  3746                           	global	_iniLCD
  3747                           
  3748 ;; *************** function _iniLCD *****************
  3749 ;; Defined at:
  3750 ;;		line 5 in file "lcd_utils.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3764 ;;      Params:         0       0       0       0       0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3766 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3767 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3768 ;;Total ram usage:        1 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    1
  3771 ;; This function calls:
  3772 ;;		_LCDcommand
  3773 ;; This function is called by:
  3774 ;;		_main
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           psect	text10,class=CODE,space=0,reloc=2,group=0
  3778                           	file	"lcd_utils.c"
  3779                           	line	5
  3780                           global __ptext10
  3781                           __ptext10:
  3782  0010D4                     psect	text10
  3783                           	file	"lcd_utils.c"
  3784                           	line	5
  3785                           	global	__size_of_iniLCD
  3786                           	__size_of_iniLCD	equ	__end_of_iniLCD-_iniLCD
  3787  0000                     	
  3788                           _iniLCD:
  3789  0010D4                     ;incstack = 0
  3790                           	opt	stack 29
  3791                           	line	6
  3792                           	
  3793                           l1373:
  3794  0010D4                     ;lcd_utils.c: 6:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3795                           	opt asmopt_push
  3796                           opt asmopt_off
  3797                           movlw	52
  3798  0010D4  0E34               movwf	(??_iniLCD+0+0)&0ffh,c,f
  3799  0010D6  6E03               	movlw	242
  3800  0010D8  0EF2               u827:
  3801  0010DA                     decfsz	wreg,f
  3802  0010DA  2EE8               	bra	u827
  3803  0010DC  D7FE               	decfsz	(??_iniLCD+0+0)&0ffh,c,f
  3804  0010DE  2E03               	bra	u827
  3805  0010E0  D7FC               opt asmopt_pop
  3806                           
  3807                           	line	7
  3808                           	
  3809                           l1375:
  3810  0010E2                     ;lcd_utils.c: 7:     LCDcommand(0b00110000);
  3811                           	movlw	(030h)&0ffh
  3812  0010E2  0E30               	
  3813                           	call	_LCDcommand
  3814  0010E4  ECA0  F009         	line	8
  3815                           	
  3816                           l1377:
  3817  0010E8                     ;lcd_utils.c: 8:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3818                           	opt asmopt_push
  3819                           opt asmopt_off
  3820                           movlw	13
  3821  0010E8  0E0D               movwf	(??_iniLCD+0+0)&0ffh,c,f
  3822  0010EA  6E03               	movlw	252
  3823  0010EC  0EFC               u837:
  3824  0010EE                     decfsz	wreg,f
  3825  0010EE  2EE8               	bra	u837
  3826  0010F0  D7FE               	decfsz	(??_iniLCD+0+0)&0ffh,c,f
  3827  0010F2  2E03               	bra	u837
  3828  0010F4  D7FC               opt asmopt_pop
  3829                           
  3830                           	line	9
  3831                           ;lcd_utils.c: 9:     LCDcommand(0b00110000);
  3832                           	movlw	(030h)&0ffh
  3833  0010F6  0E30               	
  3834                           	call	_LCDcommand
  3835  0010F8  ECA0  F009         	line	10
  3836                           	
  3837                           l1379:
  3838  0010FC                     ;lcd_utils.c: 10:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3839                           	opt asmopt_push
  3840                           opt asmopt_off
  3841                           movlw	3
  3842  0010FC  0E03               movwf	(??_iniLCD+0+0)&0ffh,c,f
  3843  0010FE  6E03               	movlw	152
  3844  001100  0E98               u847:
  3845  001102                     decfsz	wreg,f
  3846  001102  2EE8               	bra	u847
  3847  001104  D7FE               	decfsz	(??_iniLCD+0+0)&0ffh,c,f
  3848  001106  2E03               	bra	u847
  3849  001108  D7FC               opt asmopt_pop
  3850                           
  3851                           	line	11
  3852                           	
  3853                           l1381:
  3854  00110A                     ;lcd_utils.c: 11:     LCDcommand(0b00110000);
  3855                           	movlw	(030h)&0ffh
  3856  00110A  0E30               	
  3857                           	call	_LCDcommand
  3858  00110C  ECA0  F009         	line	12
  3859                           	
  3860                           l1383:
  3861  001110                     ;lcd_utils.c: 12:     LCDcommand(0b00111000);
  3862                           	movlw	(038h)&0ffh
  3863  001110  0E38               	
  3864                           	call	_LCDcommand
  3865  001112  ECA0  F009         	line	13
  3866                           	
  3867                           l1385:
  3868  001116                     ;lcd_utils.c: 13:     LCDcommand(0b00001100);
  3869                           	movlw	(0Ch)&0ffh
  3870  001116  0E0C               	
  3871                           	call	_LCDcommand
  3872  001118  ECA0  F009         	line	14
  3873                           	
  3874                           l1387:
  3875  00111C                     ;lcd_utils.c: 14:     LCDcommand(0b00000001);
  3876                           	movlw	(01h)&0ffh
  3877  00111C  0E01               	
  3878                           	call	_LCDcommand
  3879  00111E  ECA0  F009         	line	15
  3880                           	
  3881                           l1389:
  3882  001122                     ;lcd_utils.c: 15:     LCDcommand(0b00000110);
  3883                           	movlw	(06h)&0ffh
  3884  001122  0E06               	
  3885                           	call	_LCDcommand
  3886  001124  ECA0  F009         	goto	l141
  3887  001128  EF96  F008         	line	16
  3888                           	
  3889                           l1391:
  3890  00112C                     	line	17
  3891                           ;lcd_utils.c: 16:     return;
  3892                           	
  3893                           l141:
  3894  00112C                     	return	;funcret
  3895  00112C  0012               	opt stack 0
  3896                           GLOBAL	__end_of_iniLCD
  3897                           	__end_of_iniLCD:
  3898  00112E                     	signat	_iniLCD,89
  3899                           	global	_game_over_seq
  3900                           
  3901 ;; *************** function _game_over_seq *****************
  3902 ;; Defined at:
  3903 ;;		line 230 in file "main_LCD_Disp_Chars.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;		None
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3917 ;;      Params:         0       0       0       0       0       0       0       0       0
  3918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3919 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3920 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3921 ;;Total ram usage:        2 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    2
  3924 ;; This function calls:
  3925 ;;		_CG_char
  3926 ;;		_LCDString
  3927 ;;		_LCDcommand
  3928 ;;		_MoveCursor
  3929 ;; This function is called by:
  3930 ;;		_main
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           psect	text11,class=CODE,space=0,reloc=2,group=0
  3934                           	file	"main_LCD_Disp_Chars.c"
  3935                           	line	230
  3936                           global __ptext11
  3937                           __ptext11:
  3938  000A0C                     psect	text11
  3939                           	file	"main_LCD_Disp_Chars.c"
  3940                           	line	230
  3941                           	global	__size_of_game_over_seq
  3942                           	__size_of_game_over_seq	equ	__end_of_game_over_seq-_game_over_seq
  3943  0000                     	
  3944                           _game_over_seq:
  3945  000A0C                     ;incstack = 0
  3946                           	opt	stack 28
  3947                           	line	231
  3948                           	
  3949                           l1467:
  3950  000A0C                     ;main_LCD_Disp_Chars.c: 231:     LCDcommand(0b00000001);
  3951                           	movlw	(01h)&0ffh
  3952  000A0C  0E01               	
  3953                           	call	_LCDcommand
  3954  000A0E  ECA0  F009         	line	232
  3955                           	
  3956                           l1469:
  3957  000A12                     ;main_LCD_Disp_Chars.c: 232:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3958                           	opt asmopt_push
  3959                           opt asmopt_off
  3960                           movlw  2
  3961  000A12  0E02               movwf	(??_game_over_seq+0+0+1)&0ffh,c,f
  3962  000A14  6E09               movlw	4
  3963  000A16  0E04               movwf	(??_game_over_seq+0+0)&0ffh,c,f
  3964  000A18  6E08               	movlw	186
  3965  000A1A  0EBA               u857:
  3966  000A1C                     decfsz	wreg,f
  3967  000A1C  2EE8               	bra	u857
  3968  000A1E  D7FE               	decfsz	(??_game_over_seq+0+0)&0ffh,c,f
  3969  000A20  2E08               	bra	u857
  3970  000A22  D7FC               	decfsz	(??_game_over_seq+0+0+1)&0ffh,c,f
  3971  000A24  2E09               	bra	u857
  3972  000A26  D7FA               	nop2
  3973  000A28  D000               opt asmopt_pop
  3974                           
  3975                           	line	233
  3976                           	
  3977                           l1471:
  3978  000A2A                     ;main_LCD_Disp_Chars.c: 233:     MoveCursor(4, 1);
  3979                           	movlw	low(01h)
  3980  000A2A  0E01               	movwf	((c:MoveCursor@y)),c
  3981  000A2C  6E03               	movlw	(04h)&0ffh
  3982  000A2E  0E04               	
  3983                           	call	_MoveCursor
  3984  000A30  ECC4  F008         	line	234
  3985                           	
  3986                           l1473:
  3987  000A34                     ;main_LCD_Disp_Chars.c: 234:     LCDString("GAME OVER");
  3988                           		movlw	low(STR_2)
  3989  000A34  0E01               	movwf	((c:LCDString@msg)),c
  3990  000A36  6E02               	movlw	high(STR_2)
  3991  000A38  0E08               	movwf	((c:LCDString@msg+1)),c
  3992  000A3A  6E03               
  3993                           	call	_LCDString	;wreg free
  3994  000A3C  EC66  F009         	line	235
  3995                           	
  3996                           l1475:
  3997  000A40                     ;main_LCD_Disp_Chars.c: 235:     _delay((unsigned long)((500)*(8000000/4000.0)));
  3998                           	opt asmopt_push
  3999                           opt asmopt_off
  4000                           movlw  6
  4001  000A40  0E06               movwf	(??_game_over_seq+0+0+1)&0ffh,c,f
  4002  000A42  6E09               movlw	19
  4003  000A44  0E13               movwf	(??_game_over_seq+0+0)&0ffh,c,f
  4004  000A46  6E08               	movlw	174
  4005  000A48  0EAE               u867:
  4006  000A4A                     decfsz	wreg,f
  4007  000A4A  2EE8               	bra	u867
  4008  000A4C  D7FE               	decfsz	(??_game_over_seq+0+0)&0ffh,c,f
  4009  000A4E  2E08               	bra	u867
  4010  000A50  D7FC               	decfsz	(??_game_over_seq+0+0+1)&0ffh,c,f
  4011  000A52  2E09               	bra	u867
  4012  000A54  D7FA               opt asmopt_pop
  4013                           
  4014                           	line	236
  4015                           	
  4016                           l1477:
  4017  000A56                     ;main_LCD_Disp_Chars.c: 236:     CG_char(0,2,6);
  4018                           	movlw	low(02h)
  4019  000A56  0E02               	movwf	((c:CG_char@line)),c
  4020  000A58  6E03               	movlw	low(06h)
  4021  000A5A  0E06               	movwf	((c:CG_char@row)),c
  4022  000A5C  6E04               	movlw	(0)&0ffh
  4023  000A5E  0E00               	
  4024                           	call	_CG_char
  4025  000A60  EC97  F008         	line	237
  4026                           	
  4027                           l1479:
  4028  000A64                     ;main_LCD_Disp_Chars.c: 237:     _delay((unsigned long)((500)*(8000000/4000.0)));
  4029                           	opt asmopt_push
  4030                           opt asmopt_off
  4031                           movlw  6
  4032  000A64  0E06               movwf	(??_game_over_seq+0+0+1)&0ffh,c,f
  4033  000A66  6E09               movlw	19
  4034  000A68  0E13               movwf	(??_game_over_seq+0+0)&0ffh,c,f
  4035  000A6A  6E08               	movlw	174
  4036  000A6C  0EAE               u877:
  4037  000A6E                     decfsz	wreg,f
  4038  000A6E  2EE8               	bra	u877
  4039  000A70  D7FE               	decfsz	(??_game_over_seq+0+0)&0ffh,c,f
  4040  000A72  2E08               	bra	u877
  4041  000A74  D7FC               	decfsz	(??_game_over_seq+0+0+1)&0ffh,c,f
  4042  000A76  2E09               	bra	u877
  4043  000A78  D7FA               opt asmopt_pop
  4044                           
  4045                           	line	238
  4046                           	
  4047                           l1481:
  4048  000A7A                     ;main_LCD_Disp_Chars.c: 238:     CG_char(1,2,7);
  4049                           	movlw	low(02h)
  4050  000A7A  0E02               	movwf	((c:CG_char@line)),c
  4051  000A7C  6E03               	movlw	low(07h)
  4052  000A7E  0E07               	movwf	((c:CG_char@row)),c
  4053  000A80  6E04               	movlw	(01h)&0ffh
  4054  000A82  0E01               	
  4055                           	call	_CG_char
  4056  000A84  EC97  F008         	line	239
  4057                           	
  4058                           l1483:
  4059  000A88                     ;main_LCD_Disp_Chars.c: 239:     _delay((unsigned long)((500)*(8000000/4000.0)));
  4060                           	opt asmopt_push
  4061                           opt asmopt_off
  4062                           movlw  6
  4063  000A88  0E06               movwf	(??_game_over_seq+0+0+1)&0ffh,c,f
  4064  000A8A  6E09               movlw	19
  4065  000A8C  0E13               movwf	(??_game_over_seq+0+0)&0ffh,c,f
  4066  000A8E  6E08               	movlw	174
  4067  000A90  0EAE               u887:
  4068  000A92                     decfsz	wreg,f
  4069  000A92  2EE8               	bra	u887
  4070  000A94  D7FE               	decfsz	(??_game_over_seq+0+0)&0ffh,c,f
  4071  000A96  2E08               	bra	u887
  4072  000A98  D7FC               	decfsz	(??_game_over_seq+0+0+1)&0ffh,c,f
  4073  000A9A  2E09               	bra	u887
  4074  000A9C  D7FA               opt asmopt_pop
  4075                           
  4076                           	line	240
  4077                           	
  4078                           l1485:
  4079  000A9E                     ;main_LCD_Disp_Chars.c: 240:     CG_char(2,2,8);
  4080                           	movlw	low(02h)
  4081  000A9E  0E02               	movwf	((c:CG_char@line)),c
  4082  000AA0  6E03               	movlw	low(08h)
  4083  000AA2  0E08               	movwf	((c:CG_char@row)),c
  4084  000AA4  6E04               	movlw	(02h)&0ffh
  4085  000AA6  0E02               	
  4086                           	call	_CG_char
  4087  000AA8  EC97  F008         	line	241
  4088                           	
  4089                           l1487:
  4090  000AAC                     ;main_LCD_Disp_Chars.c: 241:     _delay((unsigned long)((500)*(8000000/4000.0)));
  4091                           	opt asmopt_push
  4092                           opt asmopt_off
  4093                           movlw  6
  4094  000AAC  0E06               movwf	(??_game_over_seq+0+0+1)&0ffh,c,f
  4095  000AAE  6E09               movlw	19
  4096  000AB0  0E13               movwf	(??_game_over_seq+0+0)&0ffh,c,f
  4097  000AB2  6E08               	movlw	174
  4098  000AB4  0EAE               u897:
  4099  000AB6                     decfsz	wreg,f
  4100  000AB6  2EE8               	bra	u897
  4101  000AB8  D7FE               	decfsz	(??_game_over_seq+0+0)&0ffh,c,f
  4102  000ABA  2E08               	bra	u897
  4103  000ABC  D7FC               	decfsz	(??_game_over_seq+0+0+1)&0ffh,c,f
  4104  000ABE  2E09               	bra	u897
  4105  000AC0  D7FA               opt asmopt_pop
  4106                           
  4107                           	line	242
  4108                           	
  4109                           l1489:
  4110  000AC2                     ;main_LCD_Disp_Chars.c: 242:     CG_char(3,2,9);
  4111                           	movlw	low(02h)
  4112  000AC2  0E02               	movwf	((c:CG_char@line)),c
  4113  000AC4  6E03               	movlw	low(09h)
  4114  000AC6  0E09               	movwf	((c:CG_char@row)),c
  4115  000AC8  6E04               	movlw	(03h)&0ffh
  4116  000ACA  0E03               	
  4117                           	call	_CG_char
  4118  000ACC  EC97  F008         	line	243
  4119                           	
  4120                           l1491:
  4121  000AD0                     ;main_LCD_Disp_Chars.c: 243:     _delay((unsigned long)((500)*(8000000/4000.0)));
  4122                           	opt asmopt_push
  4123                           opt asmopt_off
  4124                           movlw  6
  4125  000AD0  0E06               movwf	(??_game_over_seq+0+0+1)&0ffh,c,f
  4126  000AD2  6E09               movlw	19
  4127  000AD4  0E13               movwf	(??_game_over_seq+0+0)&0ffh,c,f
  4128  000AD6  6E08               	movlw	174
  4129  000AD8  0EAE               u907:
  4130  000ADA                     decfsz	wreg,f
  4131  000ADA  2EE8               	bra	u907
  4132  000ADC  D7FE               	decfsz	(??_game_over_seq+0+0)&0ffh,c,f
  4133  000ADE  2E08               	bra	u907
  4134  000AE0  D7FC               	decfsz	(??_game_over_seq+0+0+1)&0ffh,c,f
  4135  000AE2  2E09               	bra	u907
  4136  000AE4  D7FA               opt asmopt_pop
  4137                           
  4138                           	line	244
  4139                           	
  4140                           l1493:
  4141  000AE6                     ;main_LCD_Disp_Chars.c: 244:     CG_char(4,2,10);
  4142                           	movlw	low(02h)
  4143  000AE6  0E02               	movwf	((c:CG_char@line)),c
  4144  000AE8  6E03               	movlw	low(0Ah)
  4145  000AEA  0E0A               	movwf	((c:CG_char@row)),c
  4146  000AEC  6E04               	movlw	(04h)&0ffh
  4147  000AEE  0E04               	
  4148                           	call	_CG_char
  4149  000AF0  EC97  F008         	line	245
  4150                           	
  4151                           l1495:
  4152  000AF4                     ;main_LCD_Disp_Chars.c: 245:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4153                           	opt asmopt_push
  4154                           opt asmopt_off
  4155                           movlw  21
  4156  000AF4  0E15               movwf	(??_game_over_seq+0+0+1)&0ffh,c,f
  4157  000AF6  6E09               movlw	75
  4158  000AF8  0E4B               movwf	(??_game_over_seq+0+0)&0ffh,c,f
  4159  000AFA  6E08               	movlw	190
  4160  000AFC  0EBE               u917:
  4161  000AFE                     decfsz	wreg,f
  4162  000AFE  2EE8               	bra	u917
  4163  000B00  D7FE               	decfsz	(??_game_over_seq+0+0)&0ffh,c,f
  4164  000B02  2E08               	bra	u917
  4165  000B04  D7FC               	decfsz	(??_game_over_seq+0+0+1)&0ffh,c,f
  4166  000B06  2E09               	bra	u917
  4167  000B08  D7FA               	nop2
  4168  000B0A  D000               opt asmopt_pop
  4169                           
  4170                           	line	246
  4171                           	
  4172                           l125:
  4173  000B0C                     	return	;funcret
  4174  000B0C  0012               	opt stack 0
  4175                           GLOBAL	__end_of_game_over_seq
  4176                           	__end_of_game_over_seq:
  4177  000B0E                     	signat	_game_over_seq,89
  4178                           	global	_MoveCursor
  4179                           
  4180 ;; *************** function _MoveCursor *****************
  4181 ;; Defined at:
  4182 ;;		line 52 in file "lcd_utils.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  x               1    wreg     unsigned char 
  4185 ;;  y               1    2[COMRAM] unsigned char 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  x               1    5[COMRAM] unsigned char 
  4188 ;;  cmd             2    3[COMRAM] int 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2, status,0, cstack
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4198 ;;      Params:         1       0       0       0       0       0       0       0       0
  4199 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4201 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4202 ;;Total ram usage:        4 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    1
  4205 ;; This function calls:
  4206 ;;		_LCDcommand
  4207 ;; This function is called by:
  4208 ;;		_move_lock
  4209 ;;		_level_up
  4210 ;;		_game_over_seq
  4211 ;;		_out_of_screen
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           psect	text12,class=CODE,space=0,reloc=2,group=0
  4215                           	file	"lcd_utils.c"
  4216                           	line	52
  4217                           global __ptext12
  4218                           __ptext12:
  4219  001188                     psect	text12
  4220                           	file	"lcd_utils.c"
  4221                           	line	52
  4222                           	global	__size_of_MoveCursor
  4223                           	__size_of_MoveCursor	equ	__end_of_MoveCursor-_MoveCursor
  4224  0000                     	
  4225                           _MoveCursor:
  4226  001188                     ;incstack = 0
  4227                           	opt	stack 28
  4228                           ;MoveCursor@x stored from wreg
  4229                           	movwf	((c:MoveCursor@x)),c
  4230  001188  6E06               	line	54
  4231                           	
  4232                           l1315:
  4233  00118A                     ;lcd_utils.c: 53:     int cmd;;lcd_utils.c: 54:     if (y == 1)
  4234                           		decf	((c:MoveCursor@y)),c,w
  4235  00118A  0403               	btfss	status,2
  4236  00118C  A4D8               	goto	u431
  4237  00118E  EFCB  F008         	goto	u430
  4238  001192  EFCD  F008         
  4239                           u431:
  4240  001196                     	goto	l1321
  4241  001196  EFD6  F008         u430:
  4242  00119A                     	line	56
  4243                           	
  4244                           l1317:
  4245  00119A                     ;lcd_utils.c: 55:     {;lcd_utils.c: 56:         y = 0x80;
  4246                           	movlw	low(080h)
  4247  00119A  0E80               	movwf	((c:MoveCursor@y)),c
  4248  00119C  6E03               	line	57
  4249                           	
  4250                           l1319:
  4251  00119E                     ;lcd_utils.c: 57:         cmd = y + x;
  4252                           	movf	((c:MoveCursor@y)),c,w
  4253  00119E  5003               	addwf	((c:MoveCursor@x)),c,w
  4254  0011A0  2406               	movwf	((c:MoveCursor@cmd)),c
  4255  0011A2  6E04               	clrf	1+((c:MoveCursor@cmd)),c
  4256  0011A4  6A05               	rlcf	1+((c:MoveCursor@cmd)),c
  4257  0011A6  3605               	
  4258                           	line	58
  4259                           ;lcd_utils.c: 58:     } else if (y==2)
  4260                           	goto	l1327
  4261  0011A8  EFEA  F008         	
  4262                           l156:
  4263  0011AC                     	
  4264                           l1321:
  4265  0011AC                     		movlw	2
  4266  0011AC  0E02               	xorwf	((c:MoveCursor@y)),c,w
  4267  0011AE  1803               	btfss	status,2
  4268  0011B0  A4D8               	goto	u441
  4269  0011B2  EFDD  F008         	goto	u440
  4270  0011B6  EFDF  F008         
  4271                           u441:
  4272  0011BA                     	goto	l1327
  4273  0011BA  EFEA  F008         u440:
  4274  0011BE                     	line	60
  4275                           	
  4276                           l1323:
  4277  0011BE                     ;lcd_utils.c: 59:     {;lcd_utils.c: 60:         y = 0xC0;
  4278                           	movlw	low(0C0h)
  4279  0011BE  0EC0               	movwf	((c:MoveCursor@y)),c
  4280  0011C0  6E03               	line	61
  4281                           	
  4282                           l1325:
  4283  0011C2                     ;lcd_utils.c: 61:         cmd = y + x;
  4284                           	movf	((c:MoveCursor@y)),c,w
  4285  0011C2  5003               	addwf	((c:MoveCursor@x)),c,w
  4286  0011C4  2406               	movwf	((c:MoveCursor@cmd)),c
  4287  0011C6  6E04               	clrf	1+((c:MoveCursor@cmd)),c
  4288  0011C8  6A05               	rlcf	1+((c:MoveCursor@cmd)),c
  4289  0011CA  3605               	
  4290                           	goto	l1327
  4291  0011CC  EFEA  F008         	line	62
  4292                           ;lcd_utils.c: 62:     }
  4293                           	
  4294                           l158:
  4295  0011D0                     	goto	l1327
  4296  0011D0  EFEA  F008         	
  4297                           l157:
  4298  0011D4                     	line	63
  4299                           	
  4300                           l1327:
  4301  0011D4                     ;lcd_utils.c: 63:     LCDcommand(cmd);
  4302                           	movf	((c:MoveCursor@cmd)),c,w
  4303  0011D4  5004               	
  4304                           	call	_LCDcommand
  4305  0011D6  ECA0  F009         	goto	l159
  4306  0011DA  EFEF  F008         	line	65
  4307                           	
  4308                           l1329:
  4309  0011DE                     	line	66
  4310                           ;lcd_utils.c: 65:     return;
  4311                           	
  4312                           l159:
  4313  0011DE                     	return	;funcret
  4314  0011DE  0012               	opt stack 0
  4315                           GLOBAL	__end_of_MoveCursor
  4316                           	__end_of_MoveCursor:
  4317  0011E0                     	signat	_MoveCursor,8313
  4318                           	global	_LCDString
  4319                           
  4320 ;; *************** function _LCDString *****************
  4321 ;; Defined at:
  4322 ;;		line 101 in file "lcd_utils.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  msg             2    1[COMRAM] PTR unsigned char 
  4325 ;;		 -> STR_3(10), STR_2(10), STR_1(9), 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      void 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4337 ;;      Params:         2       0       0       0       0       0       0       0       0
  4338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4340 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4341 ;;Total ram usage:        2 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    1
  4344 ;; This function calls:
  4345 ;;		_LCDchar
  4346 ;; This function is called by:
  4347 ;;		_level_up
  4348 ;;		_game_over_seq
  4349 ;;		_out_of_screen
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           psect	text13,class=CODE,space=0,reloc=2,group=0
  4353                           	line	101
  4354                           global __ptext13
  4355                           __ptext13:
  4356  0012CC                     psect	text13
  4357                           	file	"lcd_utils.c"
  4358                           	line	101
  4359                           	global	__size_of_LCDString
  4360                           	__size_of_LCDString	equ	__end_of_LCDString-_LCDString
  4361  0000                     	
  4362                           _LCDString:
  4363  0012CC                     ;incstack = 0
  4364                           	opt	stack 28
  4365                           	line	102
  4366                           	
  4367                           l1365:
  4368  0012CC                     ;lcd_utils.c: 102:  while((*msg)!=0){
  4369                           	goto	l1371
  4370  0012CC  EF74  F009         	
  4371                           l183:
  4372  0012D0                     	line	103
  4373                           	
  4374                           l1367:
  4375  0012D0                     ;lcd_utils.c: 103:    LCDchar(*msg);
  4376                           	movff	(c:LCDString@msg),tblptrl
  4377  0012D0  C002  FFF6         	movff	(c:LCDString@msg+1),tblptrh
  4378  0012D4  C003  FFF7         	if	0	;tblptru may be non-zero
  4379  0012D8                     	clrf	tblptru
  4381  0012D8                     	if	0	;tblptru may be non-zero
  4382  0012D8                     	global __mediumconst
  4383                           movlw	low highword(__mediumconst)
  4386  0012D8                     	tblrd	*
  4387  0012D8  0008               	
  4388                           	movf	tablat,w
  4389  0012DA  50F5               	
  4390                           	call	_LCDchar
  4391  0012DC  ECC9  F009         	line	104
  4392                           	
  4393                           l1369:
  4394  0012E0                     ;lcd_utils.c: 104:    msg++;
  4395                           	infsnz	((c:LCDString@msg)),c
  4396  0012E0  4A02               	incf	((c:LCDString@msg+1)),c
  4397  0012E2  2A03               	goto	l1371
  4398  0012E4  EF74  F009         	line	105
  4399                           ;lcd_utils.c: 105:     }
  4400                           	
  4401                           l182:
  4402  0012E8                     	line	102
  4403                           	
  4404                           l1371:
  4405  0012E8                     ;lcd_utils.c: 102:  while((*msg)!=0){
  4406                           	movff	(c:LCDString@msg),tblptrl
  4407  0012E8  C002  FFF6         	movff	(c:LCDString@msg+1),tblptrh
  4408  0012EC  C003  FFF7         	if	0	;tblptru may be non-zero
  4409  0012F0                     	clrf	tblptru
  4411  0012F0                     	if	0	;tblptru may be non-zero
  4412  0012F0                     	global __mediumconst
  4413                           movlw	low highword(__mediumconst)
  4416  0012F0                     	tblrd	*
  4417  0012F0  0008               	
  4418                           	movf	tablat,w
  4419  0012F2  50F5               	iorlw	0
  4420  0012F4  0900               	btfss	status,2
  4421  0012F6  A4D8               	goto	u481
  4422  0012F8  EF80  F009         	goto	u480
  4423  0012FC  EF82  F009         u481:
  4424  001300                     	goto	l1367
  4425  001300  EF68  F009         u480:
  4426  001304                     	goto	l185
  4427  001304  EF84  F009         	
  4428                           l184:
  4429  001308                     	line	106
  4430                           	
  4431                           l185:
  4432  001308                     	return	;funcret
  4433  001308  0012               	opt stack 0
  4434                           GLOBAL	__end_of_LCDString
  4435                           	__end_of_LCDString:
  4436  00130A                     	signat	_LCDString,4217
  4437                           	global	_CG_char
  4438                           
  4439 ;; *************** function _CG_char *****************
  4440 ;; Defined at:
  4441 ;;		line 37 in file "lcd_utils.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  a               1    wreg     unsigned char 
  4444 ;;  line            1    2[COMRAM] unsigned char 
  4445 ;;  row             1    3[COMRAM] unsigned char 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  a               1    4[COMRAM] unsigned char 
  4448 ;;  cmd             2    5[COMRAM] int 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4458 ;;      Params:         2       0       0       0       0       0       0       0       0
  4459 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4461 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4462 ;;Total ram usage:        5 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    1
  4465 ;; This function calls:
  4466 ;;		_LCDchar
  4467 ;;		_LCDcommand
  4468 ;; This function is called by:
  4469 ;;		_main
  4470 ;;		_level_up
  4471 ;;		_game_over_seq
  4472 ;;		_out_of_screen
  4473 ;;		_rand_key
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           psect	text14,class=CODE,space=0,reloc=2,group=0
  4477                           	line	37
  4478                           global __ptext14
  4479                           __ptext14:
  4480  00112E                     psect	text14
  4481                           	file	"lcd_utils.c"
  4482                           	line	37
  4483                           	global	__size_of_CG_char
  4484                           	__size_of_CG_char	equ	__end_of_CG_char-_CG_char
  4485  0000                     	
  4486                           _CG_char:
  4487  00112E                     ;incstack = 0
  4488                           	opt	stack 28
  4489                           ;CG_char@a stored from wreg
  4490                           	movwf	((c:CG_char@a)),c
  4491  00112E  6E05               	line	39
  4492                           	
  4493                           l1293:
  4494  001130                     ;lcd_utils.c: 38:     int cmd;;lcd_utils.c: 39:     if (line == 1)
  4495                           		decf	((c:CG_char@line)),c,w
  4496  001130  0403               	btfss	status,2
  4497  001132  A4D8               	goto	u401
  4498  001134  EF9E  F008         	goto	u400
  4499  001138  EFA0  F008         
  4500                           u401:
  4501  00113C                     	goto	l1299
  4502  00113C  EFA9  F008         u400:
  4503  001140                     	line	41
  4504                           	
  4505                           l1295:
  4506  001140                     ;lcd_utils.c: 40:     {;lcd_utils.c: 41:         line = 0x80;
  4507                           	movlw	low(080h)
  4508  001140  0E80               	movwf	((c:CG_char@line)),c
  4509  001142  6E03               	line	42
  4510                           	
  4511                           l1297:
  4512  001144                     ;lcd_utils.c: 42:         cmd = line + row;
  4513                           	movf	((c:CG_char@line)),c,w
  4514  001144  5003               	addwf	((c:CG_char@row)),c,w
  4515  001146  2404               	movwf	((c:CG_char@cmd)),c
  4516  001148  6E06               	clrf	1+((c:CG_char@cmd)),c
  4517  00114A  6A07               	rlcf	1+((c:CG_char@cmd)),c
  4518  00114C  3607               	
  4519                           	line	43
  4520                           ;lcd_utils.c: 43:     } else if (line==2)
  4521                           	goto	l1305
  4522  00114E  EFBD  F008         	
  4523                           l150:
  4524  001152                     	
  4525                           l1299:
  4526  001152                     		movlw	2
  4527  001152  0E02               	xorwf	((c:CG_char@line)),c,w
  4528  001154  1803               	btfss	status,2
  4529  001156  A4D8               	goto	u411
  4530  001158  EFB0  F008         	goto	u410
  4531  00115C  EFB2  F008         
  4532                           u411:
  4533  001160                     	goto	l1305
  4534  001160  EFBD  F008         u410:
  4535  001164                     	line	45
  4536                           	
  4537                           l1301:
  4538  001164                     ;lcd_utils.c: 44:     {;lcd_utils.c: 45:         line = 0xC0;
  4539                           	movlw	low(0C0h)
  4540  001164  0EC0               	movwf	((c:CG_char@line)),c
  4541  001166  6E03               	line	46
  4542                           	
  4543                           l1303:
  4544  001168                     ;lcd_utils.c: 46:         cmd = line + row;
  4545                           	movf	((c:CG_char@line)),c,w
  4546  001168  5003               	addwf	((c:CG_char@row)),c,w
  4547  00116A  2404               	movwf	((c:CG_char@cmd)),c
  4548  00116C  6E06               	clrf	1+((c:CG_char@cmd)),c
  4549  00116E  6A07               	rlcf	1+((c:CG_char@cmd)),c
  4550  001170  3607               	
  4551                           	goto	l1305
  4552  001172  EFBD  F008         	line	47
  4553                           ;lcd_utils.c: 47:     }
  4554                           	
  4555                           l152:
  4556  001176                     	goto	l1305
  4557  001176  EFBD  F008         	
  4558                           l151:
  4559  00117A                     	line	48
  4560                           	
  4561                           l1305:
  4562  00117A                     ;lcd_utils.c: 48:     LCDcommand(cmd);
  4563                           	movf	((c:CG_char@cmd)),c,w
  4564  00117A  5006               	
  4565                           	call	_LCDcommand
  4566  00117C  ECA0  F009         	line	49
  4567                           	
  4568                           l1307:
  4569  001180                     ;lcd_utils.c: 49:     LCDchar(a);
  4570                           	movf	((c:CG_char@a)),c,w
  4571  001180  5005               	
  4572                           	call	_LCDchar
  4573  001182  ECC9  F009         	line	50
  4574                           	
  4575                           l153:
  4576  001186                     	return	;funcret
  4577  001186  0012               	opt stack 0
  4578                           GLOBAL	__end_of_CG_char
  4579                           	__end_of_CG_char:
  4580  001188                     	signat	_CG_char,12409
  4581                           	global	___lbmod
  4582                           
  4583 ;; *************** function ___lbmod *****************
  4584 ;; Defined at:
  4585 ;;		line 4 in file "D:\Microchip\xc8\v2.00\pic\sources\c99\common\lbmod.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  dividend        1    wreg     unsigned char 
  4588 ;;  divisor         1    0[COMRAM] unsigned char 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  dividend        1    1[COMRAM] unsigned char 
  4591 ;;  rem             1    3[COMRAM] unsigned char 
  4592 ;;  counter         1    2[COMRAM] unsigned char 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      unsigned char 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2, status,0
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4602 ;;      Params:         1       0       0       0       0       0       0       0       0
  4603 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4605 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4606 ;;Total ram usage:        4 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; This function calls:
  4609 ;;		Nothing
  4610 ;; This function is called by:
  4611 ;;		_main
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           psect	text15,class=CODE,space=0,reloc=2,group=1
  4615                           	file	"D:\Microchip\xc8\v2.00\pic\sources\c99\common\lbmod.c"
  4616                           	line	4
  4617                           global __ptext15
  4618                           __ptext15:
  4619  001286                     psect	text15
  4620                           	file	"D:\Microchip\xc8\v2.00\pic\sources\c99\common\lbmod.c"
  4621                           	line	4
  4622                           	global	__size_of___lbmod
  4623                           	__size_of___lbmod	equ	__end_of___lbmod-___lbmod
  4624  0000                     	
  4625                           ___lbmod:
  4626  001286                     ;incstack = 0
  4627                           	opt	stack 30
  4628                           ;___lbmod@dividend stored from wreg
  4629                           	movwf	((c:___lbmod@dividend)),c
  4630  001286  6E02               	line	9
  4631                           	
  4632                           l1559:
  4633  001288                     	movlw	low(08h)
  4634  001288  0E08               	movwf	((c:___lbmod@counter)),c
  4635  00128A  6E03               	line	10
  4636                           	movlw	low(0)
  4637  00128C  0E00               	movwf	((c:___lbmod@rem)),c
  4638  00128E  6E04               	goto	l1561
  4639  001290  EF4A  F009         	line	11
  4640                           	
  4641                           l597:
  4642  001294                     	line	12
  4643                           	
  4644                           l1561:
  4645  001294                     	bcf	status,0
  4646  001294  90D8               	rlcf	((c:___lbmod@dividend)),c,w
  4647  001296  3402               	rlcf	((c:___lbmod@rem)),c,w
  4648  001298  3404               	movwf	((c:___lbmod@rem)),c
  4649  00129A  6E04               	line	13
  4650                           	
  4651                           l1563:
  4652  00129C                     	bcf status,0
  4653  00129C  90D8               	rlcf	((c:___lbmod@dividend)),c
  4654  00129E  3602               
  4655                           	line	14
  4656                           	
  4657                           l1565:
  4658  0012A0                     		movf	((c:___lbmod@divisor)),c,w
  4659  0012A0  5001               	subwf	((c:___lbmod@rem)),c,w
  4660  0012A2  5C04               	btfss	status,0
  4661  0012A4  A0D8               	goto	u651
  4662  0012A6  EF57  F009         	goto	u650
  4663  0012AA  EF59  F009         
  4664                           u651:
  4665  0012AE                     	goto	l1569
  4666  0012AE  EF5D  F009         u650:
  4667  0012B2                     	line	15
  4668                           	
  4669                           l1567:
  4670  0012B2                     	movf	((c:___lbmod@divisor)),c,w
  4671  0012B2  5001               	subwf	((c:___lbmod@rem)),c
  4672  0012B4  5E04               	goto	l1569
  4673  0012B6  EF5D  F009         	
  4674                           l598:
  4675  0012BA                     	line	16
  4676                           	
  4677                           l1569:
  4678  0012BA                     	decfsz	((c:___lbmod@counter)),c
  4679  0012BA  2E03               	
  4680                           	goto	l1561
  4681  0012BC  EF4A  F009         	goto	l1571
  4682  0012C0  EF62  F009         	
  4683                           l599:
  4684  0012C4                     	line	17
  4685                           	
  4686                           l1571:
  4687  0012C4                     	movf	((c:___lbmod@rem)),c,w
  4688  0012C4  5004               	goto	l600
  4689  0012C6  EF65  F009         	
  4690                           l1573:
  4691  0012CA                     	line	18
  4692                           	
  4693                           l600:
  4694  0012CA                     	return	;funcret
  4695  0012CA  0012               	opt stack 0
  4696                           GLOBAL	__end_of___lbmod
  4697                           	__end_of___lbmod:
  4698  0012CC                     	signat	___lbmod,8313
  4699                           	global	_GenChar
  4700                           
  4701 ;; *************** function _GenChar *****************
  4702 ;; Defined at:
  4703 ;;		line 85 in file "lcd_utils.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  loc             1    wreg     unsigned char 
  4706 ;;  msg             2    2[COMRAM] PTR unsigned char 
  4707 ;;		 -> smiley(8), lock_broken(8), key(8), lock_end(8), 
  4708 ;;		 -> lock_L(8), lock_B(8), lock_R(8), lock_F(8), 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  loc             1    4[COMRAM] unsigned char 
  4711 ;;  i               1    5[COMRAM] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4721 ;;      Params:         2       0       0       0       0       0       0       0       0
  4722 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4724 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4725 ;;Total ram usage:        4 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    1
  4728 ;; This function calls:
  4729 ;;		_LCDchar
  4730 ;;		_LCDcommand
  4731 ;; This function is called by:
  4732 ;;		_main
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           psect	text16,class=CODE,space=0,reloc=2,group=0
  4736                           	file	"lcd_utils.c"
  4737                           	line	85
  4738                           global __ptext16
  4739                           __ptext16:
  4740  000F96                     psect	text16
  4741                           	file	"lcd_utils.c"
  4742                           	line	85
  4743                           	global	__size_of_GenChar
  4744                           	__size_of_GenChar	equ	__end_of_GenChar-_GenChar
  4745  0000                     	
  4746                           _GenChar:
  4747  000F96                     ;incstack = 0
  4748                           	opt	stack 29
  4749                           ;GenChar@loc stored from wreg
  4750                           	movwf	((c:GenChar@loc)),c
  4751  000F96  6E05               	line	87
  4752                           	
  4753                           l1393:
  4754  000F98                     ;lcd_utils.c: 86:     unsigned char i;;lcd_utils.c: 87:     if(loc<8)
  4755                           		movlw	08h-0
  4756  000F98  0E08               	cpfslt	((c:GenChar@loc)),c
  4757  000F9A  6005               	goto	u491
  4758  000F9C  EFD2  F007         	goto	u490
  4759  000FA0  EFD4  F007         
  4760                           u491:
  4761  000FA4                     	goto	l176
  4762  000FA4  EF00  F008         u490:
  4763  000FA8                     	line	89
  4764                           	
  4765                           l1395:
  4766  000FA8                     ;lcd_utils.c: 88:     {;lcd_utils.c: 89:         LCDcommand(0b01000000 + (loc*8));
  4767                           	movf	((c:GenChar@loc)),c,w
  4768  000FA8  5005               	mullw	08h
  4769  000FAA  0D08               	movf	(prodl),c,w
  4770  000FAC  50F3               	addlw	low(040h)
  4771  000FAE  0F40               	
  4772                           	call	_LCDcommand
  4773  000FB0  ECA0  F009         	line	90
  4774                           	
  4775                           l1397:
  4776  000FB4                     ;lcd_utils.c: 90:         for(i=0;i<8;i++)
  4777                           	movlw	low(0)
  4778  000FB4  0E00               	movwf	((c:GenChar@i)),c
  4779  000FB6  6E06               	
  4780                           l1399:
  4781  000FB8                     		movlw	08h-1
  4782  000FB8  0E07               	cpfsgt	((c:GenChar@i)),c
  4783  000FBA  6406               	goto	u501
  4784  000FBC  EFE2  F007         	goto	u500
  4785  000FC0  EFE4  F007         
  4786                           u501:
  4787  000FC4                     	goto	l1403
  4788  000FC4  EFE8  F007         u500:
  4789  000FC8                     	goto	l176
  4790  000FC8  EF00  F008         	
  4791                           l1401:
  4792  000FCC                     	goto	l176
  4793  000FCC  EF00  F008         	
  4794                           l174:
  4795  000FD0                     	line	91
  4796                           	
  4797                           l1403:
  4798  000FD0                     ;lcd_utils.c: 91:             LCDchar(msg[i]);
  4799                           	movf	((c:GenChar@i)),c,w
  4800  000FD0  5006               	mullw	01h
  4801  000FD2  0D01               	movf	(prodl),c,w
  4802  000FD4  50F3               	addwf	((c:GenChar@msg)),c,w
  4803  000FD6  2403               	movwf	c:fsr2l
  4804  000FD8  6ED9               	movf	(prodh),c,w
  4805  000FDA  50F4               	addwfc	((c:GenChar@msg+1)),c,w
  4806  000FDC  2004               	movwf	1+c:fsr2l
  4807  000FDE  6EDA               	movf	indf2,w
  4808  000FE0  50DF               	
  4809                           	call	_LCDchar
  4810  000FE2  ECC9  F009         	
  4811                           l1405:
  4812  000FE6                     	incf	((c:GenChar@i)),c
  4813  000FE6  2A06               	
  4814                           l1407:
  4815  000FE8                     		movlw	08h-1
  4816  000FE8  0E07               	cpfsgt	((c:GenChar@i)),c
  4817  000FEA  6406               	goto	u511
  4818  000FEC  EFFA  F007         	goto	u510
  4819  000FF0  EFFC  F007         
  4820                           u511:
  4821  000FF4                     	goto	l1403
  4822  000FF4  EFE8  F007         u510:
  4823  000FF8                     	goto	l176
  4824  000FF8  EF00  F008         	
  4825                           l175:
  4826  000FFC                     	goto	l176
  4827  000FFC  EF00  F008         	line	92
  4828                           ;lcd_utils.c: 92:     }
  4829                           	
  4830                           l173:
  4831  001000                     	line	93
  4832                           	
  4833                           l176:
  4834  001000                     	return	;funcret
  4835  001000  0012               	opt stack 0
  4836                           GLOBAL	__end_of_GenChar
  4837                           	__end_of_GenChar:
  4838  001002                     	signat	_GenChar,8313
  4839                           	global	_LCDcommand
  4840                           
  4841 ;; *************** function _LCDcommand *****************
  4842 ;; Defined at:
  4843 ;;		line 19 in file "lcd_utils.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  a               1    wreg     unsigned char 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;  a               1    1[COMRAM] unsigned char 
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  1    wreg      void 
  4850 ;; Registers used:
  4851 ;;		wreg
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4857 ;;      Params:         0       0       0       0       0       0       0       0       0
  4858 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4859 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4860 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4861 ;;Total ram usage:        2 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_level_up
  4867 ;;		_game_over_seq
  4868 ;;		_out_of_screen
  4869 ;;		_iniLCD
  4870 ;;		_CG_char
  4871 ;;		_MoveCursor
  4872 ;;		_MoveLCD
  4873 ;;		_GenChar
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           psect	text17,class=CODE,space=0,reloc=2,group=0
  4877                           	line	19
  4878                           global __ptext17
  4879                           __ptext17:
  4880  001340                     psect	text17
  4881                           	file	"lcd_utils.c"
  4882                           	line	19
  4883                           	global	__size_of_LCDcommand
  4884                           	__size_of_LCDcommand	equ	__end_of_LCDcommand-_LCDcommand
  4885  0000                     	
  4886                           _LCDcommand:
  4887  001340                     ;incstack = 0
  4888                           	opt	stack 28
  4889                           ;LCDcommand@a stored from wreg
  4890                           	movwf	((c:LCDcommand@a)),c
  4891  001340  6E02               	line	20
  4892                           	
  4893                           l1269:
  4894  001342                     ;lcd_utils.c: 20:     PORTEbits.RE0 = 0;
  4895                           	bcf	((c:3972)),c,0	;volatile
  4896  001342  9084               	line	21
  4897                           	
  4898                           l1271:
  4899  001344                     ;lcd_utils.c: 21:     PORTD = a;
  4900                           	movff	(c:LCDcommand@a),(c:3971)	;volatile
  4901  001344  C002  FF83         	line	22
  4902                           	
  4903                           l1273:
  4904  001348                     ;lcd_utils.c: 22:     PORTEbits.RE1 = 1;
  4905                           	bsf	((c:3972)),c,1	;volatile
  4906  001348  8284               	line	23
  4907                           	
  4908                           l1275:
  4909  00134A                     ;lcd_utils.c: 23:     _delay((unsigned long)((1)*(8000000/4000.0)));
  4910                           	opt asmopt_push
  4911                           opt asmopt_off
  4912                           movlw	3
  4913  00134A  0E03               movwf	(??_LCDcommand+0+0)&0ffh,c,f
  4914  00134C  6E01               	movlw	152
  4915  00134E  0E98               u927:
  4916  001350                     decfsz	wreg,f
  4917  001350  2EE8               	bra	u927
  4918  001352  D7FE               	decfsz	(??_LCDcommand+0+0)&0ffh,c,f
  4919  001354  2E01               	bra	u927
  4920  001356  D7FC               opt asmopt_pop
  4921                           
  4922                           	line	24
  4923                           	
  4924                           l1277:
  4925  001358                     ;lcd_utils.c: 24:     PORTEbits.RE1 = 0;
  4926                           	bcf	((c:3972)),c,1	;volatile
  4927  001358  9284               	line	25
  4928                           	
  4929                           l1279:
  4930  00135A                     ;lcd_utils.c: 25:     _delay((unsigned long)((1)*(8000000/4000.0)));
  4931                           	opt asmopt_push
  4932                           opt asmopt_off
  4933                           movlw	3
  4934  00135A  0E03               movwf	(??_LCDcommand+0+0)&0ffh,c,f
  4935  00135C  6E01               	movlw	152
  4936  00135E  0E98               u937:
  4937  001360                     decfsz	wreg,f
  4938  001360  2EE8               	bra	u937
  4939  001362  D7FE               	decfsz	(??_LCDcommand+0+0)&0ffh,c,f
  4940  001364  2E01               	bra	u937
  4941  001366  D7FC               opt asmopt_pop
  4942                           
  4943                           	goto	l144
  4944  001368  EFB6  F009         	line	26
  4945                           	
  4946                           l1281:
  4947  00136C                     	line	27
  4948                           ;lcd_utils.c: 26:     return;
  4949                           	
  4950                           l144:
  4951  00136C                     	return	;funcret
  4952  00136C  0012               	opt stack 0
  4953                           GLOBAL	__end_of_LCDcommand
  4954                           	__end_of_LCDcommand:
  4955  00136E                     	signat	_LCDcommand,4217
  4956                           	global	_LCDchar
  4957                           
  4958 ;; *************** function _LCDchar *****************
  4959 ;; Defined at:
  4960 ;;		line 29 in file "lcd_utils.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;  a               1    wreg     unsigned char 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  a               1    0[COMRAM] unsigned char 
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4974 ;;      Params:         0       0       0       0       0       0       0       0       0
  4975 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4977 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4978 ;;Total ram usage:        1 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; This function calls:
  4981 ;;		Nothing
  4982 ;; This function is called by:
  4983 ;;		_move_lock
  4984 ;;		_CG_char
  4985 ;;		_GenChar
  4986 ;;		_LCDString
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           psect	text18,class=CODE,space=0,reloc=2,group=0
  4990                           	line	29
  4991                           global __ptext18
  4992                           __ptext18:
  4993  001392                     psect	text18
  4994                           	file	"lcd_utils.c"
  4995                           	line	29
  4996                           	global	__size_of_LCDchar
  4997                           	__size_of_LCDchar	equ	__end_of_LCDchar-_LCDchar
  4998  0000                     	
  4999                           _LCDchar:
  5000  001392                     ;incstack = 0
  5001                           	opt	stack 28
  5002                           ;LCDchar@a stored from wreg
  5003                           	movwf	((c:LCDchar@a)),c
  5004  001392  6E01               	line	30
  5005                           	
  5006                           l1259:
  5007  001394                     ;lcd_utils.c: 30:     PORTD = a;
  5008                           	movff	(c:LCDchar@a),(c:3971)	;volatile
  5009  001394  C001  FF83         	line	31
  5010                           	
  5011                           l1261:
  5012  001398                     ;lcd_utils.c: 31:     PORTEbits.RE0 = 1;
  5013                           	bsf	((c:3972)),c,0	;volatile
  5014  001398  8084               	line	32
  5015                           	
  5016                           l1263:
  5017  00139A                     ;lcd_utils.c: 32:     PORTEbits.RE1 = 1;
  5018                           	bsf	((c:3972)),c,1	;volatile
  5019  00139A  8284               	line	33
  5020                           	
  5021                           l1265:
  5022  00139C                     ;lcd_utils.c: 33:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  5023                           	opt asmopt_push
  5024                           opt asmopt_off
  5025                           	movlw	26
  5026  00139C  0E1A               u947:
  5027  00139E                     decfsz	wreg,f
  5028  00139E  2EE8               	bra	u947
  5029  0013A0  D7FE               	nop2
  5030  0013A2  D000               opt asmopt_pop
  5031                           
  5032                           	line	34
  5033                           	
  5034                           l1267:
  5035  0013A4                     ;lcd_utils.c: 34:     PORTEbits.RE1 = 0;
  5036                           	bcf	((c:3972)),c,1	;volatile
  5037  0013A4  9284               	line	35
  5038                           	
  5039                           l147:
  5040  0013A6                     	return	;funcret
  5041  0013A6  0012               	opt stack 0
  5042                           GLOBAL	__end_of_LCDchar
  5043                           	__end_of_LCDchar:
  5044  0013A8                     	signat	_LCDchar,4217
  5045                           psect	smallconst
  5046                           	db 0	; dummy byte at the end
  5047  000814  00                 	global	__smallconst
  5048                           	global	__mediumconst
  5049                           	GLOBAL	__activetblptr
  5050                           __activetblptr	EQU	2
  5051  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  5052                           	PSECT	rparam,class=COMRAM,space=1,noexec
  5053                           	GLOBAL	__Lrparam
  5054                           	FNCONF	rparam,??,?
  5055                           	GLOBAL	___rparam_used
  5056                           	___rparam_used EQU 1
  5057  0000                     	GLOBAL	___param_bank
  5058                           	___param_bank EQU 0
  5059  0000                     GLOBAL	__Lparam, __Hparam
  5060                           GLOBAL	__Lrparam, __Hrparam
  5061                           __Lparam	EQU	__Lrparam
  5062  0000                     __Hparam	EQU	__Hrparam
  5063  0000                     	end


Data Sizes:
    Strings     19
    Constant    0
    Data        116
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      95
    BANK0           160      0      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCDString@msg	PTR unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[9]), 

    GenChar@msg	PTR unsigned char  size(2) Largest target is 8
		 -> smiley(BANK0[8]), lock_broken(BANK0[8]), key(BANK0[8]), lock_end(BANK0[8]), 
		 -> lock_L(BANK0[8]), lock_B(BANK0[8]), lock_R(COMRAM[8]), lock_F(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_level_up
    _out_of_screen->_CG_char
    _move_stage->_rand_key
    _rand_key->_rand
    _rand->___omul
    _MoveLCD->_LCDcommand
    _move_lock->_MoveCursor
    _level_up->_CG_char
    _iniLCD->_LCDcommand
    _game_over_seq->_CG_char
    _MoveCursor->_LCDcommand
    _LCDString->_LCDchar
    _CG_char->_LCDcommand
    _GenChar->_LCDcommand

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   13565
                                             41 COMRAM     7     7      0
                            _CG_char
                            _GenChar
                            ___lbmod
                      _game_over_seq
                             _iniLCD
                           _level_up
                 _lock_sprite_switch
                          _move_lock
                         _move_stage
                      _out_of_screen
 ---------------------------------------------------------------------------------
 (1) _out_of_screen                                        2     2      0    2621
                                              7 COMRAM     2     2      0
                            _CG_char
                          _LCDString
                         _LCDcommand
                         _MoveCursor
 ---------------------------------------------------------------------------------
 (1) _move_stage                                           0     0      0    2241
                            _MoveLCD
                           _rand_key
 ---------------------------------------------------------------------------------
 (2) _rand_key                                             5     3      2    2029
                                             34 COMRAM     5     3      2
                            _CG_char
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                10     8      2     370
                                             24 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (4) ___omul                                              24     8     16     370
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (2) _MoveLCD                                              9     8      1     212
                                              2 COMRAM     9     8      1
                         _LCDcommand
 ---------------------------------------------------------------------------------
 (1) _move_lock                                            7     7      0     734
                                              6 COMRAM     7     7      0
                            _LCDchar
                         _MoveCursor
 ---------------------------------------------------------------------------------
 (1) _lock_sprite_switch                                   2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _level_up                                            34    34      0    2623
                                              7 COMRAM    34    34      0
                            _CG_char
                          _LCDString
                         _LCDcommand
                         _MoveCursor
 ---------------------------------------------------------------------------------
 (1) _iniLCD                                               1     1      0      22
                                              2 COMRAM     1     1      0
                         _LCDcommand
 ---------------------------------------------------------------------------------
 (1) _game_over_seq                                        2     2      0    2621
                                              7 COMRAM     2     2      0
                            _CG_char
                          _LCDString
                         _LCDcommand
                         _MoveCursor
 ---------------------------------------------------------------------------------
 (2) _MoveCursor                                           4     3      1     712
                                              2 COMRAM     4     3      1
                         _LCDcommand
 ---------------------------------------------------------------------------------
 (2) _LCDString                                            2     0      2     295
                                              1 COMRAM     2     0      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _CG_char                                              5     3      2    1592
                                              2 COMRAM     5     3      2
                            _LCDchar
                         _LCDcommand
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     235
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _GenChar                                              4     2      2     786
                                              2 COMRAM     4     2      2
                            _LCDchar
                         _LCDcommand
 ---------------------------------------------------------------------------------
 (3) _LCDcommand                                           2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCDchar                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CG_char
     _LCDchar
     _LCDcommand
   _GenChar
     _LCDchar
     _LCDcommand
   ___lbmod
   _game_over_seq
     _CG_char
       _LCDchar
       _LCDcommand
     _LCDString
       _LCDchar
     _LCDcommand
     _MoveCursor
       _LCDcommand
   _iniLCD
     _LCDcommand
   _level_up
     _CG_char
       _LCDchar
       _LCDcommand
     _LCDString
       _LCDchar
     _LCDcommand
     _MoveCursor
       _LCDcommand
   _lock_sprite_switch
   _move_lock
     _LCDchar
     _MoveCursor
       _LCDcommand
   _move_stage
     _MoveLCD
       _LCDcommand
     _rand_key
       _CG_char
         _LCDchar
         _LCDcommand
       _rand
         ___omul
   _out_of_screen
     _CG_char
       _LCDchar
       _LCDcommand
     _LCDString
       _LCDchar
     _LCDcommand
     _MoveCursor
       _LCDcommand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      50       5       50.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     30      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AF      20        0.0%
DATA                 0      0      AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Oct 10 16:39:25 2020

              _out_of_screen 0F24                           l90 0A00                           l91 0A04  
                         l83 08BE                           l92 0A08                           l84 091A  
                         l85 0986                           l86 0962                           l95 0B44  
                         l87 0A08                           l96 0B78                           l88 09C4  
                         l97 0BD6                           l89 09E6                           l98 0C0A  
                         l99 0C0A                  __CFG_BOR$ON 000000                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                  __CFG_LVP$ON 000000                          l110 1078  
                        l102 106A                          l111 1080                          l103 1036  
                        l112 1088                          l104 106A                          l121 0E76  
                        l113 1090                          l122 0E7C                          l114 10D2  
                        l107 1098                          l203 0E8E                          l108 1070  
                        l204 0EC0                          l125 0B0C                          l141 112C  
                        l109 10D2                          l205 0F02                          l150 1152  
                        l206 0F22                          l151 117A                          l144 136C  
                        l152 1176                          l128 0F94                          l153 1186  
                        l170 0DC6                          l162 0D62                          l147 13A6  
                        l163 0D36                          l156 11AC                          l164 0D10  
                        l173 1000                          l157 11D4                          l165 0D5E  
                        l174 0FD0                          l182 12E8                          l158 11D0  
                        l166 0DC0                          l175 0FFC                          l183 12D0  
                        l159 11DE                          l167 0D94                          l176 1000  
                        l600 12CA                          l184 1308                          l168 0D6E  
                        l185 1308                          l169 0DBC                          l179 133E  
                        l597 1294                          l598 12BA                          l599 12C4  
                        l867 0CEA                 __CFG_CPB$OFF 000000                          u400 1140  
                        u401 113C                          u410 1164                          u411 1160  
                        u500 0FC8                          u420 0CD8                          u501 0FC4  
                        u510 0FF8                          u430 119A                          u511 0FF4  
                        u431 1196                          u440 11BE                          u520 0B1C  
                        u600 101C                          u441 11BA                          u521 0B18  
                        u425 0CC6                          u601 1018                          u530 0B2E  
                        u450 0D04                          u610 102E                 __CFG_CPD$OFF 000000  
                        u531 0B2A                          u451 0D00                          u371 0E84  
                        u611 102A                          u540 0B52                          u460 0D5A  
                        u380 0E9C                          u700 09B8                          u621 0E3A  
                        u541 0B4E                          u461 0D56                          u381 0E98  
                        u701 09B4                          u550 0B62                          u470 0DB8  
                        u390 0F02                          u710 09DE                          u631 0E4C  
                        u551 0B5E                          u471 0DB4                          u391 0EFE  
                        u711 09DA                          u480 1304                          u640 0E6E  
                        u560 0B86                          u720 09F8                          u481 1300  
                        u641 0E6A                          u561 0B82                          u721 09F4  
                        u490 0FA8                          u650 12B2                          u570 0BC0  
                        u491 0FA4                          u651 12AE                          u571 0BBC  
                        u580 0BE4                          u660 0912                          u581 0BE0  
                        u661 090E                          u590 0BF4                          u670 0938  
                        u807 0DD8                          u591 0BF0                          u671 0934  
                        u680 0956                          u817 0E14                          u681 0952  
                        u737 08AC                          u690 0982                          u907 0ADA  
                        u827 10DA                          u691 097E                          u747 08DE  
                        u917 0AFE                          u837 10EE                          u757 0F34  
                        u927 1350                          u847 1102                          u767 0F62  
                        u937 1360                          u857 0A1C                          u777 0F86  
                        u947 139E                          u867 0A4A                          u787 0D20  
                        u877 0A6E                          u797 0D7E                          u887 0A92  
                        u897 0AB6                          _key 0098                          _pos 0044  
                        prod 000FF3                          wreg 000FE8                  ?_LCDcommand 0001  
            __end_of_CG_char 1188              __end_of_LCDchar 13A8                 __CFG_WDT$OFF 000000  
                       l1301 1164                         l1303 1168                         l1311 0CA0  
                       l1401 0FCC                         l1305 117A                         l1321 11AC  
                       l1313 0CEA                         l1403 0FD0                         l1307 1180  
                       l1323 11BE                         l1315 118A                         l1411 0B1C  
                       l1331 0CEE                         l1261 1398                         l1405 0FE6  
                       l1325 11C2                         l1317 119A                         l1421 0B52  
                       l1413 0B2E                         l1341 0D2E                         l1333 0CF4  
                       l1309 0C0C                         l1501 0F42                         l1263 139A  
                       l1271 1344                         l1407 0FE8                         l1327 11D4  
                       l1319 119E                         l1431 0B86                         l1423 0B62  
                       l1415 0B38                         l1351 0D8C                         l1343 0D36  
                       l1335 0D04                         l1511 1002                         l1503 0F4C  
                       l1265 139C                         l1281 136C                         l1273 1348  
                       l1329 11DE                         l1441 0BE4                         l1433 0BC0  
                       l1425 0B6C                         l1417 0B3E                         l1409 0B0E  
                       l1353 0D94                         l1337 0D10                         l1345 0D62  
                       l1361 1332                         l1521 1036                         l1513 100C  
                       l1505 0F58                         l1601 0894                         l1267 13A4  
                       l1259 1394                         l1275 134A                         l1371 12E8  
                       l1531 0DE6                         l1451 1070                         l1443 0BF4  
                       l1435 0BCA                         l1427 0B72                         l1419 0B44  
                       l1347 0D6E                         l1355 0DC0                         l1339 0D16  
                       l1291 0ED2                         l1283 0E7E                         l1363 133E  
                       l1523 1050                         l1515 100E                         l1507 0F6E  
                       l1611 08D4                         l1603 08A2                         l1277 1358  
                       l1269 1342                         l1293 1130                         l1365 12CC  
                       l1381 110A                         l1373 10D4                         l1541 0E2C  
                       l1533 0DF0                         l1453 1078                         l1461 1098  
                       l1445 0BFE                         l1437 0BD0                         l1429 0B78  
                       l1349 0D74                         l1285 0E8E                         l1357 130C  
                       l1525 1064                         l1517 101C                         l1509 0F7C  
                       l1621 0938                         l1613 08EC                         l1605 08BE  
                       l1279 135A                         l1295 1140                         l1367 12D0  
                       l1471 0A2A                         l1391 112C                         l1383 1110  
                       l1375 10E2                         l1551 0E5C                         l1543 0E30  
                       l1535 0DFC                         l1527 0DC8                         l1455 1080  
                       l1447 0C04                         l1439 0BD6                         l1287 0E9C  
                       l1359 1324                         l1519 102E                         l1623 0956  
                       l1631 0986                         l1615 08F6                         l1607 08C2  
                       l1393 0F98                         l1561 1294                         l1297 1144  
                       l1369 12E0                         l1481 0A7A                         l1473 0A34  
                       l1385 1116                         l1377 10E8                         l1553 0E5E  
                       l1545 0E42                         l1537 0E0A                         l1529 0DCE  
                       l1457 1088                         l1449 106C                         l1289 0EC0  
                       l1641 09E6                         l1633 09B8                         l1625 095E  
                       l1617 0916                         l1609 08C6                         l1395 0FA8  
                       l1571 12C4                         l1563 129C                         l1299 1152  
                       l1491 0AD0                         l1483 0A88                         l1475 0A40  
                       l1467 0A0C                         l1387 111C                         l1379 10FC  
                       l1555 0E6E                         l1547 0E54                         l1539 0E22  
                       l1459 1094                         l1643 09F8                         l1635 09C0  
                       l1627 0962                         l1619 091A                         l1397 0FB4  
                       l1573 12CA                         l1565 12A0                         l1493 0AE6  
                       l1485 0A9E                         l1477 0A56                         l1469 0A12  
                       l1389 1122                         l1557 0E76                         l1549 0E58  
                       l1637 09C4                         l1629 0966                         l1581 081E  
                       l1399 0FB8                         l1567 12B2                         l1559 1288  
                       l1495 0AF4                         l1487 0AAC                         l1479 0A64  
                       l1639 09DE                         l1591 084E                         l1583 0820  
                       l1575 0816                         l1569 12BA                         l1489 0AC2  
                       l1649 10AC                         l1497 0F24                         l1593 085C  
                       l1585 082E                         l1577 081A                         l1499 0F2A  
                       l1595 086A                         l1587 0832                         l1579 081C  
                       l1597 0878                         l1589 0840                         l1599 0886  
                       STR_1 080B                         STR_2 0801                         STR_3 0801  
                       _icon 0057                         _main 0816                         _key_ 0042  
                       _line 0043                         _rand 0C0C                         _seed 0058  
                       indf2 000FDF                         fsr1l 000FE1                         fsr2l 000FD9  
                       prodh 000FF4                         prodl 000FF3                         start 0000  
              __CFG_IESO$OFF 000000              __end_of_GenChar 1002           __size_of_LCDString 003E  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000               ?_out_of_screen 0001  
            __end_of_MoveLCD 0DC8                __CFG_PLLDIV$1 000000               __CFG_CCP2MX$ON 000000  
                      ?_main 0001                        ?_rand 0019              __end_of___lbmod 12CC  
                      _PORTD 000F83                __CFG_USBDIV$1 000000                        _TRISA 000F92  
                      _TRISD 000F95                        _TRISE 000F96                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000                        _level 0041                        _shift 0056  
                      main@i 002F                rand_key@k_pos 0025                   MoveLCD@dir 0007  
                 MoveLCD@inc 0003                        tablat 000FF5  __size_of_lock_sprite_switch 0068  
                      plusw1 000FE3                        plusw2 000FDB                        status 000FD8  
                CG_char@line 0003               __CFG_ICPRT$OFF 000000              __initialization 11E0  
        __size_of_LCDcommand 002E                 __end_of_main 0A0C                 __end_of_rand 0CEC  
                     ??_main 002A                       ??_rand 001B                __activetblptr 000002  
                  ??_CG_char 0005                    ??_LCDchar 0001                  LCDcommand@a 0002  
          __end_of_LCDString 130A                    ??_GenChar 0005                   _MoveCursor 1188  
                     _OSCCON 000FD3                MoveCursor@cmd 0004                    ??_MoveLCD 0004  
             __CFG_XINST$OFF 000000              ??_out_of_screen 0008                       ___omul 0E7E  
             __CFG_STVREN$ON 000000                    ??___lbmod 0002                       _iniLCD 10D4  
                     _lock_B 00A8                       _lock_F 004D                       _lock_L 00A0  
                     _lock_R 0045                       clear_0 1226             __end_of_level_up 0E7E  
           __end_of_rand_key 1340                       _smiley 0080                 LCDString@msg 0002  
      __end_of_game_over_seq 0B0E                 __pdataCOMRAM 0031                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
            ___lbmod@divisor 0001                   __accesstop 0060      __end_of__initialization 122C  
            ___lbmod@counter 0003              __CFG_PBADEN$OFF 000000                ___rparam_used 000001  
             __pcstackCOMRAM 0001                 __pidataBANK0 1236                  MoveCursor@x 0006  
                MoveCursor@y 0003                 ??_LCDcommand 0001                  ?_MoveCursor 0003  
                    ?___omul 0001           __end_of_LCDcommand 136E                      ?_iniLCD 0001  
        ___omul@multiplicand 0009           __size_of_move_lock 00FE                      _CG_char 112E  
                    _LCDchar 1392                      _GenChar 0F96              __CFG_VREGEN$OFF 000000  
                  ?_level_up 0001                    ?_rand_key 0023                      _MoveLCD 0CEC  
                    __Hparam 0000                      __Lparam 0000              __size_of___omul 00A6  
                    ___lbmod 1286                 __psmallconst 0800              __size_of_iniLCD 005A  
                    __pcinit 11E0                      __ramtop 0800                      __ptext0 0816  
                    __ptext1 0F24                      __ptext2 1002                      __ptext3 130A  
                    __ptext4 0C0C                      __ptext5 0E7E                      __ptext6 0CEC  
                    __ptext7 0B0E                      __ptext8 106C                      __ptext9 0DC8  
        __size_of_MoveCursor 0058                      _key_pos 0039   __end_of_lock_sprite_switch 10D4  
               MoveLCD@i_351 000A                    _LCDString 12CC         end_of_initialization 122C  
             ___omul@product 0011            __end_of_move_lock 0C0C                __Lmediumconst 0000  
                 ??_level_up 0008                   ??_rand_key 0025                   _move_stage 1002  
                    postdec1 000FE5                      postinc0 000FEE                      postinc2 000FDE  
                  _PORTAbits 000F80                    _PORTEbits 000F84             ___lbmod@dividend 0002  
                 ?_LCDString 0002                  ___lbmod@rem 0004             level_up@key_line 001A  
      __end_of_out_of_screen 0F96               __end_of___omul 0F24                __pidataCOMRAM 136E  
             __end_of_iniLCD 112E                   CG_char@cmd 0006                   CG_char@row 0004  
        start_initialization 11E0                 ??_MoveCursor 0004            ___omul@multiplier 0001  
     __size_of_game_over_seq 0102                  ?_move_stage 0001                     ??___omul 0011  
                   ??_iniLCD 0003                  __pdataBANK0 0060             __CFG_LPT1OSC$OFF 000000  
         __end_of_MoveCursor 11E0                     ?_CG_char 0003                     ?_LCDchar 0001  
                __pbssCOMRAM 0055                     CG_char@a 0005                     LCDchar@a 0001  
                ??_LCDString 0004                     ?_GenChar 0003                     ?_MoveLCD 0003  
          __size_of_level_up 00B6            __size_of_rand_key 0036                     ?___lbmod 0001  
                __smallconst 0800                _game_over_seq 0A0C          __size_of_move_stage 006A  
                   GenChar@i 0006                    _move_lock 0B0E           _lock_sprite_switch 106C  
           __CFG_WDTPS$32768 000000          ?_lock_sprite_switch 0001                   _ADCON1bits 000FC1  
             ?_game_over_seq 0001              level_up@key_pos 000A             __size_of_CG_char 005A  
           __size_of_LCDchar 0016                    copy_data0 11F4                    copy_data1 1214  
                   MoveLCD@i 0008         ??_lock_sprite_switch 0001             __size_of_GenChar 006C  
                   __Hrparam 0000                   ?_move_lock 0001                     __Lrparam 0000  
           __size_of_MoveLCD 00DC             __size_of___lbmod 0046                  _key_pointer 0055  
                   __ptext10 10D4                     __ptext11 0A0C                     __ptext12 1188  
                   __ptext13 12CC                     __ptext14 112E                     __ptext15 1286  
                   __ptext16 0F96                     __ptext17 1340                     __ptext18 1392  
                _lock_broken 0088                     _key_line 0031                __size_of_main 01F6  
              __size_of_rand 00E0                     _level_up 0DC8                     _lock_end 0090  
                   _rand_key 130A                 ??_move_stage 0028             rand_key@ene_line 0026  
                 GenChar@loc 0005                   GenChar@msg 0003              ??_game_over_seq 0008  
      __CFG_CPUDIV$OSC1_PLL2 000000                   _LCDcommand 1340           __end_of_move_stage 106C  
     __size_of_out_of_screen 0072                level_up@F3527 0070                level_up@F3529 0060  
                ??_move_lock 0007          __CFG_FOSC$INTOSC_EC 000000  
